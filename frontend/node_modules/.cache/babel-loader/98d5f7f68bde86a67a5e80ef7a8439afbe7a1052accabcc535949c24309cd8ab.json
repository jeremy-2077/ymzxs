{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'Reports',\n  data: function data() {\n    return {\n      // 日期选择\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      // 统计数据\n      statisticsData: {\n        totalReservations: 3258,\n        averageUsage: 72,\n        checkInRate: 89,\n        violationRate: 4.5\n      },\n      // 图表选项\n      dailyReservationUnit: 'day',\n      // 表格数据\n      activeTab: 'roomStats',\n      // 自习室统计数据\n      roomStatsData: [{\n        roomName: '一号自习室（静音区）',\n        totalSeats: 120,\n        reservationCount: 856,\n        usageRate: 78,\n        checkInRate: 92,\n        violationRate: 3.5,\n        peakHours: '13:00-17:00'\n      }, {\n        roomName: '二号自习室（讨论区）',\n        totalSeats: 80,\n        reservationCount: 623,\n        usageRate: 65,\n        checkInRate: 85,\n        violationRate: 5.2,\n        peakHours: '15:00-19:00'\n      }, {\n        roomName: '三号自习室（电源区）',\n        totalSeats: 60,\n        reservationCount: 712,\n        usageRate: 83,\n        checkInRate: 90,\n        violationRate: 4.1,\n        peakHours: '14:00-18:00'\n      }, {\n        roomName: '四号自习室（综合区）',\n        totalSeats: 150,\n        reservationCount: 1067,\n        usageRate: 86,\n        checkInRate: 88,\n        violationRate: 4.8,\n        peakHours: '10:00-16:00'\n      }],\n      // 预约统计数据\n      reservationStatsData: [{\n        date: '2023-06-10',\n        reservationCount: 327,\n        checkInCount: 298,\n        cancelCount: 18,\n        violationCount: 11,\n        checkInRate: 91.1,\n        peakTime: '14:00-16:00'\n      }, {\n        date: '2023-06-09',\n        reservationCount: 315,\n        checkInCount: 279,\n        cancelCount: 21,\n        violationCount: 15,\n        checkInRate: 88.6,\n        peakTime: '15:00-17:00'\n      }, {\n        date: '2023-06-08',\n        reservationCount: 308,\n        checkInCount: 275,\n        cancelCount: 23,\n        violationCount: 10,\n        checkInRate: 89.3,\n        peakTime: '13:00-15:00'\n      }, {\n        date: '2023-06-07',\n        reservationCount: 331,\n        checkInCount: 301,\n        cancelCount: 17,\n        violationCount: 13,\n        checkInRate: 91.0,\n        peakTime: '14:00-16:00'\n      }, {\n        date: '2023-06-06',\n        reservationCount: 318,\n        checkInCount: 282,\n        cancelCount: 20,\n        violationCount: 16,\n        checkInRate: 88.7,\n        peakTime: '15:00-17:00'\n      }],\n      // 用户活跃度数据\n      userStatsData: [{\n        userType: '学生',\n        userCount: 980,\n        activeUsers: 725,\n        reservationCount: 2856,\n        avgReservation: 2.9,\n        activeRate: 74,\n        preferredRoom: '一号自习室（静音区）'\n      }, {\n        userType: '教师',\n        userCount: 210,\n        activeUsers: 135,\n        reservationCount: 402,\n        avgReservation: 1.9,\n        activeRate: 64,\n        preferredRoom: '三号自习室（电源区）'\n      }, {\n        userType: '研究生',\n        userCount: 180,\n        activeUsers: 155,\n        reservationCount: 580,\n        avgReservation: 3.2,\n        activeRate: 86,\n        preferredRoom: '四号自习室（综合区）'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initCharts();\n  },\n  methods: {\n    // 初始化图表\n    initCharts: function initCharts() {\n      this.$nextTick(function () {\n        // 实际应用中应该使用真实的图表库，如echarts\n        console.log('初始化图表');\n      });\n    },\n    // 日期范围变化\n    handleDateChange: function handleDateChange(dates) {\n      console.log('日期范围变化:', dates);\n      // 更新统计数据和图表\n    },\n    // 设置预定义的日期范围\n    setDateRange: function setDateRange(type) {\n      var end = new Date();\n      var start = new Date();\n\n      // 避免在case中直接声明变量\n      var day, month, quarterStartMonth;\n      switch (type) {\n        case 'today':\n          // 设置为今天的开始和结束\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'yesterday':\n          // 设置为昨天的开始和结束\n          start.setDate(start.getDate() - 1);\n          start.setHours(0, 0, 0, 0);\n          end.setDate(end.getDate() - 1);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'week':\n          // 设置为本周的开始和结束\n          day = start.getDay() || 7; // 如果是周日，getDay()返回0，我们将其视为7\n          start.setDate(start.getDate() - day + 1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'month':\n          // 设置为本月的开始和结束\n          start.setDate(1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'quarter':\n          // 设置为本季度的开始和结束\n          month = start.getMonth();\n          quarterStartMonth = Math.floor(month / 3) * 3;\n          start.setMonth(quarterStartMonth, 1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n      }\n      this.dateRange = [start, end];\n      this.handleDateChange(this.dateRange);\n    },\n    // 导出报表\n    exportReport: function exportReport() {\n      var _this = this;\n      this.$message.info('正在导出报表，请稍候...');\n\n      // 模拟导出过程\n      setTimeout(function () {\n        _this.$message.success('报表导出成功');\n      }, 1500);\n    },\n    // 获取使用率状态\n    getUsageRateStatus: function getUsageRateStatus(rate) {\n      if (rate >= 90) {\n        return 'exception';\n      } else if (rate >= 70) {\n        return 'warning';\n      } else {\n        return 'success';\n      }\n    },\n    // 获取用户类型颜色\n    getUserTypeColor: function getUserTypeColor(type) {\n      var typeMap = {\n        '学生': 'primary',\n        '教师': 'success',\n        '研究生': 'warning'\n      };\n      return typeMap[type] || 'info';\n    }\n  },\n  watch: {\n    // 监听图表单位变化\n    dailyReservationUnit: function dailyReservationUnit(newValue) {\n      console.log('图表单位变化:', newValue);\n      // 重新渲染图表\n      this.initCharts();\n    },\n    // 监听标签页变化\n    activeTab: function activeTab(newValue) {\n      console.log('标签页变化:', newValue);\n    }\n  }\n};","map":{"version":3,"names":["name","data","dateRange","Date","getTime","pickerOptions","shortcuts","text","onClick","picker","end","start","setTime","$emit","statisticsData","totalReservations","averageUsage","checkInRate","violationRate","dailyReservationUnit","activeTab","roomStatsData","roomName","totalSeats","reservationCount","usageRate","peakHours","reservationStatsData","date","checkInCount","cancelCount","violationCount","peakTime","userStatsData","userType","userCount","activeUsers","avgReservation","activeRate","preferredRoom","mounted","initCharts","methods","$nextTick","console","log","handleDateChange","dates","setDateRange","type","day","month","quarterStartMonth","setHours","setDate","getDate","getDay","getMonth","Math","floor","setMonth","exportReport","_this","$message","info","setTimeout","success","getUsageRateStatus","rate","getUserTypeColor","typeMap","watch","newValue"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/admin/Reports.vue"],"sourcesContent":["<template>\n  <div class=\"reports-container\">\n    <!-- 时间范围选择 -->\n    <el-card class=\"filter-card\">\n      <div class=\"filter-row\">\n        <div class=\"date-picker\">\n          <span class=\"label\">统计时间：</span>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            :picker-options=\"pickerOptions\"\n            @change=\"handleDateChange\">\n          </el-date-picker>\n        </div>\n        \n        <div class=\"preset-dates\">\n          <el-button size=\"small\" @click=\"setDateRange('today')\">今日</el-button>\n          <el-button size=\"small\" @click=\"setDateRange('yesterday')\">昨日</el-button>\n          <el-button size=\"small\" @click=\"setDateRange('week')\">本周</el-button>\n          <el-button size=\"small\" @click=\"setDateRange('month')\">本月</el-button>\n          <el-button size=\"small\" @click=\"setDateRange('quarter')\">本季度</el-button>\n        </div>\n        \n        <div class=\"export-btn\">\n          <el-button type=\"primary\" icon=\"el-icon-download\" @click=\"exportReport\">导出报表</el-button>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 数据概览 -->\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\" class=\"data-card\">\n          <div class=\"data-card-content\">\n            <div class=\"data-value\">{{ statisticsData.totalReservations }}</div>\n            <div class=\"data-label\">总预约数</div>\n          </div>\n          <div class=\"data-trend\">\n            <span class=\"trend-text\">同比增长</span>\n            <span class=\"trend-value up\">+15.2%</span>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\" class=\"data-card\">\n          <div class=\"data-card-content\">\n            <div class=\"data-value\">{{ statisticsData.averageUsage }}%</div>\n            <div class=\"data-label\">平均使用率</div>\n          </div>\n          <div class=\"data-trend\">\n            <span class=\"trend-text\">同比增长</span>\n            <span class=\"trend-value up\">+5.8%</span>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\" class=\"data-card\">\n          <div class=\"data-card-content\">\n            <div class=\"data-value\">{{ statisticsData.checkInRate }}%</div>\n            <div class=\"data-label\">签到率</div>\n          </div>\n          <div class=\"data-trend\">\n            <span class=\"trend-text\">同比增长</span>\n            <span class=\"trend-value up\">+2.3%</span>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\" class=\"data-card\">\n          <div class=\"data-card-content\">\n            <div class=\"data-value\">{{ statisticsData.violationRate }}%</div>\n            <div class=\"data-label\">违约率</div>\n          </div>\n          <div class=\"data-trend\">\n            <span class=\"trend-text\">同比下降</span>\n            <span class=\"trend-value down\">-3.5%</span>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 图表展示 -->\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"12\">\n        <el-card shadow=\"hover\" class=\"chart-card\">\n          <template #header>\n            <div class=\"clearfix\">\n              <span>每日预约量</span>\n              <el-radio-group v-model=\"dailyReservationUnit\" size=\"mini\" style=\"float: right;\">\n                <el-radio-button label=\"day\">按日</el-radio-button>\n                <el-radio-button label=\"week\">按周</el-radio-button>\n                <el-radio-button label=\"month\">按月</el-radio-button>\n              </el-radio-group>\n            </div>\n          </template>\n          <div class=\"chart-container\">\n            <div ref=\"dailyReservationChart\" style=\"width: 100%; height: 350px;\"></div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card shadow=\"hover\" class=\"chart-card\">\n          <template #header>\n            <div class=\"clearfix\">\n              <span>自习室使用率对比</span>\n            </div>\n          </template>\n          <div class=\"chart-container\">\n            <div ref=\"roomUsageChart\" style=\"width: 100%; height: 350px;\"></div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"12\">\n        <el-card shadow=\"hover\" class=\"chart-card\">\n          <template #header>\n            <div class=\"clearfix\">\n              <span>时段分布</span>\n            </div>\n          </template>\n          <div class=\"chart-container\">\n            <div ref=\"timeDistributionChart\" style=\"width: 100%; height: 350px;\"></div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card shadow=\"hover\" class=\"chart-card\">\n          <template #header>\n            <div class=\"clearfix\">\n              <span>用户类型分布</span>\n            </div>\n          </template>\n          <div class=\"chart-container\">\n            <div ref=\"userTypeChart\" style=\"width: 100%; height: 350px;\"></div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 详细数据表格 -->\n    <el-card shadow=\"hover\" style=\"margin-top: 20px;\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>数据详情</span>\n          <el-tabs v-model=\"activeTab\" style=\"margin-top: 15px;\">\n            <el-tab-pane label=\"自习室统计\" name=\"roomStats\"></el-tab-pane>\n            <el-tab-pane label=\"预约数据\" name=\"reservationStats\"></el-tab-pane>\n            <el-tab-pane label=\"用户活跃度\" name=\"userStats\"></el-tab-pane>\n          </el-tabs>\n        </div>\n      </template>\n      \n      <!-- 自习室统计 -->\n      <div v-if=\"activeTab === 'roomStats'\" class=\"table-container\">\n        <el-table :data=\"roomStatsData\" border stripe style=\"width: 100%\">\n          <el-table-column prop=\"roomName\" label=\"自习室名称\"></el-table-column>\n          <el-table-column prop=\"totalSeats\" label=\"座位数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"reservationCount\" label=\"预约数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"usageRate\" label=\"使用率\" width=\"120\">\n            <template v-slot=\"scope\">\n              <el-progress \n                :percentage=\"scope.row.usageRate\" \n                :status=\"getUsageRateStatus(scope.row.usageRate)\">\n              </el-progress>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"checkInRate\" label=\"签到率\" width=\"120\">\n            <template v-slot=\"scope\">\n              <el-progress :percentage=\"scope.row.checkInRate\" color=\"#67C23A\"></el-progress>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"violationRate\" label=\"违约率\" width=\"120\">\n            <template v-slot=\"scope\">\n              <el-progress :percentage=\"scope.row.violationRate\" color=\"#F56C6C\"></el-progress>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"peakHours\" label=\"高峰时段\" width=\"150\"></el-table-column>\n        </el-table>\n      </div>\n      \n      <!-- 预约数据 -->\n      <div v-if=\"activeTab === 'reservationStats'\" class=\"table-container\">\n        <el-table :data=\"reservationStatsData\" border stripe style=\"width: 100%\">\n          <el-table-column prop=\"date\" label=\"日期\" width=\"120\"></el-table-column>\n          <el-table-column prop=\"reservationCount\" label=\"预约数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"checkInCount\" label=\"签到数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"cancelCount\" label=\"取消数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"violationCount\" label=\"违约数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"checkInRate\" label=\"签到率\" width=\"120\">\n            <template v-slot=\"scope\">\n              <el-progress :percentage=\"scope.row.checkInRate\" color=\"#67C23A\"></el-progress>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"peakTime\" label=\"高峰时段\" width=\"150\"></el-table-column>\n        </el-table>\n      </div>\n      \n      <!-- 用户活跃度 -->\n      <div v-if=\"activeTab === 'userStats'\" class=\"table-container\">\n        <el-table :data=\"userStatsData\" border stripe style=\"width: 100%\">\n          <el-table-column prop=\"userType\" label=\"用户类型\" width=\"120\">\n            <template v-slot=\"scope\">\n              <el-tag :type=\"getUserTypeColor(scope.row.userType)\">{{ scope.row.userType }}</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"userCount\" label=\"用户数\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"activeUsers\" label=\"活跃用户\" width=\"120\"></el-table-column>\n          <el-table-column prop=\"reservationCount\" label=\"预约总数\" width=\"120\"></el-table-column>\n          <el-table-column prop=\"avgReservation\" label=\"人均预约\" width=\"120\"></el-table-column>\n          <el-table-column prop=\"activeRate\" label=\"活跃率\" width=\"150\">\n            <template v-slot=\"scope\">\n              <el-progress :percentage=\"scope.row.activeRate\" color=\"#409EFF\"></el-progress>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"preferredRoom\" label=\"偏好自习室\"></el-table-column>\n        </el-table>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Reports',\n  data() {\n    return {\n      // 日期选择\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', [start, end]);\n            }\n          },\n          {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit('pick', [start, end]);\n            }\n          },\n          {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit('pick', [start, end]);\n            }\n          }\n        ]\n      },\n      \n      // 统计数据\n      statisticsData: {\n        totalReservations: 3258,\n        averageUsage: 72,\n        checkInRate: 89,\n        violationRate: 4.5\n      },\n      \n      // 图表选项\n      dailyReservationUnit: 'day',\n      \n      // 表格数据\n      activeTab: 'roomStats',\n      \n      // 自习室统计数据\n      roomStatsData: [\n        {\n          roomName: '一号自习室（静音区）',\n          totalSeats: 120,\n          reservationCount: 856,\n          usageRate: 78,\n          checkInRate: 92,\n          violationRate: 3.5,\n          peakHours: '13:00-17:00'\n        },\n        {\n          roomName: '二号自习室（讨论区）',\n          totalSeats: 80,\n          reservationCount: 623,\n          usageRate: 65,\n          checkInRate: 85,\n          violationRate: 5.2,\n          peakHours: '15:00-19:00'\n        },\n        {\n          roomName: '三号自习室（电源区）',\n          totalSeats: 60,\n          reservationCount: 712,\n          usageRate: 83,\n          checkInRate: 90,\n          violationRate: 4.1,\n          peakHours: '14:00-18:00'\n        },\n        {\n          roomName: '四号自习室（综合区）',\n          totalSeats: 150,\n          reservationCount: 1067,\n          usageRate: 86,\n          checkInRate: 88,\n          violationRate: 4.8,\n          peakHours: '10:00-16:00'\n        }\n      ],\n      \n      // 预约统计数据\n      reservationStatsData: [\n        {\n          date: '2023-06-10',\n          reservationCount: 327,\n          checkInCount: 298,\n          cancelCount: 18,\n          violationCount: 11,\n          checkInRate: 91.1,\n          peakTime: '14:00-16:00'\n        },\n        {\n          date: '2023-06-09',\n          reservationCount: 315,\n          checkInCount: 279,\n          cancelCount: 21,\n          violationCount: 15,\n          checkInRate: 88.6,\n          peakTime: '15:00-17:00'\n        },\n        {\n          date: '2023-06-08',\n          reservationCount: 308,\n          checkInCount: 275,\n          cancelCount: 23,\n          violationCount: 10,\n          checkInRate: 89.3,\n          peakTime: '13:00-15:00'\n        },\n        {\n          date: '2023-06-07',\n          reservationCount: 331,\n          checkInCount: 301,\n          cancelCount: 17,\n          violationCount: 13,\n          checkInRate: 91.0,\n          peakTime: '14:00-16:00'\n        },\n        {\n          date: '2023-06-06',\n          reservationCount: 318,\n          checkInCount: 282,\n          cancelCount: 20,\n          violationCount: 16,\n          checkInRate: 88.7,\n          peakTime: '15:00-17:00'\n        }\n      ],\n      \n      // 用户活跃度数据\n      userStatsData: [\n        {\n          userType: '学生',\n          userCount: 980,\n          activeUsers: 725,\n          reservationCount: 2856,\n          avgReservation: 2.9,\n          activeRate: 74,\n          preferredRoom: '一号自习室（静音区）'\n        },\n        {\n          userType: '教师',\n          userCount: 210,\n          activeUsers: 135,\n          reservationCount: 402,\n          avgReservation: 1.9,\n          activeRate: 64,\n          preferredRoom: '三号自习室（电源区）'\n        },\n        {\n          userType: '研究生',\n          userCount: 180,\n          activeUsers: 155,\n          reservationCount: 580,\n          avgReservation: 3.2,\n          activeRate: 86,\n          preferredRoom: '四号自习室（综合区）'\n        }\n      ]\n    };\n  },\n  mounted() {\n    this.initCharts();\n  },\n  methods: {\n    // 初始化图表\n    initCharts() {\n      this.$nextTick(() => {\n        // 实际应用中应该使用真实的图表库，如echarts\n        console.log('初始化图表');\n      });\n    },\n    \n    // 日期范围变化\n    handleDateChange(dates) {\n      console.log('日期范围变化:', dates);\n      // 更新统计数据和图表\n    },\n    \n    // 设置预定义的日期范围\n    setDateRange(type) {\n      const end = new Date();\n      const start = new Date();\n      \n      // 避免在case中直接声明变量\n      let day, month, quarterStartMonth;\n      \n      switch (type) {\n        case 'today':\n          // 设置为今天的开始和结束\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'yesterday':\n          // 设置为昨天的开始和结束\n          start.setDate(start.getDate() - 1);\n          start.setHours(0, 0, 0, 0);\n          end.setDate(end.getDate() - 1);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'week':\n          // 设置为本周的开始和结束\n          day = start.getDay() || 7; // 如果是周日，getDay()返回0，我们将其视为7\n          start.setDate(start.getDate() - day + 1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'month':\n          // 设置为本月的开始和结束\n          start.setDate(1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n        case 'quarter':\n          // 设置为本季度的开始和结束\n          month = start.getMonth();\n          quarterStartMonth = Math.floor(month / 3) * 3;\n          start.setMonth(quarterStartMonth, 1);\n          start.setHours(0, 0, 0, 0);\n          end.setHours(23, 59, 59, 999);\n          break;\n      }\n      \n      this.dateRange = [start, end];\n      this.handleDateChange(this.dateRange);\n    },\n    \n    // 导出报表\n    exportReport() {\n      this.$message.info('正在导出报表，请稍候...');\n      \n      // 模拟导出过程\n      setTimeout(() => {\n        this.$message.success('报表导出成功');\n      }, 1500);\n    },\n    \n    // 获取使用率状态\n    getUsageRateStatus(rate) {\n      if (rate >= 90) {\n        return 'exception';\n      } else if (rate >= 70) {\n        return 'warning';\n      } else {\n        return 'success';\n      }\n    },\n    \n    // 获取用户类型颜色\n    getUserTypeColor(type) {\n      const typeMap = {\n        '学生': 'primary',\n        '教师': 'success',\n        '研究生': 'warning'\n      };\n      return typeMap[type] || 'info';\n    }\n  },\n  watch: {\n    // 监听图表单位变化\n    dailyReservationUnit(newValue) {\n      console.log('图表单位变化:', newValue);\n      // 重新渲染图表\n      this.initCharts();\n    },\n    \n    // 监听标签页变化\n    activeTab(newValue) {\n      console.log('标签页变化:', newValue);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.reports-container {\n  padding: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.date-picker {\n  display: flex;\n  align-items: center;\n}\n\n.label {\n  margin-right: 10px;\n}\n\n.preset-dates {\n  display: flex;\n  gap: 5px;\n}\n\n.data-card {\n  height: 120px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.data-card-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.data-value {\n  font-size: 28px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.data-label {\n  font-size: 14px;\n  color: #909399;\n  margin-top: 8px;\n}\n\n.data-trend {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n  color: #909399;\n}\n\n.trend-value.up {\n  color: #67C23A;\n}\n\n.trend-value.down {\n  color: #F56C6C;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n}\n\n.chart-container {\n  width: 100%;\n  height: 350px;\n}\n\n.table-container {\n  margin-top: 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}