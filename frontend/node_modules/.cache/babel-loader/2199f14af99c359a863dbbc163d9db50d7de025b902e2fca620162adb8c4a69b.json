{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"reservations-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"qrcode-container\"\n};\nvar _hoisted_5 = {\n  \"class\": \"manual-checkin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"reservation-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"我的预约\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $options.refreshReservations\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\"刷新\")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_tabs, {\n        modelValue: $data.activeTab,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.activeTab = $event;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_tab_pane, {\n            label: \"当前预约\",\n            name: \"current\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n                data: $data.currentReservations,\n                style: {\n                  \"width\": \"100%\"\n                },\n                \"empty-text\": \"暂无当前预约记录\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_table_column, {\n                    label: \"自习室\",\n                    prop: \"studyRoomName\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"座位编号\",\n                    prop: \"seatNumber\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"预约日期\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatDate(scope.row.date)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"开始时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatTime(scope.row.startTime)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"结束时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatTime(scope.row.endTime)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"状态\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_tag, {\n                        type: $options.getStatusType(scope.row.status)\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"操作\",\n                    width: \"200\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [scope.row.status === 'reserved' ? (_openBlock(), _createBlock(_component_el_button, {\n                        key: 0,\n                        type: \"success\",\n                        size: \"small\",\n                        onClick: function onClick($event) {\n                          return $options.handleCheckIn(scope.row);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[7] || (_cache[7] = [_createTextVNode(\" 签到 \")]);\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), scope.row.status === 'checked_in' ? (_openBlock(), _createBlock(_component_el_button, {\n                        key: 1,\n                        type: \"warning\",\n                        size: \"small\",\n                        onClick: function onClick($event) {\n                          return $options.handleCheckOut(scope.row);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[8] || (_cache[8] = [_createTextVNode(\" 签退 \")]);\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), scope.row.status === 'reserved' ? (_openBlock(), _createBlock(_component_el_button, {\n                        key: 2,\n                        type: \"danger\",\n                        size: \"small\",\n                        onClick: function onClick($event) {\n                          return $options.handleCancel(scope.row);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[9] || (_cache[9] = [_createTextVNode(\" 取消 \")]);\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"历史记录\",\n            name: \"history\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n                data: $data.historyReservations,\n                style: {\n                  \"width\": \"100%\"\n                },\n                \"empty-text\": \"暂无历史预约记录\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_table_column, {\n                    label: \"自习室\",\n                    prop: \"studyRoomName\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"座位编号\",\n                    prop: \"seatNumber\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"预约日期\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatDate(scope.row.date)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"开始时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatTime(scope.row.startTime)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"结束时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString($options.formatTime(scope.row.endTime)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"实际签到时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString(scope.row.checkInTime ? $options.formatDateTime(scope.row.checkInTime) : '未签到'), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"实际签退时间\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createTextVNode(_toDisplayString(scope.row.checkOutTime ? $options.formatDateTime(scope.row.checkOutTime) : '未签退'), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"状态\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_tag, {\n                        type: $options.getStatusType(scope.row.status)\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_pagination, {\n                \"current-page\": $data.currentPage,\n                \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n                  return $data.currentPage = $event;\n                }),\n                \"page-size\": $data.pageSize,\n                \"onUpdate:pageSize\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.pageSize = $event;\n                }),\n                \"page-sizes\": [10, 20, 50],\n                layout: \"total, sizes, prev, pager, next, jumper\",\n                total: $data.total,\n                onSizeChange: $options.handleSizeChange,\n                onCurrentChange: $options.handleCurrentChange\n              }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 签到对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"扫码签到\",\n    modelValue: $data.checkInDialogVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.checkInDialogVisible = $event;\n    }),\n    width: \"400px\",\n    center: \"\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$data.selectedReservation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[11] || (_cache[11] = _createElementVNode(\"p\", null, \"请扫描自习室内的二维码进行签到\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n        modelValue: $data.checkInCode,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n          return $data.checkInCode = $event;\n        }),\n        placeholder: \"或手动输入签到码\",\n        style: {\n          \"margin-bottom\": \"15px\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitCheckIn\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\"确认签到\")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","size","onClick","$options","refreshReservations","_cache","_createTextVNode","_","_component_el_tabs","modelValue","$data","activeTab","$event","_component_el_tab_pane","label","name","_createBlock","_component_el_table","data","currentReservations","style","_component_el_table_column","prop","scope","_toDisplayString","formatDate","row","date","formatTime","startTime","endTime","_component_el_tag","getStatusType","status","getStatusText","width","handleCheckIn","_createCommentVNode","handleCheckOut","handleCancel","loading","historyReservations","checkInTime","formatDateTime","checkOutTime","_hoisted_3","_component_el_pagination","currentPage","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","title","checkInDialogVisible","center","selectedReservation","_hoisted_4","_hoisted_5","_component_el_input","checkInCode","placeholder","submitCheckIn"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/student/MyReservations.vue"],"sourcesContent":["<template>\n  <div class=\"reservations-container\">\n    <el-card class=\"reservation-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>我的预约</h2>\n          <el-button type=\"primary\" size=\"small\" @click=\"refreshReservations\">刷新</el-button>\n        </div>\n      </template>\n      \n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane label=\"当前预约\" name=\"current\">\n          <el-table \n            :data=\"currentReservations\" \n            style=\"width: 100%\" \n            v-loading=\"loading\"\n            empty-text=\"暂无当前预约记录\">\n            <el-table-column label=\"自习室\" prop=\"studyRoomName\"></el-table-column>\n            <el-table-column label=\"座位编号\" prop=\"seatNumber\"></el-table-column>\n            <el-table-column label=\"预约日期\">\n              <template #default=\"scope\">\n                {{ formatDate(scope.row.date) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"开始时间\">\n              <template #default=\"scope\">\n                {{ formatTime(scope.row.startTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"结束时间\">\n              <template #default=\"scope\">\n                {{ formatTime(scope.row.endTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"状态\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"200\">\n              <template #default=\"scope\">\n                <el-button \n                  v-if=\"scope.row.status === 'reserved'\" \n                  type=\"success\" \n                  size=\"small\" \n                  @click=\"handleCheckIn(scope.row)\">\n                  签到\n                </el-button>\n                <el-button \n                  v-if=\"scope.row.status === 'checked_in'\" \n                  type=\"warning\" \n                  size=\"small\" \n                  @click=\"handleCheckOut(scope.row)\">\n                  签退\n                </el-button>\n                <el-button \n                  v-if=\"scope.row.status === 'reserved'\" \n                  type=\"danger\" \n                  size=\"small\" \n                  @click=\"handleCancel(scope.row)\">\n                  取消\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n        \n        <el-tab-pane label=\"历史记录\" name=\"history\">\n          <el-table \n            :data=\"historyReservations\" \n            style=\"width: 100%\" \n            v-loading=\"loading\"\n            empty-text=\"暂无历史预约记录\">\n            <el-table-column label=\"自习室\" prop=\"studyRoomName\"></el-table-column>\n            <el-table-column label=\"座位编号\" prop=\"seatNumber\"></el-table-column>\n            <el-table-column label=\"预约日期\">\n              <template #default=\"scope\">\n                {{ formatDate(scope.row.date) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"开始时间\">\n              <template #default=\"scope\">\n                {{ formatTime(scope.row.startTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"结束时间\">\n              <template #default=\"scope\">\n                {{ formatTime(scope.row.endTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"实际签到时间\">\n              <template #default=\"scope\">\n                {{ scope.row.checkInTime ? formatDateTime(scope.row.checkInTime) : '未签到' }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"实际签退时间\">\n              <template #default=\"scope\">\n                {{ scope.row.checkOutTime ? formatDateTime(scope.row.checkOutTime) : '未签退' }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"状态\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              v-model:current-page=\"currentPage\"\n              v-model:page-size=\"pageSize\"\n              :page-sizes=\"[10, 20, 50]\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"total\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n            />\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n\n    <!-- 签到对话框 -->\n    <el-dialog\n      title=\"扫码签到\"\n      v-model=\"checkInDialogVisible\"\n      width=\"400px\"\n      center>\n      <div class=\"qrcode-container\" v-if=\"selectedReservation\">\n        <p>请扫描自习室内的二维码进行签到</p>\n        <div class=\"manual-checkin\">\n          <el-input \n            v-model=\"checkInCode\" \n            placeholder=\"或手动输入签到码\"\n            style=\"margin-bottom: 15px;\">\n          </el-input>\n          <el-button type=\"primary\" @click=\"submitCheckIn\">确认签到</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'MyReservations',\n  data() {\n    return {\n      activeTab: 'current',\n      loading: false,\n      currentReservations: [],\n      historyReservations: [],\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      selectedReservation: null,\n      checkInDialogVisible: false,\n      checkInCode: ''\n    }\n  },\n  created() {\n    this.fetchReservations()\n  },\n  methods: {\n    fetchReservations() {\n      this.loading = true\n      \n      // 获取当前预约\n      axios.get('/api/reservations/current')\n        .then(response => {\n          this.currentReservations = response.data\n          this.loading = false\n        })\n        .catch(error => {\n          console.error('获取当前预约失败', error)\n          this.$message.error('获取当前预约失败')\n          this.loading = false\n        })\n      \n      // 获取历史预约\n      if (this.activeTab === 'history') {\n        this.fetchHistoryReservations()\n      }\n    },\n    \n    fetchHistoryReservations() {\n      this.loading = true\n      axios.get('/api/reservations/history', {\n        params: {\n          page: this.currentPage,\n          per_page: this.pageSize\n        }\n      })\n        .then(response => {\n          this.historyReservations = response.data.items\n          this.total = response.data.total\n          this.loading = false\n        })\n        .catch(error => {\n          console.error('获取历史预约失败', error)\n          this.$message.error('获取历史预约失败')\n          this.loading = false\n        })\n    },\n    \n    refreshReservations() {\n      this.fetchReservations()\n    },\n    \n    handleSizeChange(size) {\n      this.pageSize = size\n      this.fetchHistoryReservations()\n    },\n    \n    handleCurrentChange(page) {\n      this.currentPage = page\n      this.fetchHistoryReservations()\n    },\n    \n    formatDate(date) {\n      if (!date) return ''\n      const d = new Date(date)\n      return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`\n    },\n    \n    formatTime(time) {\n      if (!time) return ''\n      return time\n    },\n    \n    formatDateTime(datetime) {\n      if (!datetime) return ''\n      const d = new Date(datetime)\n      return `${this.formatDate(d)} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`\n    },\n    \n    getStatusType(status) {\n      switch (status) {\n        case 'reserved': return 'primary'\n        case 'checked_in': return 'success'\n        case 'checked_out': return 'info'\n        case 'cancelled': return 'danger'\n        case 'expired': return 'warning'\n        default: return 'info'\n      }\n    },\n    \n    getStatusText(status) {\n      switch (status) {\n        case 'reserved': return '已预约'\n        case 'checked_in': return '已签到'\n        case 'checked_out': return '已签退'\n        case 'cancelled': return '已取消'\n        case 'expired': return '已过期'\n        default: return '未知状态'\n      }\n    },\n    \n    handleCheckIn(reservation) {\n      this.selectedReservation = reservation\n      this.checkInDialogVisible = true\n      this.checkInCode = ''\n    },\n    \n    submitCheckIn() {\n      if (!this.checkInCode) {\n        this.$message.warning('请输入签到码')\n        return\n      }\n      \n      axios.post(`/api/reservations/${this.selectedReservation.id}/check-in`, {\n        check_in_code: this.checkInCode\n      })\n        .then(response => {\n          this.$message.success('签到成功')\n          this.checkInDialogVisible = false\n          this.fetchReservations()\n        })\n        .catch(error => {\n          if (error.response && error.response.data && error.response.data.message) {\n            this.$message.error(error.response.data.message)\n          } else {\n            this.$message.error('签到失败，请检查签到码是否正确')\n          }\n        })\n    },\n    \n    handleCheckOut(reservation) {\n      this.$confirm('确定要签退吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          axios.post(`/api/reservations/${reservation.id}/check-out`)\n            .then(response => {\n              this.$message.success('签退成功')\n              this.fetchReservations()\n            })\n            .catch(error => {\n              if (error.response && error.response.data && error.response.data.message) {\n                this.$message.error(error.response.data.message)\n              } else {\n                this.$message.error('签退失败')\n              }\n            })\n        })\n        .catch(() => {})\n    },\n    \n    handleCancel(reservation) {\n      this.$confirm('确定要取消该预约吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          axios.post(`/api/reservations/${reservation.id}/cancel`)\n            .then(response => {\n              this.$message.success('预约已取消')\n              this.fetchReservations()\n            })\n            .catch(error => {\n              if (error.response && error.response.data && error.response.data.message) {\n                this.$message.error(error.response.data.message)\n              } else {\n                this.$message.error('取消预约失败')\n              }\n            })\n        })\n        .catch(() => {})\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'history') {\n        this.fetchHistoryReservations()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservations-container {\n  padding: 20px;\n}\n\n.reservation-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nh2 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.qrcode-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n}\n\n.manual-checkin {\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}