{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  name: 'StudentProfile',\n  data: function data() {\n    var _this = this;\n    // 验证密码\n    var validateNewPassword = function validateNewPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入新密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'));\n      } else {\n        if (_this.passwordForm.confirmPassword !== '') {\n          _this.$refs.passwordForm.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入新密码'));\n      } else if (value !== _this.passwordForm.newPassword) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      passwordLoading: false,\n      userForm: {\n        username: '',\n        studentId: '',\n        email: '',\n        name: '',\n        phone: ''\n      },\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        phone: [{\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号码',\n          trigger: 'blur'\n        }]\n      },\n      passwordRules: {\n        currentPassword: [{\n          required: true,\n          message: '请输入当前密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          validator: validateNewPassword,\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.fetchUserProfile();\n  },\n  methods: {\n    fetchUserProfile: function fetchUserProfile() {\n      var _this2 = this;\n      this.loading = true;\n      axios.get('/api/user/profile').then(function (response) {\n        var data = response.data;\n        _this2.userForm = {\n          username: data.username,\n          studentId: data.student_id,\n          email: data.email || '',\n          name: data.name || '',\n          phone: data.phone || ''\n        };\n        _this2.loading = false;\n      })[\"catch\"](function (error) {\n        _this2.loading = false;\n        console.error('获取用户信息失败', error);\n        _this2.$message.error('获取用户信息失败');\n      });\n    },\n    saveProfile: function saveProfile() {\n      var _this3 = this;\n      this.$refs.userForm.validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n          axios.put('/api/user/profile', {\n            email: _this3.userForm.email,\n            name: _this3.userForm.name,\n            phone: _this3.userForm.phone\n          }).then(function (response) {\n            _this3.loading = false;\n            _this3.$message.success('个人信息更新成功');\n          })[\"catch\"](function (error) {\n            _this3.loading = false;\n            console.error('更新用户信息失败', error);\n            _this3.$message.error('更新个人信息失败');\n          });\n        }\n      });\n    },\n    changePassword: function changePassword() {\n      var _this4 = this;\n      this.$refs.passwordForm.validate(function (valid) {\n        if (valid) {\n          _this4.passwordLoading = true;\n          axios.put('/api/user/change-password', {\n            current_password: _this4.passwordForm.currentPassword,\n            new_password: _this4.passwordForm.newPassword\n          }).then(function (response) {\n            _this4.passwordLoading = false;\n            _this4.$message.success('密码修改成功');\n            _this4.resetPasswordForm();\n          })[\"catch\"](function (error) {\n            _this4.passwordLoading = false;\n            if (error.response && error.response.data && error.response.data.message) {\n              _this4.$message.error(error.response.data.message);\n            } else {\n              _this4.$message.error('密码修改失败');\n            }\n          });\n        }\n      });\n    },\n    resetPasswordForm: function resetPasswordForm() {\n      this.$refs.passwordForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","_this","validateNewPassword","rule","value","callback","Error","length","passwordForm","confirmPassword","$refs","validateField","validateConfirmPassword","newPassword","loading","passwordLoading","userForm","username","studentId","email","phone","currentPassword","rules","required","message","trigger","type","pattern","passwordRules","validator","created","fetchUserProfile","methods","_this2","get","then","response","student_id","error","console","$message","saveProfile","_this3","validate","valid","put","success","changePassword","_this4","current_password","new_password","resetPasswordForm","resetFields"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/student/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-card class=\"profile-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>个人信息</h2>\n        </div>\n      </template>\n      \n      <el-form :model=\"userForm\" :rules=\"rules\" ref=\"userForm\" label-width=\"80px\" v-loading=\"loading\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"学号\" prop=\"studentId\">\n          <el-input v-model=\"userForm.studentId\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"userForm.name\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"userForm.phone\"></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"saveProfile\">保存修改</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-card class=\"password-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>修改密码</h2>\n        </div>\n      </template>\n      \n      <el-form :model=\"passwordForm\" :rules=\"passwordRules\" ref=\"passwordForm\" label-width=\"100px\" v-loading=\"passwordLoading\">\n        <el-form-item label=\"当前密码\" prop=\"currentPassword\">\n          <el-input v-model=\"passwordForm.currentPassword\" type=\"password\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input v-model=\"passwordForm.newPassword\" type=\"password\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"passwordForm.confirmPassword\" type=\"password\"></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"changePassword\">修改密码</el-button>\n          <el-button @click=\"resetPasswordForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'StudentProfile',\n  data() {\n    // 验证密码\n    const validateNewPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入新密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'))\n      } else {\n        if (this.passwordForm.confirmPassword !== '') {\n          this.$refs.passwordForm.validateField('confirmPassword')\n        }\n        callback()\n      }\n    }\n    \n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入新密码'))\n      } else if (value !== this.passwordForm.newPassword) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    \n    return {\n      loading: false,\n      passwordLoading: false,\n      userForm: {\n        username: '',\n        studentId: '',\n        email: '',\n        name: '',\n        phone: ''\n      },\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        phone: [\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n        ]\n      },\n      passwordRules: {\n        currentPassword: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, validator: validateNewPassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.fetchUserProfile()\n  },\n  methods: {\n    fetchUserProfile() {\n      this.loading = true\n      axios.get('/api/user/profile')\n        .then(response => {\n          const data = response.data\n          this.userForm = {\n            username: data.username,\n            studentId: data.student_id,\n            email: data.email || '',\n            name: data.name || '',\n            phone: data.phone || ''\n          }\n          this.loading = false\n        })\n        .catch(error => {\n          this.loading = false\n          console.error('获取用户信息失败', error)\n          this.$message.error('获取用户信息失败')\n        })\n    },\n    saveProfile() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          axios.put('/api/user/profile', {\n            email: this.userForm.email,\n            name: this.userForm.name,\n            phone: this.userForm.phone\n          })\n            .then(response => {\n              this.loading = false\n              this.$message.success('个人信息更新成功')\n            })\n            .catch(error => {\n              this.loading = false\n              console.error('更新用户信息失败', error)\n              this.$message.error('更新个人信息失败')\n            })\n        }\n      })\n    },\n    changePassword() {\n      this.$refs.passwordForm.validate(valid => {\n        if (valid) {\n          this.passwordLoading = true\n          axios.put('/api/user/change-password', {\n            current_password: this.passwordForm.currentPassword,\n            new_password: this.passwordForm.newPassword\n          })\n            .then(response => {\n              this.passwordLoading = false\n              this.$message.success('密码修改成功')\n              this.resetPasswordForm()\n            })\n            .catch(error => {\n              this.passwordLoading = false\n              if (error.response && error.response.data && error.response.data.message) {\n                this.$message.error(error.response.data.message)\n              } else {\n                this.$message.error('密码修改失败')\n              }\n            })\n        }\n      })\n    },\n    resetPasswordForm() {\n      this.$refs.passwordForm.resetFields()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.profile-card, .password-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nh2 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n}\n</style> "],"mappings":";;;AAkEA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACL;IACA,IAAMC,mBAAkB,GAAI,SAAtBA,mBAAkBA,CAAKC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAK;MACrD,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC9B,OAAO,IAAIF,KAAK,CAACG,MAAK,GAAI,CAAC,EAAE;QAC3BF,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC;MAClC,OAAO;QACL,IAAIL,KAAI,CAACO,YAAY,CAACC,eAAc,KAAM,EAAE,EAAE;UAC5CR,KAAI,CAACS,KAAK,CAACF,YAAY,CAACG,aAAa,CAAC,iBAAiB;QACzD;QACAN,QAAQ,CAAC;MACX;IACF;IAEA,IAAMO,uBAAsB,GAAI,SAA1BA,uBAAsBA,CAAKT,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAK;MACzD,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,UAAU,CAAC;MAChC,OAAO,IAAIF,KAAI,KAAMH,KAAI,CAACO,YAAY,CAACK,WAAW,EAAE;QAClDR,QAAQ,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC;MACjC,OAAO;QACLD,QAAQ,CAAC;MACX;IACF;IAEA,OAAO;MACLS,OAAO,EAAE,KAAK;MACdC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,KAAK,EAAE,EAAE;QACTpB,IAAI,EAAE,EAAE;QACRqB,KAAK,EAAE;MACT,CAAC;MACDZ,YAAY,EAAE;QACZa,eAAe,EAAE,EAAE;QACnBR,WAAW,EAAE,EAAE;QACfJ,eAAe,EAAE;MACnB,CAAC;MACDa,KAAK,EAAE;QACLH,KAAK,EAAE,CACL;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,CAAC,EACvD;UAAEC,IAAI,EAAE,OAAO;UAAEF,OAAO,EAAE,YAAY;UAAEC,OAAO,EAAE;QAAO,EACzD;QACD1B,IAAI,EAAE,CACJ;UAAEwB,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,EACrD;QACDL,KAAK,EAAE,CACL;UAAEO,OAAO,EAAE,eAAe;UAAEH,OAAO,EAAE,YAAY;UAAEC,OAAO,EAAE;QAAO;MAEvE,CAAC;MACDG,aAAa,EAAE;QACbP,eAAe,EAAE,CACf;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,EACvD;QACDZ,WAAW,EAAE,CACX;UAAEU,QAAQ,EAAE,IAAI;UAAEM,SAAS,EAAE3B,mBAAmB;UAAEuB,OAAO,EAAE;QAAO,EACnE;QACDhB,eAAe,EAAE,CACf;UAAEc,QAAQ,EAAE,IAAI;UAAEM,SAAS,EAAEjB,uBAAuB;UAAEa,OAAO,EAAE;QAAO;MAE1E;IACF;EACF,CAAC;EACDK,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MAAA,IAAAE,MAAA;MACjB,IAAI,CAACnB,OAAM,GAAI,IAAG;MAClBhB,KAAK,CAACoC,GAAG,CAAC,mBAAmB,EAC1BC,IAAI,CAAC,UAAAC,QAAO,EAAK;QAChB,IAAMpC,IAAG,GAAIoC,QAAQ,CAACpC,IAAG;QACzBiC,MAAI,CAACjB,QAAO,GAAI;UACdC,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ;UACvBC,SAAS,EAAElB,IAAI,CAACqC,UAAU;UAC1BlB,KAAK,EAAEnB,IAAI,CAACmB,KAAI,IAAK,EAAE;UACvBpB,IAAI,EAAEC,IAAI,CAACD,IAAG,IAAK,EAAE;UACrBqB,KAAK,EAAEpB,IAAI,CAACoB,KAAI,IAAK;QACvB;QACAa,MAAI,CAACnB,OAAM,GAAI,KAAI;MACrB,CAAC,UACK,CAAC,UAAAwB,KAAI,EAAK;QACdL,MAAI,CAACnB,OAAM,GAAI,KAAI;QACnByB,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;QAC/BL,MAAI,CAACO,QAAQ,CAACF,KAAK,CAAC,UAAU;MAChC,CAAC;IACL,CAAC;IACDG,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACZ,IAAI,CAAChC,KAAK,CAACM,QAAQ,CAAC2B,QAAQ,CAAC,UAAAC,KAAI,EAAK;QACpC,IAAIA,KAAK,EAAE;UACTF,MAAI,CAAC5B,OAAM,GAAI,IAAG;UAClBhB,KAAK,CAAC+C,GAAG,CAAC,mBAAmB,EAAE;YAC7B1B,KAAK,EAAEuB,MAAI,CAAC1B,QAAQ,CAACG,KAAK;YAC1BpB,IAAI,EAAE2C,MAAI,CAAC1B,QAAQ,CAACjB,IAAI;YACxBqB,KAAK,EAAEsB,MAAI,CAAC1B,QAAQ,CAACI;UACvB,CAAC,EACEe,IAAI,CAAC,UAAAC,QAAO,EAAK;YAChBM,MAAI,CAAC5B,OAAM,GAAI,KAAI;YACnB4B,MAAI,CAACF,QAAQ,CAACM,OAAO,CAAC,UAAU;UAClC,CAAC,UACK,CAAC,UAAAR,KAAI,EAAK;YACdI,MAAI,CAAC5B,OAAM,GAAI,KAAI;YACnByB,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;YAC/BI,MAAI,CAACF,QAAQ,CAACF,KAAK,CAAC,UAAU;UAChC,CAAC;QACL;MACF,CAAC;IACH,CAAC;IACDS,cAAc,WAAdA,cAAcA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACf,IAAI,CAACtC,KAAK,CAACF,YAAY,CAACmC,QAAQ,CAAC,UAAAC,KAAI,EAAK;QACxC,IAAIA,KAAK,EAAE;UACTI,MAAI,CAACjC,eAAc,GAAI,IAAG;UAC1BjB,KAAK,CAAC+C,GAAG,CAAC,2BAA2B,EAAE;YACrCI,gBAAgB,EAAED,MAAI,CAACxC,YAAY,CAACa,eAAe;YACnD6B,YAAY,EAAEF,MAAI,CAACxC,YAAY,CAACK;UAClC,CAAC,EACEsB,IAAI,CAAC,UAAAC,QAAO,EAAK;YAChBY,MAAI,CAACjC,eAAc,GAAI,KAAI;YAC3BiC,MAAI,CAACR,QAAQ,CAACM,OAAO,CAAC,QAAQ;YAC9BE,MAAI,CAACG,iBAAiB,CAAC;UACzB,CAAC,UACK,CAAC,UAAAb,KAAI,EAAK;YACdU,MAAI,CAACjC,eAAc,GAAI,KAAI;YAC3B,IAAIuB,KAAK,CAACF,QAAO,IAAKE,KAAK,CAACF,QAAQ,CAACpC,IAAG,IAAKsC,KAAK,CAACF,QAAQ,CAACpC,IAAI,CAACwB,OAAO,EAAE;cACxEwB,MAAI,CAACR,QAAQ,CAACF,KAAK,CAACA,KAAK,CAACF,QAAQ,CAACpC,IAAI,CAACwB,OAAO;YACjD,OAAO;cACLwB,MAAI,CAACR,QAAQ,CAACF,KAAK,CAAC,QAAQ;YAC9B;UACF,CAAC;QACL;MACF,CAAC;IACH,CAAC;IACDa,iBAAiB,WAAjBA,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACzC,KAAK,CAACF,YAAY,CAAC4C,WAAW,CAAC;IACtC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}