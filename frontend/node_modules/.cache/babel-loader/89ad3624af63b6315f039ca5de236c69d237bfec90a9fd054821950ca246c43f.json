{"ast":null,"code":"import _typeof from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { Cpu, Sunny, Grid, SuccessFilled } from '@element-plus/icons-vue';\nexport default {\n  name: 'SeatMap',\n  components: {\n    Cpu: Cpu,\n    Sunny: Sunny,\n    Grid: Grid,\n    SuccessFilled: SuccessFilled\n  },\n  data: function data() {\n    return {\n      // 自习室数据\n      studyRooms: [{\n        id: 1,\n        name: '一号自习室（静音区）',\n        columns: 10,\n        zones: [{\n          id: 'A',\n          name: 'A区（靠窗）'\n        }, {\n          id: 'B',\n          name: 'B区（中间）'\n        }, {\n          id: 'C',\n          name: 'C区（电源）'\n        }]\n      }, {\n        id: 2,\n        name: '二号自习室（讨论区）',\n        columns: 8,\n        zones: [{\n          id: 'D',\n          name: 'D区（靠窗）'\n        }, {\n          id: 'E',\n          name: 'E区（中间）'\n        }, {\n          id: 'F',\n          name: 'F区（电源）'\n        }]\n      }, {\n        id: 3,\n        name: '三号自习室（电源区）',\n        columns: 6,\n        zones: [{\n          id: 'G',\n          name: 'G区（靠窗）'\n        }, {\n          id: 'H',\n          name: 'H区（中间）'\n        }]\n      }],\n      // 座位数据（模拟）\n      seats: [],\n      // 当前选择的自习室ID\n      activeRoom: '1',\n      // 当前选择的区域\n      selectedZone: 'all',\n      // 当前选择的日期和时间\n      selectedDate: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      // 当前选择的座位\n      selectedSeat: null,\n      // 预约表单\n      reservationForm: {\n        remark: ''\n      },\n      // 表单验证规则\n      reservationRules: {\n        remark: [{\n          max: 200,\n          message: '备注不能超过200个字符',\n          trigger: 'blur'\n        }]\n      },\n      // 预约提交状态\n      submitting: false,\n      // 预约成功弹窗\n      reservationSuccess: false\n    };\n  },\n  computed: {\n    // 当前自习室信息\n    currentRoom: function currentRoom() {\n      var _this = this;\n      return this.studyRooms.find(function (room) {\n        return room.id === parseInt(_this.activeRoom);\n      }) || null;\n    },\n    // 当前自习室区域\n    currentRoomZones: function currentRoomZones() {\n      var _this$currentRoom;\n      return ((_this$currentRoom = this.currentRoom) === null || _this$currentRoom === void 0 ? void 0 : _this$currentRoom.zones) || [];\n    },\n    // 过滤后的座位（当前区域）\n    filteredSeats: function filteredSeats() {\n      var _this2 = this;\n      if (!this.seats.length) return [];\n      return this.seats.filter(function (seat) {\n        // 过滤区域\n        if (_this2.selectedZone !== 'all' && seat.zone !== _this2.selectedZone) {\n          return false;\n        }\n\n        // 其他过滤条件（如果有）\n        return true;\n      });\n    },\n    // 可用座位数量\n    availableSeatsCount: function availableSeatsCount() {\n      return this.filteredSeats.filter(function (seat) {\n        return seat.status === 'available';\n      }).length;\n    },\n    // 总座位数量\n    totalSeatsCount: function totalSeatsCount() {\n      return this.filteredSeats.length;\n    },\n    // 格式化日期\n    formattedDate: function formattedDate() {\n      if (!this.selectedDate) return '';\n      var date = new Date(this.selectedDate);\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n    },\n    // 格式化时间范围\n    formattedTimeRange: function formattedTimeRange() {\n      if (!this.startTime || !this.endTime) return '';\n      return \"\".concat(this.startTime, \" - \").concat(this.endTime);\n    }\n  },\n  methods: {\n    // 处理自习室切换\n    handleRoomChange: function handleRoomChange() {\n      this.selectedSeat = null;\n      this.selectedZone = 'all';\n      this.loadSeats();\n    },\n    // 处理区域切换\n    handleZoneChange: function handleZoneChange() {\n      this.selectedSeat = null;\n    },\n    // 处理日期变化\n    handleDateChange: function handleDateChange() {\n      this.selectedSeat = null;\n      this.loadSeats();\n    },\n    // 处理时间变化\n    handleTimeChange: function handleTimeChange() {\n      console.log(\"当前 startTime 类型:\", _typeof(this.startTime), \"值:\", this.startTime);\n      console.log(\"当前 endTime 类型:\", _typeof(this.endTime), \"值:\", this.endTime);\n      if (this.startTime && this.endTime) {\n        this.selectedSeat = null;\n        this.loadSeats();\n      }\n    },\n    // 禁用日期（过去的日期）\n    disabledDate: function disabledDate(date) {\n      return date < new Date(new Date().setHours(0, 0, 0, 0));\n    },\n    // 加载座位数据\n    loadSeats: function loadSeats() {\n      var _this3 = this;\n      // 模拟API请求\n      // 实际项目中应该从后端获取，这里使用模拟数据\n\n      setTimeout(function () {\n        // 生成模拟座位数据\n        var generateSeats = function generateSeats(roomId, zoneIds) {\n          var seats = [];\n          var seatCount = roomId === 1 ? 80 : roomId === 2 ? 60 : 40;\n          for (var i = 1; i <= seatCount; i++) {\n            var zoneId = zoneIds[Math.floor(Math.random() * zoneIds.length)];\n            var seatNumber = \"\".concat(zoneId).concat(String(i).padStart(2, '0'));\n\n            // 随机状态，80%可用，20%已占用\n            var statusRandom = Math.random();\n            var status = 'available';\n            if (statusRandom > 0.8) {\n              status = 'occupied';\n            } else if (statusRandom > 0.75) {\n              status = 'maintenance';\n            }\n            seats.push({\n              id: \"\".concat(roomId, \"-\").concat(seatNumber),\n              number: seatNumber,\n              roomId: roomId,\n              zone: zoneId,\n              status: status,\n              hasSocket: Math.random() > 0.5,\n              isWindow: zoneId === 'A' || zoneId === 'D' || zoneId === 'G',\n              isTable: Math.random() > 0.8\n            });\n          }\n          return seats;\n        };\n        var roomId = parseInt(_this3.activeRoom);\n        var zoneIds = _this3.currentRoom.zones.map(function (zone) {\n          return zone.id;\n        });\n        _this3.seats = generateSeats(roomId, zoneIds);\n      }, 500);\n    },\n    // 选择座位\n    selectSeat: function selectSeat(seat) {\n      if (seat.status !== 'available') {\n        // 如果座位不可用，提示用户\n        if (seat.status === 'occupied') {\n          this.$message.warning('该座位已被预约');\n        } else if (seat.status === 'maintenance') {\n          this.$message.warning('该座位正在维修中');\n        }\n        return;\n      }\n\n      // 如果未选择时间段，提示用户\n      if (!this.startTime || !this.endTime) {\n        this.$message.warning('请先选择预约时间段');\n        return;\n      }\n      this.selectedSeat = seat;\n    },\n    // 取消选择\n    cancelSelection: function cancelSelection() {\n      this.selectedSeat = null;\n      this.reservationForm.remark = '';\n    },\n    // 提交预约\n    submitReservation: function submitReservation() {\n      var _this4 = this;\n      if (!this.selectedSeat) {\n        this.$message.warning('请先选择座位');\n        return;\n      }\n      if (!this.startTime || !this.endTime) {\n        this.$message.warning('请选择预约时间段');\n        return;\n      }\n      this.$refs.reservationFormRef.validate(function (valid) {\n        if (!valid) return;\n        _this4.submitting = true;\n\n        // 模拟预约API请求\n        setTimeout(function () {\n          _this4.submitting = false;\n          _this4.reservationSuccess = true;\n\n          // 预约成功后，清空选择\n          _this4.selectedSeat = null;\n          _this4.reservationForm.remark = '';\n        }, 1000);\n      });\n    },\n    // 前往我的预约页面\n    goToMyReservations: function goToMyReservations() {\n      this.reservationSuccess = false;\n      this.$router.push(\"/student/my-reservations\");\n    }\n  },\n  mounted: function mounted() {\n    // 从URL获取自习室ID参数\n    var room = this.$route.query.room;\n    if (room && this.studyRooms.some(function (r) {\n      return r.id === parseInt(room);\n    })) {\n      this.activeRoom = String(room);\n    }\n\n    // 初始加载座位数据\n    this.loadSeats();\n  }\n};","map":{"version":3,"names":["Cpu","Sunny","Grid","SuccessFilled","name","components","data","studyRooms","id","columns","zones","seats","activeRoom","selectedZone","selectedDate","Date","startTime","endTime","selectedSeat","reservationForm","remark","reservationRules","max","message","trigger","submitting","reservationSuccess","computed","currentRoom","_this","find","room","parseInt","currentRoomZones","_this$currentRoom","filteredSeats","_this2","length","filter","seat","zone","availableSeatsCount","status","totalSeatsCount","formattedDate","date","concat","getFullYear","String","getMonth","padStart","getDate","formattedTimeRange","methods","handleRoomChange","loadSeats","handleZoneChange","handleDateChange","handleTimeChange","console","log","_typeof","disabledDate","setHours","_this3","setTimeout","generateSeats","roomId","zoneIds","seatCount","i","zoneId","Math","floor","random","seatNumber","statusRandom","push","number","hasSocket","isWindow","isTable","map","selectSeat","$message","warning","cancelSelection","submitReservation","_this4","$refs","reservationFormRef","validate","valid","goToMyReservations","$router","mounted","$route","query","some","r"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/student/SeatMap.vue"],"sourcesContent":["<template>\n  <div class=\"seat-map-container\">\n    <!-- 自习室选择 -->\n    <el-card class=\"room-select-card\">\n      <div class=\"room-select\">\n        <el-tabs v-model=\"activeRoom\" @tab-click=\"handleRoomChange\">\n          <el-tab-pane \n            v-for=\"room in studyRooms\" \n            :key=\"room.id\" \n            :label=\"room.name\" \n            :name=\"String(room.id)\">\n          </el-tab-pane>\n        </el-tabs>\n        \n        <!-- 时间段选择 -->\n        <div class=\"time-select\">\n          <el-date-picker\n            v-model=\"selectedDate\"\n            type=\"date\"\n            placeholder=\"选择日期\"\n            :disabled-date=\"disabledDate\"\n            @change=\"handleDateChange\">\n          </el-date-picker>\n          \n          <div class=\"time-range\">\n            <!-- <el-time-select\n              v-model=\"startTime\"\n              class=\"time-picker\"\n              placeholder=\"开始时间\"\n              :step=\"60\"\n              :start=\"'08:00'\"\n              :end=\"'22:00'\"\n              @change=\"handleTimeChange\">\n            </el-time-select> -->\n            <span class=\"time-separator\">至</span>\n            <!-- <el-time-select\n              v-model=\"endTime\"\n              class=\"time-picker\"\n              placeholder=\"结束时间\"\n              :step=\"60\"\n              :start=\"'08:00'\"\n              :end=\"'22:00'\"\n              :disabled=\"!startTime\"\n              @change=\"handleTimeChange\">\n            </el-time-select> -->\n          </div>\n        </div>\n        \n        <!-- 区域选择 -->\n        <div class=\"zone-select\">\n          <el-radio-group v-model=\"selectedZone\" @change=\"handleZoneChange\">\n            <el-radio-button label=\"all\">全部区域</el-radio-button>\n            <el-radio-button\n              v-for=\"zone in currentRoomZones\"\n              :key=\"zone.id\"\n              :label=\"zone.id\">\n              {{ zone.name }}\n            </el-radio-button>\n          </el-radio-group>\n        </div>\n        \n        <!-- 座位状态指示 -->\n        <div class=\"seat-status-legend\">\n          <div class=\"status-item\">\n            <div class=\"status-indicator available\"></div>\n            <span>可预约</span>\n          </div>\n          <div class=\"status-item\">\n            <div class=\"status-indicator occupied\"></div>\n            <span>已占用</span>\n          </div>\n          <div class=\"status-item\">\n            <div class=\"status-indicator maintenance\"></div>\n            <span>维修中</span>\n          </div>\n          <div class=\"status-item\">\n            <div class=\"status-indicator selected\"></div>\n            <span>已选择</span>\n          </div>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 座位地图 -->\n    <el-card class=\"seat-map-card\">\n      <template #header>\n        <div class=\"seat-map-header\">\n          <h3>{{ currentRoom?.name || '选择自习室' }}</h3>\n          <div class=\"seat-count\">\n            <span>空闲座位: {{ availableSeatsCount }} / {{ totalSeatsCount }}</span>\n          </div>\n        </div>\n      </template>\n      \n      <div class=\"seat-map\">\n        <!-- 网格布局的座位图 -->\n        <div class=\"seat-grid\" :style=\"{ gridTemplateColumns: `repeat(${currentRoom?.columns || 10}, 1fr)` }\">\n          <div \n            v-for=\"seat in filteredSeats\"\n            :key=\"seat.id\" \n            class=\"seat-item\"\n            :class=\"{\n              'available': seat.status === 'available',\n              'occupied': seat.status === 'occupied',\n              'maintenance': seat.status === 'maintenance',\n              'selected': selectedSeat && selectedSeat.id === seat.id\n            }\"\n            @click=\"selectSeat(seat)\">\n            <div class=\"seat-number\">{{ seat.number }}</div>\n            <div class=\"seat-icons\">\n              <el-tooltip content=\"电源插座\" placement=\"top\" v-if=\"seat.hasSocket\">\n                 <el-icon><Cpu /></el-icon>\n              </el-tooltip>\n              <el-tooltip content=\"靠窗\" placement=\"top\" v-if=\"seat.isWindow\">\n                 <el-icon><Sunny /></el-icon>\n              </el-tooltip>\n               <el-tooltip content=\"四人桌\" placement=\"top\" v-if=\"seat.isTable\">\n                 <el-icon><Grid /></el-icon>\n              </el-tooltip>\n            </div>\n          </div>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 座位预约表单 -->\n    <el-card v-if=\"selectedSeat\" class=\"reservation-card\">\n      <template #header>\n        <div class=\"reservation-header\">\n          <h3>预约信息</h3>\n        </div>\n      </template>\n      \n      <el-form :model=\"reservationForm\" :rules=\"reservationRules\" ref=\"reservationFormRef\" label-width=\"100px\">\n        <el-form-item label=\"自习室\">\n          <el-input v-model=\"currentRoom.name\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"座位号\">\n          <el-input v-model=\"selectedSeat.number\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"座位类型\">\n          <el-tag v-if=\"selectedSeat.isWindow\" type=\"success\" effect=\"plain\" class=\"seat-tag\">靠窗</el-tag>\n          <el-tag v-if=\"selectedSeat.hasSocket\" type=\"primary\" effect=\"plain\" class=\"seat-tag\">电源插座</el-tag>\n          <el-tag v-if=\"selectedSeat.isTable\" type=\"warning\" effect=\"plain\" class=\"seat-tag\">四人桌</el-tag>\n        </el-form-item>\n        \n        <el-form-item label=\"预约日期\">\n          <el-input v-model=\"formattedDate\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"预约时段\">\n          <el-input v-model=\"formattedTimeRange\" disabled></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"reservationForm.remark\" type=\"textarea\" :rows=\"2\" placeholder=\"可选填\"></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitReservation\" :loading=\"submitting\">提交预约</el-button>\n          <el-button @click=\"cancelSelection\">取消选择</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 预约成功对话框 -->\n    <el-dialog\n      title=\"预约成功\"\n      v-model=\"reservationSuccess\"\n      width=\"400px\"\n      center>\n      <div class=\"success-content\">\n        <el-icon class=\"success-icon\"><SuccessFilled /></el-icon>\n        <h3>预约成功!</h3>\n        <p>自习室: {{ currentRoom?.name }}</p>\n        <p>座位号: {{ selectedSeat?.number }}</p>\n        <p>时间: {{ formattedDate }} {{ formattedTimeRange }}</p>\n        <div class=\"qrcode-container\">\n          <div class=\"qrcode\">\n            <!-- 预约二维码 -->\n            <img src=\"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=demo-reservation\" alt=\"预约二维码\" />\n          </div>\n          <p class=\"qrcode-tip\">请在预约时间前30分钟内到达并使用此二维码签到</p>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"reservationSuccess = false\">关闭</el-button>\n          <el-button type=\"primary\" @click=\"goToMyReservations\">查看我的预约</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { Cpu, Sunny, Grid, SuccessFilled } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'SeatMap',\n  components: {\n    Cpu,\n    Sunny,\n    Grid,\n    SuccessFilled\n  },\n  data() {\n    return {\n      // 自习室数据\n      studyRooms: [\n        {\n          id: 1,\n          name: '一号自习室（静音区）',\n          columns: 10,\n          zones: [\n            { id: 'A', name: 'A区（靠窗）' },\n            { id: 'B', name: 'B区（中间）' },\n            { id: 'C', name: 'C区（电源）' }\n          ]\n        },\n        {\n          id: 2,\n          name: '二号自习室（讨论区）',\n          columns: 8,\n          zones: [\n            { id: 'D', name: 'D区（靠窗）' },\n            { id: 'E', name: 'E区（中间）' },\n            { id: 'F', name: 'F区（电源）' }\n          ]\n        },\n        {\n          id: 3,\n          name: '三号自习室（电源区）',\n          columns: 6,\n          zones: [\n            { id: 'G', name: 'G区（靠窗）' },\n            { id: 'H', name: 'H区（中间）' }\n          ]\n        }\n      ],\n      \n      // 座位数据（模拟）\n      seats: [],\n      \n      // 当前选择的自习室ID\n      activeRoom: '1',\n      \n      // 当前选择的区域\n      selectedZone: 'all',\n      \n      // 当前选择的日期和时间\n      selectedDate: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      \n      // 当前选择的座位\n      selectedSeat: null,\n      \n      // 预约表单\n      reservationForm: {\n        remark: ''\n      },\n      \n      // 表单验证规则\n      reservationRules: {\n        remark: [\n          { max: 200, message: '备注不能超过200个字符', trigger: 'blur' }\n        ]\n      },\n      \n      // 预约提交状态\n      submitting: false,\n      \n      // 预约成功弹窗\n      reservationSuccess: false\n    };\n  },\n  computed: {\n    // 当前自习室信息\n    currentRoom() {\n      return this.studyRooms.find(room => room.id === parseInt(this.activeRoom)) || null;\n    },\n    \n    // 当前自习室区域\n    currentRoomZones() {\n      return this.currentRoom?.zones || [];\n    },\n    \n    // 过滤后的座位（当前区域）\n    filteredSeats() {\n      if (!this.seats.length) return [];\n      \n      return this.seats.filter(seat => {\n        // 过滤区域\n        if (this.selectedZone !== 'all' && seat.zone !== this.selectedZone) {\n          return false;\n        }\n        \n        // 其他过滤条件（如果有）\n        return true;\n      });\n    },\n    \n    // 可用座位数量\n    availableSeatsCount() {\n      return this.filteredSeats.filter(seat => seat.status === 'available').length;\n    },\n    \n    // 总座位数量\n    totalSeatsCount() {\n      return this.filteredSeats.length;\n    },\n    \n    // 格式化日期\n    formattedDate() {\n      if (!this.selectedDate) return '';\n      \n      const date = new Date(this.selectedDate);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    \n    // 格式化时间范围\n    formattedTimeRange() {\n      if (!this.startTime || !this.endTime) return '';\n      \n      return `${this.startTime} - ${this.endTime}`;\n    }\n  },\n  methods: {\n    // 处理自习室切换\n    handleRoomChange() {\n      this.selectedSeat = null;\n      this.selectedZone = 'all';\n      this.loadSeats();\n    },\n    \n    // 处理区域切换\n    handleZoneChange() {\n      this.selectedSeat = null;\n    },\n    \n    // 处理日期变化\n    handleDateChange() {\n      this.selectedSeat = null;\n      this.loadSeats();\n    },\n    \n    // 处理时间变化\n    handleTimeChange() {\n      console.log(\"当前 startTime 类型:\", typeof this.startTime, \"值:\", this.startTime);\n      console.log(\"当前 endTime 类型:\", typeof this.endTime, \"值:\", this.endTime);\n      if (this.startTime && this.endTime) {\n        this.selectedSeat = null;\n        this.loadSeats();\n      }\n    },\n    \n    // 禁用日期（过去的日期）\n    disabledDate(date) {\n      return date < new Date(new Date().setHours(0, 0, 0, 0));\n    },\n    \n    // 加载座位数据\n    loadSeats() {\n      // 模拟API请求\n      // 实际项目中应该从后端获取，这里使用模拟数据\n      \n      setTimeout(() => {\n        // 生成模拟座位数据\n        const generateSeats = (roomId, zoneIds) => {\n          const seats = [];\n          const seatCount = roomId === 1 ? 80 : (roomId === 2 ? 60 : 40);\n          \n          for (let i = 1; i <= seatCount; i++) {\n            const zoneId = zoneIds[Math.floor(Math.random() * zoneIds.length)];\n            const seatNumber = `${zoneId}${String(i).padStart(2, '0')}`;\n            \n            // 随机状态，80%可用，20%已占用\n            const statusRandom = Math.random();\n            let status = 'available';\n            \n            if (statusRandom > 0.8) {\n              status = 'occupied';\n            } else if (statusRandom > 0.75) {\n              status = 'maintenance';\n            }\n            \n            seats.push({\n              id: `${roomId}-${seatNumber}`,\n              number: seatNumber,\n              roomId,\n              zone: zoneId,\n              status,\n              hasSocket: Math.random() > 0.5,\n              isWindow: zoneId === 'A' || zoneId === 'D' || zoneId === 'G',\n              isTable: Math.random() > 0.8\n            });\n          }\n          \n          return seats;\n        };\n        \n        const roomId = parseInt(this.activeRoom);\n        const zoneIds = this.currentRoom.zones.map(zone => zone.id);\n        this.seats = generateSeats(roomId, zoneIds);\n        \n      }, 500);\n    },\n    \n    // 选择座位\n    selectSeat(seat) {\n      if (seat.status !== 'available') {\n        // 如果座位不可用，提示用户\n        if (seat.status === 'occupied') {\n          this.$message.warning('该座位已被预约');\n        } else if (seat.status === 'maintenance') {\n          this.$message.warning('该座位正在维修中');\n        }\n        return;\n      }\n      \n      // 如果未选择时间段，提示用户\n      if (!this.startTime || !this.endTime) {\n        this.$message.warning('请先选择预约时间段');\n        return;\n      }\n      \n      this.selectedSeat = seat;\n    },\n    \n    // 取消选择\n    cancelSelection() {\n      this.selectedSeat = null;\n      this.reservationForm.remark = '';\n    },\n    \n    // 提交预约\n    submitReservation() {\n      if (!this.selectedSeat) {\n        this.$message.warning('请先选择座位');\n        return;\n      }\n      \n      if (!this.startTime || !this.endTime) {\n        this.$message.warning('请选择预约时间段');\n        return;\n      }\n      \n      this.$refs.reservationFormRef.validate(valid => {\n        if (!valid) return;\n        \n        this.submitting = true;\n        \n        // 模拟预约API请求\n        setTimeout(() => {\n          this.submitting = false;\n          this.reservationSuccess = true;\n          \n          // 预约成功后，清空选择\n          this.selectedSeat = null;\n          this.reservationForm.remark = '';\n        }, 1000);\n      });\n    },\n    \n    // 前往我的预约页面\n    goToMyReservations() {\n      this.reservationSuccess = false;\n      this.$router.push(\"/student/my-reservations\");\n    }\n  },\n  mounted() {\n    // 从URL获取自习室ID参数\n    const { room } = this.$route.query;\n    if (room && this.studyRooms.some(r => r.id === parseInt(room))) {\n      this.activeRoom = String(room);\n    }\n    \n    // 初始加载座位数据\n    this.loadSeats();\n  }\n};\n</script>\n\n<style scoped>\n.seat-map-container {\n  padding-bottom: 20px;\n}\n\n.room-select-card {\n  margin-bottom: 20px;\n}\n\n.time-select {\n  display: flex;\n  align-items: center;\n  margin: 20px 0;\n  justify-content: space-between;\n}\n\n.time-range {\n  display: flex;\n  align-items: center;\n}\n\n.time-picker {\n  width: 130px;\n}\n\n.time-separator {\n  margin: 0 10px;\n}\n\n.zone-select {\n  margin-bottom: 20px;\n}\n\n.seat-status-legend {\n  display: flex;\n  justify-content: flex-start;\n  margin: 20px 0;\n}\n\n.status-item {\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n}\n\n.status-indicator {\n  width: 20px;\n  height: 20px;\n  border-radius: 3px;\n  margin-right: 5px;\n}\n\n.status-indicator.available {\n  background-color: #67C23A;\n}\n\n.status-indicator.occupied {\n  background-color: #F56C6C;\n}\n\n.status-indicator.maintenance {\n  background-color: #909399;\n}\n\n.status-indicator.selected {\n  background-color: #409EFF;\n}\n\n.seat-map-card {\n  margin-bottom: 20px;\n}\n\n.seat-map-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.seat-grid {\n  display: grid;\n  gap: 10px;\n  padding: 20px;\n}\n\n.seat-item {\n  position: relative;\n  height: 60px;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.seat-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.seat-item.available {\n  background-color: #67C23A;\n  color: white;\n}\n\n.seat-item.occupied {\n  background-color: #F56C6C;\n  color: white;\n  cursor: not-allowed;\n}\n\n.seat-item.maintenance {\n  background-color: #909399;\n  color: white;\n  cursor: not-allowed;\n}\n\n.seat-item.selected {\n  background-color: #409EFF;\n  color: white;\n  font-weight: bold;\n}\n\n.seat-number {\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.seat-icons {\n  display: flex;\n  justify-content: center;\n  margin-top: 5px;\n}\n\n.seat-icons i {\n  margin: 0 2px;\n  font-size: 12px;\n}\n\n.reservation-card {\n  margin-bottom: 20px;\n}\n\n.seat-tag {\n  margin-right: 5px;\n}\n\n.success-content {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.success-icon {\n  font-size: 60px;\n  color: #67C23A;\n  margin-bottom: 20px;\n}\n\n.qrcode-container {\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.qrcode {\n  max-width: 150px;\n  margin-bottom: 10px;\n}\n\n.qrcode img {\n  width: 100%;\n}\n\n.qrcode-tip {\n  color: #E6A23C;\n  font-size: 12px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}