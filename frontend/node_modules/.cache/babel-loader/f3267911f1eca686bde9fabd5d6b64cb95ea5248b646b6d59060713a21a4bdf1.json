{"ast":null,"code":"import _defineProperty from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { ElCollapseTransition } from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport NodeContent from './tree-node-content.mjs';\nimport { getNodeKey, handleCurrentChange } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isFunction, isString } from '@vue/shared';\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: ElCollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: NodeContent,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"tree\");\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n      broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref();\n    var oldIndeterminate = ref();\n    var node$ = ref();\n    var dragEvents = inject(dragEventsKey);\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    var childrenKey = tree.props.props[\"children\"] || \"children\";\n    watch(function () {\n      var _a;\n      var children = (_a = props.node.data) == null ? void 0 : _a[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.childNodes.length;\n    }, function () {\n      return props.node.reInitChecked();\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    var getNodeClass = function getNodeClass(node) {\n      var nodeClassFunc = props.props[\"class\"];\n      if (!nodeClassFunc) {\n        return {};\n      }\n      var className;\n      if (isFunction(nodeClassFunc)) {\n        var data = node.data;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n      if (isString(className)) {\n        return _defineProperty({}, className, true);\n      } else {\n        return className;\n      }\n    };\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    var handleClick = function handleClick(e) {\n      handleCurrentChange(tree.store, tree.ctx.emit, function () {\n        var _a;\n        var nodeKeyProp = (_a = tree == null ? void 0 : tree.props) == null ? void 0 : _a.nodeKey;\n        if (nodeKeyProp) {\n          var curNodeKey = getNodeKey$1(props.node);\n          tree.store.value.setCurrentNodeKey(curNodeKey);\n        } else {\n          tree.store.value.setCurrentNode(props.node);\n        }\n      });\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if ((tree.props.checkOnClickNode || props.node.isLeaf && tree.props.checkOnClickLeaf) && !props.node.disabled) {\n        handleCheckChange(!props.node.checked);\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n    var handleContextMenu = function handleContextMenu(event) {\n      var _a;\n      if ((_a = tree.instance.vnode.props) == null ? void 0 : _a[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand(function () {\n          ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n        });\n      }\n    };\n    var handleCheckChange = function handleCheckChange(value) {\n      props.node.setChecked(value, !(tree == null ? void 0 : tree.props.checkStrictly));\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragStart({\n        event: event,\n        treeNode: props\n      });\n    };\n    var handleDragOver = function handleDragOver(event) {\n      event.preventDefault();\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragOver({\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n    };\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n    return {\n      ns: ns,\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass: getNodeClass,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd,\n      CaretRight: CaretRight\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  var _component_loading = resolveComponent(\"loading\");\n  var _component_node_content = resolveComponent(\"node-content\");\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    \"class\": normalizeClass([_ctx.ns.b(\"node\"), _ctx.ns.is(\"expanded\", _ctx.expanded), _ctx.ns.is(\"current\", _ctx.node.isCurrent), _ctx.ns.is(\"hidden\", !_ctx.node.visible), _ctx.ns.is(\"focusable\", !_ctx.node.disabled), _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked), _ctx.getNodeClass(_ctx.node)]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: withModifiers(_ctx.handleClick, [\"stop\"]),\n    onContextmenu: _ctx.handleContextMenu,\n    onDragstart: withModifiers(_ctx.handleDragStart, [\"stop\"]),\n    onDragover: withModifiers(_ctx.handleDragOver, [\"stop\"]),\n    onDragend: withModifiers(_ctx.handleDragEnd, [\"stop\"]),\n    onDrop: withModifiers(_ctx.handleDrop, [\"stop\"])\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n    style: normalizeStyle({\n      paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    })\n  }, [_ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"expand-icon\"), _ctx.ns.is(\"leaf\", _ctx.node.isLeaf), {\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: withModifiers(function () {}, [\"stop\"]),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onClick\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 6), createVNode(_component_el_collapse_transition, null, {\n    \"default\": withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          accordion: _ctx.accordion,\n          props: _ctx.props,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n      }), 128))], 10, [\"aria-expanded\"])), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\", \"onClick\", \"onContextmenu\", \"onDragstart\", \"onDragover\", \"onDragend\", \"onDrop\"])), [[vShow, _ctx.node.visible]]);\n}\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"tree-node.vue\"]]);\nexport { ElTreeNode as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","props","node","type","Node","default","Object","accordion","Boolean","renderContent","Function","renderAfterExpand","showCheckbox","emits","setup","ctx","ns","useNamespace","_useNodeExpandEventBr","useNodeExpandEventBroadcast","broadcastExpanded","tree","inject","expanded","ref","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","dragEventsKey","instance","getCurrentInstance","provide","debugWarn","value","childrenKey","watch","_a","children","data","_toConsumableArray","updateChildren","indeterminate","val","handleSelectChange","checked","childNodes","length","reInitChecked","nextTick","getNodeKey$1","getNodeKey","nodeKey","getNodeClass","nodeClassFunc","className","isFunction","isString","_defineProperty","emit","handleClick","e","handleCurrentChange","store","nodeKeyProp","curNodeKey","setCurrentNodeKey","setCurrentNode","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","isLeaf","checkOnClickLeaf","disabled","handleCheckChange","handleContextMenu","event","vnode","stopPropagation","preventDefault","collapse","expand","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","handleDrop","handleDragEnd","treeNodeDragEnd","CaretRight","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_icon","resolveComponent","_component_el_checkbox","_component_loading","_component_node_content","_component_el_tree_node","_component_el_collapse_transition","withDirectives","openBlock","createElementBlock","normalizeClass","b","is","isCurrent","onClick","withModifiers","onContextmenu","onDragstart","onDragover","onDragend","onDrop","createElementVNode","be","style","normalizeStyle","paddingLeft","level","indent","icon","createBlock","key","withCtx","resolveDynamicComponent","_","createCommentVNode","onChange","createVNode","role","Fragment","renderList","child","onNodeExpand","vShow","visible","ElTreeNode","_export_sfc"],"sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { debugWarn, isFunction, isString } from '@element-plus/utils'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')!\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>()\n    const oldIndeterminate = ref<boolean>()\n    const node$ = ref<HTMLElement>()\n    const dragEvents = inject(dragEventsKey)!\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data?.[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.childNodes.length,\n      () => props.node.reInitChecked()\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () => {\n        const nodeKeyProp = tree?.props?.nodeKey\n        if (nodeKeyProp) {\n          const curNodeKey = getNodeKey(props.node)\n          tree.store.value.setCurrentNodeKey(curNodeKey)\n        } else {\n          tree.store.value.setCurrentNode(props.node)\n        }\n      })\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (\n        (tree.props.checkOnClickNode ||\n          (props.node.isLeaf && tree.props.checkOnClickLeaf)) &&\n        !props.node.disabled\n      ) {\n        handleCheckChange(!props.node.checked)\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props?.['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand(() => {\n          ctx.emit('node-expand', props.node.data, props.node, instance)\n        })\n      }\n    }\n\n    const handleCheckChange = (value: CheckboxValueType) => {\n      props.node.setChecked(value as boolean, !tree?.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}