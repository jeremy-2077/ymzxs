{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"register-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"register-form\"\n};\nvar _hoisted_3 = {\n  \"class\": \"login-link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"用户注册\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $data.registerForm,\n    rules: $data.rules,\n    ref: \"registerForm\",\n    \"label-width\": \"80px\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"姓名\",\n        prop: \"name\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $data.registerForm.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $data.registerForm.name = $event;\n            }),\n            placeholder: \"请输入姓名\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $data.registerForm.email,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $data.registerForm.email = $event;\n            }),\n            placeholder: \"请输入学校邮箱 (@xxx.edu.cn)\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学号\",\n        prop: \"studentId\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $data.registerForm.studentId,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $data.registerForm.studentId = $event;\n            }),\n            placeholder: \"请输入学号\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $data.registerForm.password,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $data.registerForm.password = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请输入密码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"确认密码\",\n        prop: \"confirmPassword\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $data.registerForm.confirmPassword,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return $data.registerForm.confirmPassword = $event;\n            }),\n            type: \"password\",\n            placeholder: \"请再次输入密码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _cache[5] || (_cache[5] = function ($event) {\n              return $options.submitForm('registerForm');\n            }),\n            loading: $data.loading\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[7] || (_cache[7] = [_createTextVNode(\"注册\")]);\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n            onClick: _cache[6] || (_cache[6] = function ($event) {\n              return $options.resetForm('registerForm');\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[8] || (_cache[8] = [_createTextVNode(\"重置\")]);\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_3, [_cache[10] || (_cache[10] = _createTextVNode(\" 已有账号？\")), _createVNode(_component_router_link, {\n        to: \"/login\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"立即登录\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","model","$data","registerForm","rules","ref","_withCtx","_component_el_form_item","label","prop","_component_el_input","modelValue","name","_cache","$event","placeholder","_","email","studentId","password","type","confirmPassword","_component_el_button","onClick","$options","submitForm","loading","_createTextVNode","resetForm","_hoisted_3","_component_router_link","to"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-form\">\n      <h2>用户注册</h2>\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"80px\">\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"registerForm.name\" placeholder=\"请输入姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"registerForm.email\" placeholder=\"请输入学校邮箱 (@xxx.edu.cn)\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"学号\" prop=\"studentId\">\n          <el-input v-model=\"registerForm.studentId\" placeholder=\"请输入学号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"registerForm.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"registerForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('registerForm')\" :loading=\"loading\">注册</el-button>\n          <el-button @click=\"resetForm('registerForm')\">重置</el-button>\n        </el-form-item>\n        <div class=\"login-link\">\n          已有账号？<router-link to=\"/login\">立即登录</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'))\n      } else {\n        if (this.registerForm.confirmPassword !== '') {\n          this.$refs.registerForm.validateField('confirmPassword')\n        }\n        callback()\n      }\n    }\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    const validateSchoolEmail = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入邮箱地址'));\n      } else if (!value.endsWith('edu.cn')) {\n        callback(new Error('请使用学校邮箱注册 (例如 @xxx.edu.cn)'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      registerForm: {\n        name: '',\n        email: '',\n        studentId: '',\n        password: '',\n        confirmPassword: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' },\n          { validator: validateSchoolEmail, trigger: 'blur' }\n        ],\n        studentId: [\n          { required: true, message: '请输入学号', trigger: 'blur' },\n          { min: 5, max: 20, message: '长度在 5 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, validator: validatePassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.loading = true\n          axios.post('/api/auth/register', {\n            name: this.registerForm.name,\n            email: this.registerForm.email,\n            student_id: this.registerForm.studentId,\n            password: this.registerForm.password,\n            role: 'student'\n          })\n            .then(response => {\n              this.loading = false\n              const responseData = response.data || {};\n              this.$message.success(responseData.message || '注册成功！请登录');\n              this.$router.push('/login');\n            })\n            .catch(error => {\n              this.loading = false\n              let errorMessage = '注册失败，请稍后重试';\n              if (error.response && error.response.data && error.response.data.error) {\n                errorMessage = error.response.data.error;\n              }\n              this.$message.error(errorMessage);\n            })\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.register-form {\n  width: 400px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #409eff;\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 15px;\n  font-size: 14px;\n}\n\n.login-link a {\n  color: #409eff;\n  text-decoration: none;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}