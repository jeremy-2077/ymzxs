{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport axios from 'axios';\nexport default {\n  name: 'RegisterPage',\n  data: function data() {\n    var _this = this;\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'));\n      } else {\n        if (_this.registerForm.confirmPassword !== '') {\n          _this.$refs.registerForm.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    var validateSchoolEmail = function validateSchoolEmail(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请输入邮箱地址'));\n      } else if (!value.endsWith('edu.cn')) {\n        callback(new Error('请使用学校邮箱注册 (例如 @xxx.edu.cn)'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      registerForm: {\n        name: '',\n        email: '',\n        studentId: '',\n        password: '',\n        confirmPassword: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }, {\n          validator: validateSchoolEmail,\n          trigger: 'blur'\n        }],\n        studentId: [{\n          required: true,\n          message: '请输入学号',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 20,\n          message: '长度在 5 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePassword,\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n          axios.post('/api/auth/register', {\n            name: _this2.registerForm.name,\n            email: _this2.registerForm.email,\n            student_id: _this2.registerForm.studentId,\n            password: _this2.registerForm.password,\n            role: 'student'\n          }).then(function (response) {\n            _this2.loading = false;\n            var responseData = response.data || {};\n            _this2.$message.success(responseData.message || '注册成功！请登录');\n            _this2.$router.push('/login');\n          })[\"catch\"](function (error) {\n            _this2.loading = false;\n            var errorMessage = '注册失败，请稍后重试';\n            if (error.response && error.response.data && error.response.data.error) {\n              errorMessage = error.response.data.error;\n            }\n            _this2.$message.error(errorMessage);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","_this","validatePassword","rule","value","callback","Error","length","registerForm","confirmPassword","$refs","validateField","validateConfirmPassword","password","validateSchoolEmail","endsWith","loading","email","studentId","rules","required","message","trigger","type","validator","min","max","methods","submitForm","formName","_this2","validate","valid","post","student_id","role","then","response","responseData","$message","success","$router","push","error","errorMessage","resetForm","resetFields"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-form\">\n      <h2>用户注册</h2>\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"80px\">\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"registerForm.name\" placeholder=\"请输入姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"registerForm.email\" placeholder=\"请输入学校邮箱 (@xxx.edu.cn)\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"学号\" prop=\"studentId\">\n          <el-input v-model=\"registerForm.studentId\" placeholder=\"请输入学号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"registerForm.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"registerForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('registerForm')\" :loading=\"loading\">注册</el-button>\n          <el-button @click=\"resetForm('registerForm')\">重置</el-button>\n        </el-form-item>\n        <div class=\"login-link\">\n          已有账号？<router-link to=\"/login\">立即登录</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'))\n      } else {\n        if (this.registerForm.confirmPassword !== '') {\n          this.$refs.registerForm.validateField('confirmPassword')\n        }\n        callback()\n      }\n    }\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    const validateSchoolEmail = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入邮箱地址'));\n      } else if (!value.endsWith('edu.cn')) {\n        callback(new Error('请使用学校邮箱注册 (例如 @xxx.edu.cn)'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      registerForm: {\n        name: '',\n        email: '',\n        studentId: '',\n        password: '',\n        confirmPassword: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' },\n          { validator: validateSchoolEmail, trigger: 'blur' }\n        ],\n        studentId: [\n          { required: true, message: '请输入学号', trigger: 'blur' },\n          { min: 5, max: 20, message: '长度在 5 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, validator: validatePassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.loading = true\n          axios.post('/api/auth/register', {\n            name: this.registerForm.name,\n            email: this.registerForm.email,\n            student_id: this.registerForm.studentId,\n            password: this.registerForm.password,\n            role: 'student'\n          })\n            .then(response => {\n              this.loading = false\n              const responseData = response.data || {};\n              this.$message.success(responseData.message || '注册成功！请登录');\n              this.$router.push('/login');\n            })\n            .catch(error => {\n              this.loading = false\n              let errorMessage = '注册失败，请稍后重试';\n              if (error.response && error.response.data && error.response.data.error) {\n                errorMessage = error.response.data.error;\n              }\n              this.$message.error(errorMessage);\n            })\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.register-form {\n  width: 400px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #409eff;\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 15px;\n  font-size: 14px;\n}\n\n.login-link a {\n  color: #409eff;\n  text-decoration: none;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}