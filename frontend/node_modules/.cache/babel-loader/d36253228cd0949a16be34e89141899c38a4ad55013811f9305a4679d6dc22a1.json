{"ast":null,"code":"import _objectSpread from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'FacilityManagement',\n  data: function data() {\n    return {\n      // 自习室数据\n      studyRooms: [{\n        id: 1,\n        name: '一号自习室（静音区）',\n        zones: [{\n          id: 'A',\n          name: 'A区（靠窗）'\n        }, {\n          id: 'B',\n          name: 'B区（中间）'\n        }, {\n          id: 'C',\n          name: 'C区（电源）'\n        }]\n      }, {\n        id: 2,\n        name: '二号自习室（讨论区）',\n        zones: [{\n          id: 'D',\n          name: 'D区（靠窗）'\n        }, {\n          id: 'E',\n          name: 'E区（中间）'\n        }, {\n          id: 'F',\n          name: 'F区（电源）'\n        }]\n      }, {\n        id: 3,\n        name: '三号自习室（电源区）',\n        zones: [{\n          id: 'G',\n          name: 'G区（靠窗）'\n        }, {\n          id: 'H',\n          name: 'H区（中间）'\n        }]\n      }],\n      // 筛选条件\n      selectedRoom: 1,\n      selectedZone: 'all',\n      filterStatus: 'all',\n      // 座位数据\n      seats: [],\n      filteredSeats: [],\n      loading: false,\n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      // 座位表单\n      seatDialogVisible: false,\n      editMode: false,\n      seatForm: {\n        id: null,\n        roomId: 1,\n        zone: '',\n        number: '',\n        status: 'available',\n        isWindow: false,\n        hasSocket: false,\n        isTable: false,\n        note: ''\n      },\n      seatRules: {\n        roomId: [{\n          required: true,\n          message: '请选择自习室',\n          trigger: 'change'\n        }],\n        zone: [{\n          required: true,\n          message: '请选择区域',\n          trigger: 'change'\n        }],\n        number: [{\n          required: true,\n          message: '请输入座位号',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z][0-9]{2,3}$/,\n          message: '座位号格式不正确（例如：A01）',\n          trigger: 'blur'\n        }]\n      },\n      submitting: false,\n      // 导入对话框\n      importDialogVisible: false,\n      importForm: {\n        roomId: 1,\n        file: null\n      },\n      importFile: [],\n      importing: false\n    };\n  },\n  computed: {\n    // 当前自习室区域\n    currentRoomZones: function currentRoomZones() {\n      var _this = this;\n      var room = this.studyRooms.find(function (r) {\n        return r.id === _this.selectedRoom;\n      });\n      return room ? room.zones : [];\n    }\n  },\n  methods: {\n    // 获取区域名称\n    getZoneName: function getZoneName(zoneId) {\n      var _iterator = _createForOfIteratorHelper(this.studyRooms),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var room = _step.value;\n          var zone = room.zones.find(function (z) {\n            return z.id === zoneId;\n          });\n          if (zone) return zone.name;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return zoneId;\n    },\n    // 获取指定自习室的区域\n    getZonesByRoomId: function getZonesByRoomId(roomId) {\n      var room = this.studyRooms.find(function (r) {\n        return r.id === roomId;\n      });\n      return room ? room.zones : [];\n    },\n    // 获取状态标签\n    getStatusLabel: function getStatusLabel(status) {\n      var statusMap = {\n        'available': '可用',\n        'occupied': '已占用',\n        'maintenance': '维修中'\n      };\n      return statusMap[status] || status;\n    },\n    // 获取状态类型（标签颜色）\n    getStatusType: function getStatusType(status) {\n      var typeMap = {\n        'available': 'success',\n        'occupied': 'danger',\n        'maintenance': 'info'\n      };\n      return typeMap[status] || '';\n    },\n    // 处理自习室切换\n    handleRoomChange: function handleRoomChange() {\n      this.selectedZone = 'all';\n      this.loadSeats();\n    },\n    // 处理区域切换\n    handleZoneChange: function handleZoneChange() {\n      this.filterSeats();\n    },\n    // 加载座位数据\n    loadSeats: function loadSeats() {\n      var _this2 = this;\n      this.loading = true;\n\n      // 模拟API请求\n      setTimeout(function () {\n        // 生成模拟座位数据\n        var generateSeats = function generateSeats(roomId, zoneIds) {\n          var seats = [];\n          var seatCount = roomId === 1 ? 80 : roomId === 2 ? 60 : 40;\n          for (var i = 1; i <= seatCount; i++) {\n            var zoneId = zoneIds[Math.floor(Math.random() * zoneIds.length)];\n            var seatNumber = \"\".concat(zoneId).concat(String(i).padStart(2, '0'));\n\n            // 随机状态\n            var statusRandom = Math.random();\n            var status = 'available';\n            if (statusRandom > 0.8) {\n              status = 'occupied';\n            } else if (statusRandom > 0.75) {\n              status = 'maintenance';\n            }\n            seats.push({\n              id: \"\".concat(roomId, \"-\").concat(seatNumber),\n              roomId: roomId,\n              zone: zoneId,\n              number: seatNumber,\n              status: status,\n              hasSocket: Math.random() > 0.5,\n              isWindow: zoneId === 'A' || zoneId === 'D' || zoneId === 'G',\n              isTable: Math.random() > 0.8,\n              currentUser: status === 'occupied' ? '张三' : '',\n              note: status === 'maintenance' ? '插座损坏，正在维修' : ''\n            });\n          }\n          return seats;\n        };\n        var roomId = _this2.selectedRoom;\n        var zoneIds = _this2.studyRooms.find(function (r) {\n          return r.id === roomId;\n        }).zones.map(function (z) {\n          return z.id;\n        });\n        _this2.seats = generateSeats(roomId, zoneIds);\n        _this2.filterSeats();\n        _this2.loading = false;\n      }, 500);\n    },\n    // 筛选座位\n    filterSeats: function filterSeats() {\n      var _this3 = this;\n      this.filteredSeats = this.seats.filter(function (seat) {\n        // 筛选区域\n        if (_this3.selectedZone !== 'all' && seat.zone !== _this3.selectedZone) {\n          return false;\n        }\n\n        // 筛选状态\n        if (_this3.filterStatus !== 'all' && seat.status !== _this3.filterStatus) {\n          return false;\n        }\n        return true;\n      });\n\n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    // 刷新座位数据\n    refreshSeats: function refreshSeats() {\n      this.loadSeats();\n    },\n    // 分页相关方法\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    // 显示添加座位对话框\n    showAddSeatDialog: function showAddSeatDialog() {\n      var _this4 = this;\n      this.editMode = false;\n      this.seatForm = {\n        id: null,\n        roomId: this.selectedRoom,\n        zone: this.selectedZone !== 'all' ? this.selectedZone : '',\n        number: '',\n        status: 'available',\n        isWindow: false,\n        hasSocket: false,\n        isTable: false,\n        note: ''\n      };\n      this.seatDialogVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs.seatFormRef.clearValidate();\n      });\n    },\n    // 编辑座位\n    handleEdit: function handleEdit(row) {\n      var _this5 = this;\n      this.editMode = true;\n      this.seatForm = {\n        id: row.id,\n        roomId: row.roomId,\n        zone: row.zone,\n        number: row.number,\n        status: row.status,\n        isWindow: row.isWindow,\n        hasSocket: row.hasSocket,\n        isTable: row.isTable,\n        note: row.note\n      };\n      this.seatDialogVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs.seatFormRef.clearValidate();\n      });\n    },\n    // 切换维修状态\n    toggleMaintenance: function toggleMaintenance(row) {\n      var _this6 = this;\n      var action = row.status === 'maintenance' ? '设为可用' : '设为维修';\n      this.$confirm(\"\\u786E\\u5B9A\\u8981\\u5C06\\u5EA7\\u4F4D \".concat(row.number, \" \").concat(action, \"\\u5417\\uFF1F\"), '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 模拟API请求\n        var newStatus = row.status === 'maintenance' ? 'available' : 'maintenance';\n\n        // 更新本地数据\n        var index = _this6.seats.findIndex(function (s) {\n          return s.id === row.id;\n        });\n        if (index !== -1) {\n          _this6.seats[index].status = newStatus;\n          if (newStatus === 'maintenance') {\n            _this6.seats[index].note = '维修中';\n            _this6.seats[index].currentUser = '';\n          } else {\n            _this6.seats[index].note = '';\n          }\n          _this6.filterSeats();\n          _this6.$message.success(\"\\u5EA7\\u4F4D \".concat(row.number, \" \\u5DF2\").concat(action));\n        }\n      })[\"catch\"](function () {});\n    },\n    // 删除座位\n    handleDelete: function handleDelete(row) {\n      var _this7 = this;\n      this.$confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5EA7\\u4F4D \".concat(row.number, \" \\u5417\\uFF1F\\u6B64\\u64CD\\u4F5C\\u4E0D\\u53EF\\u6062\\u590D\\uFF01\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(function () {\n        // 模拟API请求\n        // 从本地数据中删除\n        _this7.seats = _this7.seats.filter(function (s) {\n          return s.id !== row.id;\n        });\n        _this7.filterSeats();\n        _this7.$message.success(\"\\u5EA7\\u4F4D \".concat(row.number, \" \\u5DF2\\u5220\\u9664\"));\n      })[\"catch\"](function () {});\n    },\n    // 提交座位表单\n    submitSeatForm: function submitSeatForm() {\n      var _this8 = this;\n      this.$refs.seatFormRef.validate(function (valid) {\n        if (!valid) return;\n        _this8.submitting = true;\n\n        // 模拟API请求\n        setTimeout(function () {\n          if (_this8.editMode) {\n            // 更新座位\n            var index = _this8.seats.findIndex(function (s) {\n              return s.id === _this8.seatForm.id;\n            });\n            if (index !== -1) {\n              _this8.seats[index] = _objectSpread(_objectSpread({}, _this8.seats[index]), {}, {\n                zone: _this8.seatForm.zone,\n                status: _this8.seatForm.status,\n                isWindow: _this8.seatForm.isWindow,\n                hasSocket: _this8.seatForm.hasSocket,\n                isTable: _this8.seatForm.isTable,\n                note: _this8.seatForm.note\n              });\n              _this8.$message.success(\"\\u5EA7\\u4F4D \".concat(_this8.seatForm.number, \" \\u66F4\\u65B0\\u6210\\u529F\"));\n            }\n          } else {\n            // 添加座位\n            var newSeat = {\n              id: \"\".concat(_this8.seatForm.roomId, \"-\").concat(_this8.seatForm.number),\n              roomId: _this8.seatForm.roomId,\n              zone: _this8.seatForm.zone,\n              number: _this8.seatForm.number,\n              status: _this8.seatForm.status,\n              isWindow: _this8.seatForm.isWindow,\n              hasSocket: _this8.seatForm.hasSocket,\n              isTable: _this8.seatForm.isTable,\n              currentUser: '',\n              note: _this8.seatForm.note\n            };\n            _this8.seats.push(newSeat);\n            _this8.$message.success(\"\\u5EA7\\u4F4D \".concat(_this8.seatForm.number, \" \\u6DFB\\u52A0\\u6210\\u529F\"));\n          }\n          _this8.filterSeats();\n          _this8.seatDialogVisible = false;\n          _this8.submitting = false;\n        }, 1000);\n      });\n    },\n    // 显示导入对话框\n    showImportDialog: function showImportDialog() {\n      this.importDialogVisible = true;\n      this.importForm = {\n        roomId: this.selectedRoom,\n        file: null\n      };\n      this.importFile = [];\n    },\n    // 文件变更处理\n    handleFileChange: function handleFileChange(file) {\n      this.importFile = [file];\n      this.importForm.file = file.raw;\n    },\n    // 下载模板\n    downloadTemplate: function downloadTemplate() {\n      this.$message.info('模板下载功能正在开发中');\n    },\n    // 提交导入\n    submitImport: function submitImport() {\n      var _this9 = this;\n      if (!this.importForm.roomId) {\n        this.$message.warning('请选择自习室');\n        return;\n      }\n      if (!this.importForm.file) {\n        this.$message.warning('请选择Excel文件');\n        return;\n      }\n      this.importing = true;\n\n      // 模拟导入过程\n      setTimeout(function () {\n        _this9.importing = false;\n        _this9.importDialogVisible = false;\n        _this9.$message.success('已成功导入28个座位信息');\n        _this9.loadSeats();\n      }, 1500);\n    },\n    // 导出座位数据\n    exportSeats: function exportSeats() {\n      var _this10 = this;\n      this.$message.info('正在导出数据，请稍候...');\n\n      // 模拟导出过程\n      setTimeout(function () {\n        _this10.$message.success('座位数据导出成功');\n      }, 1000);\n    }\n  },\n  mounted: function mounted() {\n    this.loadSeats();\n  }\n};","map":{"version":3,"names":["name","data","studyRooms","id","zones","selectedRoom","selectedZone","filterStatus","seats","filteredSeats","loading","pagination","currentPage","pageSize","seatDialogVisible","editMode","seatForm","roomId","zone","number","status","isWindow","hasSocket","isTable","note","seatRules","required","message","trigger","pattern","submitting","importDialogVisible","importForm","file","importFile","importing","computed","currentRoomZones","_this","room","find","r","methods","getZoneName","zoneId","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","z","err","e","f","getZonesByRoomId","getStatusLabel","statusMap","getStatusType","typeMap","handleRoomChange","loadSeats","handleZoneChange","filterSeats","_this2","setTimeout","generateSeats","zoneIds","seatCount","i","Math","floor","random","length","seatNumber","concat","String","padStart","statusRandom","push","currentUser","map","_this3","filter","seat","refreshSeats","handleSizeChange","val","handleCurrentChange","showAddSeatDialog","_this4","$nextTick","$refs","seatFormRef","clearValidate","handleEdit","row","_this5","toggleMaintenance","_this6","action","$confirm","confirmButtonText","cancelButtonText","type","then","newStatus","index","findIndex","$message","success","handleDelete","_this7","submitSeatForm","_this8","validate","valid","_objectSpread","newSeat","showImportDialog","handleFileChange","raw","downloadTemplate","info","submitImport","_this9","warning","exportSeats","_this10","mounted"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/admin/FacilityManagement.vue"],"sourcesContent":["<template>\n  <div class=\"facility-container\">\n    <!-- 顶部工具栏 -->\n    <el-card class=\"toolbar-card\">\n      <div class=\"toolbar\">\n        <div class=\"left-tools\">\n          <el-select v-model=\"selectedRoom\" placeholder=\"选择自习室\" @change=\"handleRoomChange\">\n            <el-option\n              v-for=\"room in studyRooms\"\n              :key=\"room.id\"\n              :label=\"room.name\"\n              :value=\"room.id\">\n            </el-option>\n          </el-select>\n          \n          <el-select v-model=\"selectedZone\" placeholder=\"选择区域\" @change=\"handleZoneChange\">\n            <el-option label=\"全部区域\" value=\"all\"></el-option>\n            <el-option\n              v-for=\"zone in currentRoomZones\"\n              :key=\"zone.id\"\n              :label=\"zone.name\"\n              :value=\"zone.id\">\n            </el-option>\n          </el-select>\n          \n          <el-select v-model=\"filterStatus\" placeholder=\"座位状态\" @change=\"filterSeats\">\n            <el-option label=\"全部状态\" value=\"all\"></el-option>\n            <el-option label=\"可用\" value=\"available\"></el-option>\n            <el-option label=\"已占用\" value=\"occupied\"></el-option>\n            <el-option label=\"维修中\" value=\"maintenance\"></el-option>\n          </el-select>\n        </div>\n        \n        <div class=\"right-tools\">\n          <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddSeatDialog\">添加座位</el-button>\n          <el-button type=\"success\" icon=\"el-icon-upload2\" @click=\"showImportDialog\">批量导入</el-button>\n          <el-button type=\"warning\" icon=\"el-icon-download\" @click=\"exportSeats\">导出数据</el-button>\n          <el-button type=\"info\" icon=\"el-icon-refresh\" @click=\"refreshSeats\">刷新</el-button>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 座位列表 -->\n    <el-card class=\"seat-card\">\n      <template #header>\n        <div class=\"seat-header\">\n          <h3>座位列表</h3>\n          <div class=\"seat-count\">\n            共 <span class=\"count-num\">{{ filteredSeats.length }}</span> 个座位\n          </div>\n        </div>\n      </template>\n      \n      <el-table \n        :data=\"filteredSeats\" \n        border \n        style=\"width: 100%\"\n        v-loading=\"loading\">\n        <el-table-column\n          prop=\"number\"\n          label=\"座位号\"\n          width=\"100\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"zone\"\n          label=\"所属区域\"\n          width=\"120\">\n          <template #default=\"scope\">\n            {{ getZoneName(scope.row.zone) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"type\"\n          label=\"座位类型\"\n          width=\"220\">\n          <template #default=\"scope\">\n            <el-tag v-if=\"scope.row.isWindow\" type=\"success\" effect=\"plain\" class=\"seat-tag\">靠窗</el-tag>\n            <el-tag v-if=\"scope.row.hasSocket\" type=\"primary\" effect=\"plain\" class=\"seat-tag\">电源插座</el-tag>\n            <el-tag v-if=\"scope.row.isTable\" type=\"warning\" effect=\"plain\" class=\"seat-tag\">四人桌</el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"status\"\n          label=\"状态\"\n          width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusLabel(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"currentUser\"\n          label=\"当前使用者\"\n          width=\"120\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"note\"\n          label=\"备注\">\n        </el-table-column>\n        \n        <el-table-column\n          label=\"操作\"\n          width=\"250\">\n          <template #default=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.row)\">\n              编辑\n            </el-button>\n            \n            <el-button\n              size=\"mini\"\n              :type=\"scope.row.status === 'maintenance' ? 'success' : 'warning'\"\n              :icon=\"scope.row.status === 'maintenance' ? 'el-icon-check' : 'el-icon-s-tools'\"\n              @click=\"toggleMaintenance(scope.row)\">\n              {{ scope.row.status === 'maintenance' ? '恢复可用' : '设为维修' }}\n            </el-button>\n            \n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\">\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.currentPage\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pagination.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"filteredSeats.length\">\n        </el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑座位对话框 -->\n    <el-dialog\n      :title=\"editMode ? '编辑座位' : '添加座位'\"\n      v-model:visible=\"seatDialogVisible\"\n      width=\"500px\">\n      <el-form :model=\"seatForm\" :rules=\"seatRules\" ref=\"seatFormRef\" label-width=\"100px\">\n        <el-form-item label=\"自习室\" prop=\"roomId\">\n          <el-select v-model=\"seatForm.roomId\" placeholder=\"选择自习室\" :disabled=\"editMode\">\n            <el-option\n              v-for=\"room in studyRooms\"\n              :key=\"room.id\"\n              :label=\"room.name\"\n              :value=\"room.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"区域\" prop=\"zone\">\n          <el-select v-model=\"seatForm.zone\" placeholder=\"选择区域\">\n            <el-option\n              v-for=\"zone in getZonesByRoomId(seatForm.roomId)\"\n              :key=\"zone.id\"\n              :label=\"zone.name\"\n              :value=\"zone.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"座位号\" prop=\"number\">\n          <el-input v-model=\"seatForm.number\" placeholder=\"例如：A01\" :disabled=\"editMode\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"座位类型\">\n          <el-checkbox v-model=\"seatForm.isWindow\">靠窗</el-checkbox>\n          <el-checkbox v-model=\"seatForm.hasSocket\">电源插座</el-checkbox>\n          <el-checkbox v-model=\"seatForm.isTable\">四人桌</el-checkbox>\n        </el-form-item>\n        \n        <el-form-item label=\"座位状态\" prop=\"status\">\n          <el-radio-group v-model=\"seatForm.status\">\n            <el-radio label=\"available\">可用</el-radio>\n            <el-radio label=\"maintenance\">维修中</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item label=\"备注\" prop=\"note\">\n          <el-input v-model=\"seatForm.note\" type=\"textarea\" :rows=\"3\" placeholder=\"选填\"></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"seatDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitSeatForm\" :loading=\"submitting\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 批量导入对话框 -->\n    <el-dialog\n      title=\"批量导入座位\"\n      v-model:visible=\"importDialogVisible\"\n      width=\"500px\">\n      <div class=\"import-tips\">\n        <p>请按照模板格式上传Excel文件，包含以下字段：</p>\n        <ul>\n          <li>座位号（必填，例如：A01）</li>\n          <li>区域（必填，例如：A、B、C）</li>\n          <li>类型（可选，多个类型用逗号分隔，例如：窗边,电源）</li>\n          <li>状态（可选，默认为\"可用\"）</li>\n          <li>备注（可选）</li>\n        </ul>\n      </div>\n      \n      <el-form :model=\"importForm\" ref=\"importFormRef\" label-width=\"100px\">\n        <el-form-item label=\"自习室\" prop=\"roomId\">\n          <el-select v-model=\"importForm.roomId\" placeholder=\"选择自习室\">\n            <el-option\n              v-for=\"room in studyRooms\"\n              :key=\"room.id\"\n              :label=\"room.name\"\n              :value=\"room.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"Excel文件\" prop=\"file\">\n          <el-upload\n            action=\"#\"\n            :auto-upload=\"false\"\n            accept=\".xlsx,.xls\"\n            :limit=\"1\"\n            :file-list=\"importFile\"\n            :on-change=\"handleFileChange\">\n            <template #trigger>\n              <el-button size=\"small\" type=\"primary\">选择文件</el-button>\n            </template>\n            <template #tip>\n              <div class=\"el-upload__tip\">只能上传Excel文件，且不超过5MB</div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      \n      <div class=\"download-template\">\n        <a href=\"#\" @click.prevent=\"downloadTemplate\">下载导入模板</a>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"importDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitImport\" :loading=\"importing\">开始导入</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FacilityManagement',\n  data() {\n    return {\n      // 自习室数据\n      studyRooms: [\n        {\n          id: 1,\n          name: '一号自习室（静音区）',\n          zones: [\n            { id: 'A', name: 'A区（靠窗）' },\n            { id: 'B', name: 'B区（中间）' },\n            { id: 'C', name: 'C区（电源）' }\n          ]\n        },\n        {\n          id: 2,\n          name: '二号自习室（讨论区）',\n          zones: [\n            { id: 'D', name: 'D区（靠窗）' },\n            { id: 'E', name: 'E区（中间）' },\n            { id: 'F', name: 'F区（电源）' }\n          ]\n        },\n        {\n          id: 3,\n          name: '三号自习室（电源区）',\n          zones: [\n            { id: 'G', name: 'G区（靠窗）' },\n            { id: 'H', name: 'H区（中间）' }\n          ]\n        }\n      ],\n      \n      // 筛选条件\n      selectedRoom: 1,\n      selectedZone: 'all',\n      filterStatus: 'all',\n      \n      // 座位数据\n      seats: [],\n      filteredSeats: [],\n      loading: false,\n      \n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      \n      // 座位表单\n      seatDialogVisible: false,\n      editMode: false,\n      seatForm: {\n        id: null,\n        roomId: 1,\n        zone: '',\n        number: '',\n        status: 'available',\n        isWindow: false,\n        hasSocket: false,\n        isTable: false,\n        note: ''\n      },\n      seatRules: {\n        roomId: [\n          { required: true, message: '请选择自习室', trigger: 'change' }\n        ],\n        zone: [\n          { required: true, message: '请选择区域', trigger: 'change' }\n        ],\n        number: [\n          { required: true, message: '请输入座位号', trigger: 'blur' },\n          { pattern: /^[A-Z][0-9]{2,3}$/, message: '座位号格式不正确（例如：A01）', trigger: 'blur' }\n        ]\n      },\n      submitting: false,\n      \n      // 导入对话框\n      importDialogVisible: false,\n      importForm: {\n        roomId: 1,\n        file: null\n      },\n      importFile: [],\n      importing: false\n    };\n  },\n  computed: {\n    // 当前自习室区域\n    currentRoomZones() {\n      const room = this.studyRooms.find(r => r.id === this.selectedRoom);\n      return room ? room.zones : [];\n    }\n  },\n  methods: {\n    // 获取区域名称\n    getZoneName(zoneId) {\n      for (const room of this.studyRooms) {\n        const zone = room.zones.find(z => z.id === zoneId);\n        if (zone) return zone.name;\n      }\n      return zoneId;\n    },\n    \n    // 获取指定自习室的区域\n    getZonesByRoomId(roomId) {\n      const room = this.studyRooms.find(r => r.id === roomId);\n      return room ? room.zones : [];\n    },\n    \n    // 获取状态标签\n    getStatusLabel(status) {\n      const statusMap = {\n        'available': '可用',\n        'occupied': '已占用',\n        'maintenance': '维修中'\n      };\n      return statusMap[status] || status;\n    },\n    \n    // 获取状态类型（标签颜色）\n    getStatusType(status) {\n      const typeMap = {\n        'available': 'success',\n        'occupied': 'danger',\n        'maintenance': 'info'\n      };\n      return typeMap[status] || '';\n    },\n    \n    // 处理自习室切换\n    handleRoomChange() {\n      this.selectedZone = 'all';\n      this.loadSeats();\n    },\n    \n    // 处理区域切换\n    handleZoneChange() {\n      this.filterSeats();\n    },\n    \n    // 加载座位数据\n    loadSeats() {\n      this.loading = true;\n      \n      // 模拟API请求\n      setTimeout(() => {\n        // 生成模拟座位数据\n        const generateSeats = (roomId, zoneIds) => {\n          const seats = [];\n          const seatCount = roomId === 1 ? 80 : (roomId === 2 ? 60 : 40);\n          \n          for (let i = 1; i <= seatCount; i++) {\n            const zoneId = zoneIds[Math.floor(Math.random() * zoneIds.length)];\n            const seatNumber = `${zoneId}${String(i).padStart(2, '0')}`;\n            \n            // 随机状态\n            const statusRandom = Math.random();\n            let status = 'available';\n            \n            if (statusRandom > 0.8) {\n              status = 'occupied';\n            } else if (statusRandom > 0.75) {\n              status = 'maintenance';\n            }\n            \n            seats.push({\n              id: `${roomId}-${seatNumber}`,\n              roomId,\n              zone: zoneId,\n              number: seatNumber,\n              status,\n              hasSocket: Math.random() > 0.5,\n              isWindow: zoneId === 'A' || zoneId === 'D' || zoneId === 'G',\n              isTable: Math.random() > 0.8,\n              currentUser: status === 'occupied' ? '张三' : '',\n              note: status === 'maintenance' ? '插座损坏，正在维修' : ''\n            });\n          }\n          \n          return seats;\n        };\n        \n        const roomId = this.selectedRoom;\n        const zoneIds = this.studyRooms.find(r => r.id === roomId).zones.map(z => z.id);\n        this.seats = generateSeats(roomId, zoneIds);\n        \n        this.filterSeats();\n        this.loading = false;\n      }, 500);\n    },\n    \n    // 筛选座位\n    filterSeats() {\n      this.filteredSeats = this.seats.filter(seat => {\n        // 筛选区域\n        if (this.selectedZone !== 'all' && seat.zone !== this.selectedZone) {\n          return false;\n        }\n        \n        // 筛选状态\n        if (this.filterStatus !== 'all' && seat.status !== this.filterStatus) {\n          return false;\n        }\n        \n        return true;\n      });\n      \n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    \n    // 刷新座位数据\n    refreshSeats() {\n      this.loadSeats();\n    },\n    \n    // 分页相关方法\n    handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    \n    handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    \n    // 显示添加座位对话框\n    showAddSeatDialog() {\n      this.editMode = false;\n      this.seatForm = {\n        id: null,\n        roomId: this.selectedRoom,\n        zone: this.selectedZone !== 'all' ? this.selectedZone : '',\n        number: '',\n        status: 'available',\n        isWindow: false,\n        hasSocket: false,\n        isTable: false,\n        note: ''\n      };\n      \n      this.seatDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.seatFormRef.clearValidate();\n      });\n    },\n    \n    // 编辑座位\n    handleEdit(row) {\n      this.editMode = true;\n      this.seatForm = {\n        id: row.id,\n        roomId: row.roomId,\n        zone: row.zone,\n        number: row.number,\n        status: row.status,\n        isWindow: row.isWindow,\n        hasSocket: row.hasSocket,\n        isTable: row.isTable,\n        note: row.note\n      };\n      \n      this.seatDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.seatFormRef.clearValidate();\n      });\n    },\n    \n    // 切换维修状态\n    toggleMaintenance(row) {\n      const action = row.status === 'maintenance' ? '设为可用' : '设为维修';\n      \n      this.$confirm(`确定要将座位 ${row.number} ${action}吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 模拟API请求\n        const newStatus = row.status === 'maintenance' ? 'available' : 'maintenance';\n        \n        // 更新本地数据\n        const index = this.seats.findIndex(s => s.id === row.id);\n        if (index !== -1) {\n          this.seats[index].status = newStatus;\n          if (newStatus === 'maintenance') {\n            this.seats[index].note = '维修中';\n            this.seats[index].currentUser = '';\n          } else {\n            this.seats[index].note = '';\n          }\n          \n          this.filterSeats();\n          this.$message.success(`座位 ${row.number} 已${action}`);\n        }\n      }).catch(() => {});\n    },\n    \n    // 删除座位\n    handleDelete(row) {\n      this.$confirm(`确定要删除座位 ${row.number} 吗？此操作不可恢复！`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(() => {\n        // 模拟API请求\n        // 从本地数据中删除\n        this.seats = this.seats.filter(s => s.id !== row.id);\n        this.filterSeats();\n        this.$message.success(`座位 ${row.number} 已删除`);\n      }).catch(() => {});\n    },\n    \n    // 提交座位表单\n    submitSeatForm() {\n      this.$refs.seatFormRef.validate(valid => {\n        if (!valid) return;\n        \n        this.submitting = true;\n        \n        // 模拟API请求\n        setTimeout(() => {\n          if (this.editMode) {\n            // 更新座位\n            const index = this.seats.findIndex(s => s.id === this.seatForm.id);\n            if (index !== -1) {\n              this.seats[index] = {\n                ...this.seats[index],\n                zone: this.seatForm.zone,\n                status: this.seatForm.status,\n                isWindow: this.seatForm.isWindow,\n                hasSocket: this.seatForm.hasSocket,\n                isTable: this.seatForm.isTable,\n                note: this.seatForm.note\n              };\n              \n              this.$message.success(`座位 ${this.seatForm.number} 更新成功`);\n            }\n          } else {\n            // 添加座位\n            const newSeat = {\n              id: `${this.seatForm.roomId}-${this.seatForm.number}`,\n              roomId: this.seatForm.roomId,\n              zone: this.seatForm.zone,\n              number: this.seatForm.number,\n              status: this.seatForm.status,\n              isWindow: this.seatForm.isWindow,\n              hasSocket: this.seatForm.hasSocket,\n              isTable: this.seatForm.isTable,\n              currentUser: '',\n              note: this.seatForm.note\n            };\n            \n            this.seats.push(newSeat);\n            this.$message.success(`座位 ${this.seatForm.number} 添加成功`);\n          }\n          \n          this.filterSeats();\n          this.seatDialogVisible = false;\n          this.submitting = false;\n        }, 1000);\n      });\n    },\n    \n    // 显示导入对话框\n    showImportDialog() {\n      this.importDialogVisible = true;\n      this.importForm = {\n        roomId: this.selectedRoom,\n        file: null\n      };\n      this.importFile = [];\n    },\n    \n    // 文件变更处理\n    handleFileChange(file) {\n      this.importFile = [file];\n      this.importForm.file = file.raw;\n    },\n    \n    // 下载模板\n    downloadTemplate() {\n      this.$message.info('模板下载功能正在开发中');\n    },\n    \n    // 提交导入\n    submitImport() {\n      if (!this.importForm.roomId) {\n        this.$message.warning('请选择自习室');\n        return;\n      }\n      \n      if (!this.importForm.file) {\n        this.$message.warning('请选择Excel文件');\n        return;\n      }\n      \n      this.importing = true;\n      \n      // 模拟导入过程\n      setTimeout(() => {\n        this.importing = false;\n        this.importDialogVisible = false;\n        this.$message.success('已成功导入28个座位信息');\n        this.loadSeats();\n      }, 1500);\n    },\n    \n    // 导出座位数据\n    exportSeats() {\n      this.$message.info('正在导出数据，请稍候...');\n      \n      // 模拟导出过程\n      setTimeout(() => {\n        this.$message.success('座位数据导出成功');\n      }, 1000);\n    }\n  },\n  mounted() {\n    this.loadSeats();\n  }\n};\n</script>\n\n<style scoped>\n.facility-container {\n  padding-bottom: 20px;\n}\n\n.toolbar-card {\n  margin-bottom: 20px;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.left-tools {\n  display: flex;\n  gap: 15px;\n}\n\n.right-tools {\n  display: flex;\n  gap: 10px;\n}\n\n.seat-card {\n  margin-bottom: 20px;\n}\n\n.seat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.count-num {\n  font-weight: bold;\n  color: #409EFF;\n}\n\n.seat-tag {\n  margin-right: 5px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.import-tips {\n  margin-bottom: 20px;\n}\n\n.import-tips ul {\n  padding-left: 20px;\n  color: #606266;\n}\n\n.download-template {\n  margin-top: 10px;\n  text-align: right;\n}\n</style> "],"mappings":";;;;;;;;;;;;;;;;AA6QA,eAAe;EACbA,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,UAAU,EAAE,CACV;QACEC,EAAE,EAAE,CAAC;QACLH,IAAI,EAAE,YAAY;QAClBI,KAAK,EAAE,CACL;UAAED,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS,CAAC,EAC3B;UAAEG,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS,CAAC,EAC3B;UAAEG,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS;MAE9B,CAAC,EACD;QACEG,EAAE,EAAE,CAAC;QACLH,IAAI,EAAE,YAAY;QAClBI,KAAK,EAAE,CACL;UAAED,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS,CAAC,EAC3B;UAAEG,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS,CAAC,EAC3B;UAAEG,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS;MAE9B,CAAC,EACD;QACEG,EAAE,EAAE,CAAC;QACLH,IAAI,EAAE,YAAY;QAClBI,KAAK,EAAE,CACL;UAAED,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS,CAAC,EAC3B;UAAEG,EAAE,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAS;MAE9B,EACD;MAED;MACAK,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,KAAK;MAEnB;MACAC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,EAAE;MACjBC,OAAO,EAAE,KAAK;MAEd;MACAC,UAAU,EAAE;QACVC,WAAW,EAAE,CAAC;QACdC,QAAQ,EAAE;MACZ,CAAC;MAED;MACAC,iBAAiB,EAAE,KAAK;MACxBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;QACRb,EAAE,EAAE,IAAI;QACRc,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,WAAW;QACnBC,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE,KAAK;QAChBC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE;MACR,CAAC;MACDC,SAAS,EAAE;QACTR,MAAM,EAAE,CACN;UAAES,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAS,EACxD;QACDV,IAAI,EAAE,CACJ;UAAEQ,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAS,EACvD;QACDT,MAAM,EAAE,CACN;UAAEO,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,CAAC,EACtD;UAAEC,OAAO,EAAE,mBAAmB;UAAEF,OAAO,EAAE,kBAAkB;UAAEC,OAAO,EAAE;QAAO;MAEjF,CAAC;MACDE,UAAU,EAAE,KAAK;MAEjB;MACAC,mBAAmB,EAAE,KAAK;MAC1BC,UAAU,EAAE;QACVf,MAAM,EAAE,CAAC;QACTgB,IAAI,EAAE;MACR,CAAC;MACDC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACjB,IAAMC,IAAG,GAAI,IAAI,CAACrC,UAAU,CAACsC,IAAI,CAAC,UAAAC,CAAA;QAAA,OAAKA,CAAC,CAACtC,EAAC,KAAMmC,KAAI,CAACjC,YAAY;MAAA,EAAC;MAClE,OAAOkC,IAAG,GAAIA,IAAI,CAACnC,KAAI,GAAI,EAAE;IAC/B;EACF,CAAC;EACDsC,OAAO,EAAE;IACP;IACAC,WAAW,WAAXA,WAAWA,CAACC,MAAM,EAAE;MAAA,IAAAC,SAAA,GAAAC,0BAAA,CACC,IAAI,CAAC5C,UAAU;QAAA6C,KAAA;MAAA;QAAlC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAoC;UAAA,IAAzBX,IAAG,GAAAQ,KAAA,CAAAI,KAAA;UACZ,IAAMjC,IAAG,GAAIqB,IAAI,CAACnC,KAAK,CAACoC,IAAI,CAAC,UAAAY,CAAA;YAAA,OAAKA,CAAC,CAACjD,EAAC,KAAMyC,MAAM;UAAA,EAAC;UAClD,IAAI1B,IAAI,EAAE,OAAOA,IAAI,CAAClB,IAAI;QAC5B;MAAA,SAAAqD,GAAA;QAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;MAAA;QAAAR,SAAA,CAAAU,CAAA;MAAA;MACA,OAAOX,MAAM;IACf,CAAC;IAED;IACAY,gBAAgB,WAAhBA,gBAAgBA,CAACvC,MAAM,EAAE;MACvB,IAAMsB,IAAG,GAAI,IAAI,CAACrC,UAAU,CAACsC,IAAI,CAAC,UAAAC,CAAA;QAAA,OAAKA,CAAC,CAACtC,EAAC,KAAMc,MAAM;MAAA,EAAC;MACvD,OAAOsB,IAAG,GAAIA,IAAI,CAACnC,KAAI,GAAI,EAAE;IAC/B,CAAC;IAED;IACAqD,cAAc,WAAdA,cAAcA,CAACrC,MAAM,EAAE;MACrB,IAAMsC,SAAQ,GAAI;QAChB,WAAW,EAAE,IAAI;QACjB,UAAU,EAAE,KAAK;QACjB,aAAa,EAAE;MACjB,CAAC;MACD,OAAOA,SAAS,CAACtC,MAAM,KAAKA,MAAM;IACpC,CAAC;IAED;IACAuC,aAAa,WAAbA,aAAaA,CAACvC,MAAM,EAAE;MACpB,IAAMwC,OAAM,GAAI;QACd,WAAW,EAAE,SAAS;QACtB,UAAU,EAAE,QAAQ;QACpB,aAAa,EAAE;MACjB,CAAC;MACD,OAAOA,OAAO,CAACxC,MAAM,KAAK,EAAE;IAC9B,CAAC;IAED;IACAyC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACvD,YAAW,GAAI,KAAK;MACzB,IAAI,CAACwD,SAAS,CAAC,CAAC;IAClB,CAAC;IAED;IACAC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB,CAAC;IAED;IACAF,SAAS,WAATA,SAASA,CAAA,EAAG;MAAA,IAAAG,MAAA;MACV,IAAI,CAACvD,OAAM,GAAI,IAAI;;MAEnB;MACAwD,UAAU,CAAC,YAAM;QACf;QACA,IAAMC,aAAY,GAAI,SAAhBA,aAAYA,CAAKlD,MAAM,EAAEmD,OAAO,EAAK;UACzC,IAAM5D,KAAI,GAAI,EAAE;UAChB,IAAM6D,SAAQ,GAAIpD,MAAK,KAAM,IAAI,EAAC,GAAKA,MAAK,KAAM,IAAI,EAAC,GAAI,EAAG;UAE9D,KAAK,IAAIqD,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKD,SAAS,EAAEC,CAAC,EAAE,EAAE;YACnC,IAAM1B,MAAK,GAAIwB,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIL,OAAO,CAACM,MAAM,CAAC,CAAC;YAClE,IAAMC,UAAS,MAAAC,MAAA,CAAOhC,MAAM,EAAAgC,MAAA,CAAGC,MAAM,CAACP,CAAC,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAE;;YAE3D;YACA,IAAMC,YAAW,GAAIR,IAAI,CAACE,MAAM,CAAC,CAAC;YAClC,IAAIrD,MAAK,GAAI,WAAW;YAExB,IAAI2D,YAAW,GAAI,GAAG,EAAE;cACtB3D,MAAK,GAAI,UAAU;YACrB,OAAO,IAAI2D,YAAW,GAAI,IAAI,EAAE;cAC9B3D,MAAK,GAAI,aAAa;YACxB;YAEAZ,KAAK,CAACwE,IAAI,CAAC;cACT7E,EAAE,KAAAyE,MAAA,CAAK3D,MAAM,OAAA2D,MAAA,CAAID,UAAU,CAAE;cAC7B1D,MAAM,EAANA,MAAM;cACNC,IAAI,EAAE0B,MAAM;cACZzB,MAAM,EAAEwD,UAAU;cAClBvD,MAAM,EAANA,MAAM;cACNE,SAAS,EAAEiD,IAAI,CAACE,MAAM,CAAC,IAAI,GAAG;cAC9BpD,QAAQ,EAAEuB,MAAK,KAAM,GAAE,IAAKA,MAAK,KAAM,GAAE,IAAKA,MAAK,KAAM,GAAG;cAC5DrB,OAAO,EAAEgD,IAAI,CAACE,MAAM,CAAC,IAAI,GAAG;cAC5BQ,WAAW,EAAE7D,MAAK,KAAM,UAAS,GAAI,IAAG,GAAI,EAAE;cAC9CI,IAAI,EAAEJ,MAAK,KAAM,aAAY,GAAI,WAAU,GAAI;YACjD,CAAC,CAAC;UACJ;UAEA,OAAOZ,KAAK;QACd,CAAC;QAED,IAAMS,MAAK,GAAIgD,MAAI,CAAC5D,YAAY;QAChC,IAAM+D,OAAM,GAAIH,MAAI,CAAC/D,UAAU,CAACsC,IAAI,CAAC,UAAAC,CAAA;UAAA,OAAKA,CAAC,CAACtC,EAAC,KAAMc,MAAM;QAAA,EAAC,CAACb,KAAK,CAAC8E,GAAG,CAAC,UAAA9B,CAAA;UAAA,OAAKA,CAAC,CAACjD,EAAE;QAAA,EAAC;QAC/E8D,MAAI,CAACzD,KAAI,GAAI2D,aAAa,CAAClD,MAAM,EAAEmD,OAAO,CAAC;QAE3CH,MAAI,CAACD,WAAW,CAAC,CAAC;QAClBC,MAAI,CAACvD,OAAM,GAAI,KAAK;MACtB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IAED;IACAsD,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAmB,MAAA;MACZ,IAAI,CAAC1E,aAAY,GAAI,IAAI,CAACD,KAAK,CAAC4E,MAAM,CAAC,UAAAC,IAAG,EAAK;QAC7C;QACA,IAAIF,MAAI,CAAC7E,YAAW,KAAM,KAAI,IAAK+E,IAAI,CAACnE,IAAG,KAAMiE,MAAI,CAAC7E,YAAY,EAAE;UAClE,OAAO,KAAK;QACd;;QAEA;QACA,IAAI6E,MAAI,CAAC5E,YAAW,KAAM,KAAI,IAAK8E,IAAI,CAACjE,MAAK,KAAM+D,MAAI,CAAC5E,YAAY,EAAE;UACpE,OAAO,KAAK;QACd;QAEA,OAAO,IAAI;MACb,CAAC,CAAC;;MAEF;MACA,IAAI,CAACI,UAAU,CAACC,WAAU,GAAI,CAAC;IACjC,CAAC;IAED;IACA0E,YAAY,WAAZA,YAAYA,CAAA,EAAG;MACb,IAAI,CAACxB,SAAS,CAAC,CAAC;IAClB,CAAC;IAED;IACAyB,gBAAgB,WAAhBA,gBAAgBA,CAACC,GAAG,EAAE;MACpB,IAAI,CAAC7E,UAAU,CAACE,QAAO,GAAI2E,GAAG;IAChC,CAAC;IAEDC,mBAAmB,WAAnBA,mBAAmBA,CAACD,GAAG,EAAE;MACvB,IAAI,CAAC7E,UAAU,CAACC,WAAU,GAAI4E,GAAG;IACnC,CAAC;IAED;IACAE,iBAAiB,WAAjBA,iBAAiBA,CAAA,EAAG;MAAA,IAAAC,MAAA;MAClB,IAAI,CAAC5E,QAAO,GAAI,KAAK;MACrB,IAAI,CAACC,QAAO,GAAI;QACdb,EAAE,EAAE,IAAI;QACRc,MAAM,EAAE,IAAI,CAACZ,YAAY;QACzBa,IAAI,EAAE,IAAI,CAACZ,YAAW,KAAM,KAAI,GAAI,IAAI,CAACA,YAAW,GAAI,EAAE;QAC1Da,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,WAAW;QACnBC,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE,KAAK;QAChBC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE;MACR,CAAC;MAED,IAAI,CAACV,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAAC8E,SAAS,CAAC,YAAM;QACnBD,MAAI,CAACE,KAAK,CAACC,WAAW,CAACC,aAAa,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC;IAED;IACAC,UAAU,WAAVA,UAAUA,CAACC,GAAG,EAAE;MAAA,IAAAC,MAAA;MACd,IAAI,CAACnF,QAAO,GAAI,IAAI;MACpB,IAAI,CAACC,QAAO,GAAI;QACdb,EAAE,EAAE8F,GAAG,CAAC9F,EAAE;QACVc,MAAM,EAAEgF,GAAG,CAAChF,MAAM;QAClBC,IAAI,EAAE+E,GAAG,CAAC/E,IAAI;QACdC,MAAM,EAAE8E,GAAG,CAAC9E,MAAM;QAClBC,MAAM,EAAE6E,GAAG,CAAC7E,MAAM;QAClBC,QAAQ,EAAE4E,GAAG,CAAC5E,QAAQ;QACtBC,SAAS,EAAE2E,GAAG,CAAC3E,SAAS;QACxBC,OAAO,EAAE0E,GAAG,CAAC1E,OAAO;QACpBC,IAAI,EAAEyE,GAAG,CAACzE;MACZ,CAAC;MAED,IAAI,CAACV,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAAC8E,SAAS,CAAC,YAAM;QACnBM,MAAI,CAACL,KAAK,CAACC,WAAW,CAACC,aAAa,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC;IAED;IACAI,iBAAiB,WAAjBA,iBAAiBA,CAACF,GAAG,EAAE;MAAA,IAAAG,MAAA;MACrB,IAAMC,MAAK,GAAIJ,GAAG,CAAC7E,MAAK,KAAM,aAAY,GAAI,MAAK,GAAI,MAAM;MAE7D,IAAI,CAACkF,QAAQ,yCAAA1B,MAAA,CAAWqB,GAAG,CAAC9E,MAAM,OAAAyD,MAAA,CAAIyB,MAAM,mBAAM,IAAI,EAAE;QACtDE,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAAC,YAAM;QACZ;QACA,IAAMC,SAAQ,GAAIV,GAAG,CAAC7E,MAAK,KAAM,aAAY,GAAI,WAAU,GAAI,aAAa;;QAE5E;QACA,IAAMwF,KAAI,GAAIR,MAAI,CAAC5F,KAAK,CAACqG,SAAS,CAAC,UAAA7D,CAAA;UAAA,OAAKA,CAAC,CAAC7C,EAAC,KAAM8F,GAAG,CAAC9F,EAAE;QAAA,EAAC;QACxD,IAAIyG,KAAI,KAAM,CAAC,CAAC,EAAE;UAChBR,MAAI,CAAC5F,KAAK,CAACoG,KAAK,CAAC,CAACxF,MAAK,GAAIuF,SAAS;UACpC,IAAIA,SAAQ,KAAM,aAAa,EAAE;YAC/BP,MAAI,CAAC5F,KAAK,CAACoG,KAAK,CAAC,CAACpF,IAAG,GAAI,KAAK;YAC9B4E,MAAI,CAAC5F,KAAK,CAACoG,KAAK,CAAC,CAAC3B,WAAU,GAAI,EAAE;UACpC,OAAO;YACLmB,MAAI,CAAC5F,KAAK,CAACoG,KAAK,CAAC,CAACpF,IAAG,GAAI,EAAE;UAC7B;UAEA4E,MAAI,CAACpC,WAAW,CAAC,CAAC;UAClBoC,MAAI,CAACU,QAAQ,CAACC,OAAO,iBAAAnC,MAAA,CAAOqB,GAAG,CAAC9E,MAAM,aAAAyD,MAAA,CAAKyB,MAAM,CAAE,CAAC;QACtD;MACF,CAAC,CAAC,SAAM,CAAC,YAAM,CAAC,CAAC,CAAC;IACpB,CAAC;IAED;IACAW,YAAY,WAAZA,YAAYA,CAACf,GAAG,EAAE;MAAA,IAAAgB,MAAA;MAChB,IAAI,CAACX,QAAQ,+CAAA1B,MAAA,CAAYqB,GAAG,CAAC9E,MAAM,oEAAe,IAAI,EAAE;QACtDoF,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAAC,YAAM;QACZ;QACA;QACAO,MAAI,CAACzG,KAAI,GAAIyG,MAAI,CAACzG,KAAK,CAAC4E,MAAM,CAAC,UAAApC,CAAA;UAAA,OAAKA,CAAC,CAAC7C,EAAC,KAAM8F,GAAG,CAAC9F,EAAE;QAAA,EAAC;QACpD8G,MAAI,CAACjD,WAAW,CAAC,CAAC;QAClBiD,MAAI,CAACH,QAAQ,CAACC,OAAO,iBAAAnC,MAAA,CAAOqB,GAAG,CAAC9E,MAAM,wBAAM,CAAC;MAC/C,CAAC,CAAC,SAAM,CAAC,YAAM,CAAC,CAAC,CAAC;IACpB,CAAC;IAED;IACA+F,cAAc,WAAdA,cAAcA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACf,IAAI,CAACtB,KAAK,CAACC,WAAW,CAACsB,QAAQ,CAAC,UAAAC,KAAI,EAAK;QACvC,IAAI,CAACA,KAAK,EAAE;QAEZF,MAAI,CAACrF,UAAS,GAAI,IAAI;;QAEtB;QACAoC,UAAU,CAAC,YAAM;UACf,IAAIiD,MAAI,CAACpG,QAAQ,EAAE;YACjB;YACA,IAAM6F,KAAI,GAAIO,MAAI,CAAC3G,KAAK,CAACqG,SAAS,CAAC,UAAA7D,CAAA;cAAA,OAAKA,CAAC,CAAC7C,EAAC,KAAMgH,MAAI,CAACnG,QAAQ,CAACb,EAAE;YAAA,EAAC;YAClE,IAAIyG,KAAI,KAAM,CAAC,CAAC,EAAE;cAChBO,MAAI,CAAC3G,KAAK,CAACoG,KAAK,IAAAU,aAAA,CAAAA,aAAA,KACXH,MAAI,CAAC3G,KAAK,CAACoG,KAAK,CAAC;gBACpB1F,IAAI,EAAEiG,MAAI,CAACnG,QAAQ,CAACE,IAAI;gBACxBE,MAAM,EAAE+F,MAAI,CAACnG,QAAQ,CAACI,MAAM;gBAC5BC,QAAQ,EAAE8F,MAAI,CAACnG,QAAQ,CAACK,QAAQ;gBAChCC,SAAS,EAAE6F,MAAI,CAACnG,QAAQ,CAACM,SAAS;gBAClCC,OAAO,EAAE4F,MAAI,CAACnG,QAAQ,CAACO,OAAO;gBAC9BC,IAAI,EAAE2F,MAAI,CAACnG,QAAQ,CAACQ;cAAG,EACxB;cAED2F,MAAI,CAACL,QAAQ,CAACC,OAAO,iBAAAnC,MAAA,CAAOuC,MAAI,CAACnG,QAAQ,CAACG,MAAM,8BAAO,CAAC;YAC1D;UACF,OAAO;YACL;YACA,IAAMoG,OAAM,GAAI;cACdpH,EAAE,KAAAyE,MAAA,CAAKuC,MAAI,CAACnG,QAAQ,CAACC,MAAM,OAAA2D,MAAA,CAAIuC,MAAI,CAACnG,QAAQ,CAACG,MAAM,CAAE;cACrDF,MAAM,EAAEkG,MAAI,CAACnG,QAAQ,CAACC,MAAM;cAC5BC,IAAI,EAAEiG,MAAI,CAACnG,QAAQ,CAACE,IAAI;cACxBC,MAAM,EAAEgG,MAAI,CAACnG,QAAQ,CAACG,MAAM;cAC5BC,MAAM,EAAE+F,MAAI,CAACnG,QAAQ,CAACI,MAAM;cAC5BC,QAAQ,EAAE8F,MAAI,CAACnG,QAAQ,CAACK,QAAQ;cAChCC,SAAS,EAAE6F,MAAI,CAACnG,QAAQ,CAACM,SAAS;cAClCC,OAAO,EAAE4F,MAAI,CAACnG,QAAQ,CAACO,OAAO;cAC9B0D,WAAW,EAAE,EAAE;cACfzD,IAAI,EAAE2F,MAAI,CAACnG,QAAQ,CAACQ;YACtB,CAAC;YAED2F,MAAI,CAAC3G,KAAK,CAACwE,IAAI,CAACuC,OAAO,CAAC;YACxBJ,MAAI,CAACL,QAAQ,CAACC,OAAO,iBAAAnC,MAAA,CAAOuC,MAAI,CAACnG,QAAQ,CAACG,MAAM,8BAAO,CAAC;UAC1D;UAEAgG,MAAI,CAACnD,WAAW,CAAC,CAAC;UAClBmD,MAAI,CAACrG,iBAAgB,GAAI,KAAK;UAC9BqG,MAAI,CAACrF,UAAS,GAAI,KAAK;QACzB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ,CAAC;IAED;IACA0F,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACzF,mBAAkB,GAAI,IAAI;MAC/B,IAAI,CAACC,UAAS,GAAI;QAChBf,MAAM,EAAE,IAAI,CAACZ,YAAY;QACzB4B,IAAI,EAAE;MACR,CAAC;MACD,IAAI,CAACC,UAAS,GAAI,EAAE;IACtB,CAAC;IAED;IACAuF,gBAAgB,WAAhBA,gBAAgBA,CAACxF,IAAI,EAAE;MACrB,IAAI,CAACC,UAAS,GAAI,CAACD,IAAI,CAAC;MACxB,IAAI,CAACD,UAAU,CAACC,IAAG,GAAIA,IAAI,CAACyF,GAAG;IACjC,CAAC;IAED;IACAC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACb,QAAQ,CAACc,IAAI,CAAC,aAAa,CAAC;IACnC,CAAC;IAED;IACAC,YAAY,WAAZA,YAAYA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACb,IAAI,CAAC,IAAI,CAAC9F,UAAU,CAACf,MAAM,EAAE;QAC3B,IAAI,CAAC6F,QAAQ,CAACiB,OAAO,CAAC,QAAQ,CAAC;QAC/B;MACF;MAEA,IAAI,CAAC,IAAI,CAAC/F,UAAU,CAACC,IAAI,EAAE;QACzB,IAAI,CAAC6E,QAAQ,CAACiB,OAAO,CAAC,YAAY,CAAC;QACnC;MACF;MAEA,IAAI,CAAC5F,SAAQ,GAAI,IAAI;;MAErB;MACA+B,UAAU,CAAC,YAAM;QACf4D,MAAI,CAAC3F,SAAQ,GAAI,KAAK;QACtB2F,MAAI,CAAC/F,mBAAkB,GAAI,KAAK;QAChC+F,MAAI,CAAChB,QAAQ,CAACC,OAAO,CAAC,cAAc,CAAC;QACrCe,MAAI,CAAChE,SAAS,CAAC,CAAC;MAClB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED;IACAkE,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAC,OAAA;MACZ,IAAI,CAACnB,QAAQ,CAACc,IAAI,CAAC,eAAe,CAAC;;MAEnC;MACA1D,UAAU,CAAC,YAAM;QACf+D,OAAI,CAACnB,QAAQ,CAACC,OAAO,CAAC,UAAU,CAAC;MACnC,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EACDmB,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpE,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}