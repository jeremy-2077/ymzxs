{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_radio = _resolveComponent(\"el-radio\");\n  var _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"login-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n        \"class\": \"logo\"\n      }, [_createElementVNode(\"h1\", null, \"自习室座位管理系统\")], -1 /* HOISTED */)), _createVNode(_component_el_tabs, {\n        modelValue: $data.activeTab,\n        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n          return $data.activeTab = $event;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_tab_pane, {\n            label: \"登录\",\n            name: \"login\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_form, {\n                model: $data.loginForm,\n                rules: $data.loginRules,\n                ref: \"loginFormRef\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    prop: \"email\",\n                    label: \"邮箱\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.loginForm.email,\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                          return $data.loginForm.email = $event;\n                        }),\n                        \"prefix-icon\": \"el-icon-user\",\n                        placeholder: \"请输入邮箱\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"password\",\n                    label: \"密码\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.loginForm.password,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $data.loginForm.password = $event;\n                        }),\n                        \"prefix-icon\": \"el-icon-lock\",\n                        placeholder: \"请输入密码\",\n                        \"show-password\": \"\",\n                        type: \"password\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_button, {\n                        type: \"primary\",\n                        \"class\": \"login-button\",\n                        onClick: $options.handleLogin,\n                        loading: $data.loading\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[9] || (_cache[9] = [_createTextVNode(\"登录\")]);\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"model\", \"rules\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"注册\",\n            name: \"register\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_form, {\n                model: $data.registerForm,\n                rules: $data.registerRules,\n                ref: \"registerFormRef\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    prop: \"name\",\n                    label: \"姓名\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.registerForm.name,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $data.registerForm.name = $event;\n                        }),\n                        placeholder: \"请输入姓名\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"email\",\n                    label: \"学校邮箱\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.registerForm.email,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $data.registerForm.email = $event;\n                        }),\n                        placeholder: \"请输入学校邮箱 (@xxx.edu.cn)\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"studentId\",\n                    label: \"学号\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.registerForm.studentId,\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                          return $data.registerForm.studentId = $event;\n                        }),\n                        placeholder: \"请输入学号 (可选)\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"password\",\n                    label: \"密码\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.registerForm.password,\n                        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                          return $data.registerForm.password = $event;\n                        }),\n                        placeholder: \"请设置密码\",\n                        \"show-password\": \"\",\n                        type: \"password\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"confirmPassword\",\n                    label: \"确认密码\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $data.registerForm.confirmPassword,\n                        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                          return $data.registerForm.confirmPassword = $event;\n                        }),\n                        placeholder: \"请确认密码\",\n                        \"show-password\": \"\",\n                        type: \"password\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    prop: \"role\",\n                    label: \"角色\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_radio_group, {\n                        modelValue: $data.registerForm.role,\n                        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                          return $data.registerForm.role = $event;\n                        })\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [_createVNode(_component_el_radio, {\n                            value: \"student\"\n                          }, {\n                            \"default\": _withCtx(function () {\n                              return _cache[10] || (_cache[10] = [_createTextVNode(\"学生\")]);\n                            }),\n                            _: 1 /* STABLE */\n                          }), _createVNode(_component_el_radio, {\n                            value: \"admin\"\n                          }, {\n                            \"default\": _withCtx(function () {\n                              return _cache[11] || (_cache[11] = [_createTextVNode(\"管理员\")]);\n                            }),\n                            _: 1 /* STABLE */\n                          })];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_button, {\n                        type: \"primary\",\n                        \"class\": \"register-button\",\n                        onClick: $options.handleRegister,\n                        loading: $data.registerLoading\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[12] || (_cache[12] = [_createTextVNode(\"注册\")]);\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"model\", \"rules\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_component_el_tabs","modelValue","$data","activeTab","_cache","$event","_component_el_tab_pane","label","name","_component_el_form","model","loginForm","rules","loginRules","ref","_component_el_form_item","prop","_component_el_input","email","placeholder","_","password","type","_component_el_button","onClick","$options","handleLogin","loading","_createTextVNode","registerForm","registerRules","studentId","confirmPassword","_component_el_radio_group","role","_component_el_radio","value","handleRegister","registerLoading"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div class=\"logo\">\n        <h1>自习室座位管理系统</h1>\n      </div>\n      \n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane label=\"登录\" name=\"login\">\n          <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginFormRef\">\n            <el-form-item prop=\"email\" label=\"邮箱\">\n              <el-input v-model=\"loginForm.email\" prefix-icon=\"el-icon-user\" placeholder=\"请输入邮箱\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\" label=\"密码\">\n              <el-input v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password type=\"password\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" class=\"login-button\" @click=\"handleLogin\" :loading=\"loading\">登录</el-button>\n            </el-form-item>\n          </el-form>\n        </el-tab-pane>\n        \n        <el-tab-pane label=\"注册\" name=\"register\">\n          <el-form :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerFormRef\">\n            <el-form-item prop=\"name\" label=\"姓名\">\n              <el-input v-model=\"registerForm.name\" placeholder=\"请输入姓名\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"email\" label=\"学校邮箱\">\n              <el-input v-model=\"registerForm.email\" placeholder=\"请输入学校邮箱 (@xxx.edu.cn)\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"studentId\" label=\"学号\">\n              <el-input v-model=\"registerForm.studentId\" placeholder=\"请输入学号 (可选)\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\" label=\"密码\">\n              <el-input v-model=\"registerForm.password\" placeholder=\"请设置密码\" show-password type=\"password\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"confirmPassword\" label=\"确认密码\">\n              <el-input v-model=\"registerForm.confirmPassword\" placeholder=\"请确认密码\" show-password type=\"password\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"role\" label=\"角色\">\n              <el-radio-group v-model=\"registerForm.role\">\n                <el-radio value=\"student\">学生</el-radio>\n                <el-radio value=\"admin\">管理员</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" class=\"register-button\" @click=\"handleRegister\" :loading=\"registerLoading\">注册</el-button>\n            </el-form-item>\n          </el-form>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    // 验证密码一致性\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    \n    // 验证邮箱是否符合学校域名\n    const validateEmail = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入邮箱'));\n      } else if (!value.endsWith('edu.cn')) {\n        callback(new Error('请使用学校邮箱注册 (@xxx.edu.cn)'));\n      } else {\n        callback();\n      }\n    };\n    \n    return {\n      activeTab: 'login',\n      loading: false,\n      registerLoading: false,\n      \n      // 登录表单\n      loginForm: {\n        email: '',\n        password: ''\n      },\n      loginRules: {\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度至少6个字符', trigger: 'blur' }\n        ]\n      },\n      \n      // 注册表单\n      registerForm: {\n        name: '',\n        email: '',\n        studentId: '',\n        password: '',\n        confirmPassword: '',\n        role: 'student'\n      },\n      registerRules: {\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' },\n          { validator: validateEmail, trigger: 'blur' }\n        ],\n        studentId: [\n          // { required: true, message: '请输入学号', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度至少6个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请确认密码', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        role: [\n          { required: true, message: '请选择角色', trigger: 'change' }\n        ]\n      },\n    };\n  },\n  methods: {\n    // 处理登录\n    handleLogin() {\n      this.$refs.loginFormRef.validate(async (valid) => {\n        if (!valid) return;\n        this.loading = true;\n        try {\n          const response = await axios.post('/api/auth/login', {\n            email: this.loginForm.email,\n            password: this.loginForm.password\n          });\n          // 正确解构 access_token 并重命名为 token\n          const { user, access_token: token } = response.data; \n          \n          if (!token) {\n             console.error('Login successful but no token received!', response.data);\n             this.$message.error('登录失败：未收到认证令牌');\n             this.loading = false;\n             return;\n          }\n\n          this.$store.dispatch('login', { user, token });\n          \n          if (user && user.role) {\n            this.$router.push(user.role === 'admin' ? '/admin/dashboard' : '/student/dashboard');\n            this.$message.success('登录成功');\n          } else {\n            console.error('登录成功，但用户信息不完整:', user);\n            this.$message.warning('登录成功，但无法确定用户角色，将跳转至首页');\n            this.$router.push('/'); \n          }\n        } catch (error) {\n          console.error('登录失败:', error);\n          let errorMessage = '登录失败，请检查邮箱和密码';\n          if (error.response && error.response.data && (error.response.data.message || error.response.data.error) ) {\n            errorMessage = error.response.data.message || error.response.data.error; \n          }\n          this.$message.error(errorMessage);\n        } finally {\n          this.loading = false;\n        }\n      });\n    },\n    \n    // 处理注册\n    handleRegister() {\n      this.$refs.registerFormRef.validate(async (valid) => {\n        if (!valid) return;\n        \n        // 简单处理：不允许直接注册 admin，如果需要，应由后端或管理界面处理\n        if (this.registerForm.role === 'admin') {\n            this.$message.warning('不允许直接注册管理员账号');\n            return;\n        }\n        \n        this.registerLoading = true; // 使用独立的 loading 状态\n        \n        try {\n          // 调用注册API\n          const payload = {\n            name: this.registerForm.name,\n            email: this.registerForm.email,\n            password: this.registerForm.password,\n            role: this.registerForm.role, // 发送选择的角色 (虽然上面限制了admin)\n            // 如果学号填写了才发送\n            ...(this.registerForm.studentId && { student_id: this.registerForm.studentId })\n          };\n          console.log('注册信息 (Login.vue):', payload); // 确认发送的数据\n          \n          const response = await axios.post('/api/auth/register', payload);\n          \n          // 处理成功响应\n          const responseData = response.data || {};\n          this.$message.success(responseData.message || '注册成功！请返回登录');\n          this.activeTab = 'login'; // 切换回登录 Tab\n          // 可选：清空注册表单\n          // this.$refs.registerFormRef.resetFields();\n          \n        } catch (error) {\n          console.error('注册失败 (Login.vue):', error);\n          let errorMessage = '注册失败，请稍后重试';\n          if (error.response && error.response.data && error.response.data.error) {\n            errorMessage = error.response.data.error; // 使用后端返回的 error 信息\n          }\n          this.$message.error(errorMessage);\n        } finally {\n          this.registerLoading = false;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 450px;\n  padding: 20px 0;\n}\n\n.logo {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.login-button, .register-button {\n  width: 100%;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}