{"ast":null,"code":"import _toConsumableArray from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'UserManagement',\n  data: function data() {\n    // 邮箱验证规则\n    var validateEmail = function validateEmail(rule, value, callback) {\n      var emailRegex = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      if (value && !emailRegex.test(value)) {\n        callback(new Error('请输入正确的邮箱格式'));\n      } else {\n        callback();\n      }\n    };\n\n    // 手机号验证规则\n    var validatePhone = function validatePhone(rule, value, callback) {\n      var phoneRegex = /^1[3456789]\\d{9}$/;\n      if (value && !phoneRegex.test(value)) {\n        callback(new Error('请输入正确的手机号格式'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      // 搜索表单\n      searchForm: {\n        username: '',\n        userType: '',\n        status: ''\n      },\n      // 用户数据\n      users: [],\n      filteredUsers: [],\n      loading: false,\n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      // 用户表单\n      userDialogVisible: false,\n      editMode: false,\n      userForm: {\n        id: null,\n        username: '',\n        name: '',\n        userType: 'student',\n        studentId: '',\n        teacherId: '',\n        email: '',\n        phone: '',\n        password: '',\n        status: 'active',\n        remark: ''\n      },\n      userRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        userType: [{\n          required: true,\n          message: '请选择用户类型',\n          trigger: 'change'\n        }],\n        studentId: [{\n          required: true,\n          message: '请输入学号',\n          trigger: 'blur'\n        }],\n        teacherId: [{\n          required: true,\n          message: '请输入工号',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: validateEmail,\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6个字符',\n          trigger: 'blur'\n        }]\n      },\n      submitting: false,\n      // 导入对话框\n      importDialogVisible: false,\n      importFile: [],\n      importing: false\n    };\n  },\n  computed: {\n    // 分页后的数据\n    paginatedUsers: function paginatedUsers() {\n      var start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      var end = start + this.pagination.pageSize;\n      return this.filteredUsers.slice(start, end);\n    }\n  },\n  mounted: function mounted() {\n    this.loadUsers();\n  },\n  methods: {\n    // 获取用户类型标签样式\n    getUserTypeTag: function getUserTypeTag(type) {\n      var typeMap = {\n        'student': 'primary',\n        'teacher': 'success',\n        'admin': 'danger'\n      };\n      return typeMap[type] || 'info';\n    },\n    // 获取用户类型标签文本\n    getUserTypeLabel: function getUserTypeLabel(type) {\n      var typeMap = {\n        'student': '学生',\n        'teacher': '教师',\n        'admin': '管理员'\n      };\n      return typeMap[type] || type;\n    },\n    // 加载用户数据\n    loadUsers: function loadUsers() {\n      var _this = this;\n      this.loading = true;\n\n      // 模拟API请求\n      setTimeout(function () {\n        // 生成模拟用户数据\n        _this.users = [{\n          id: 1,\n          username: 'admin',\n          name: '系统管理员',\n          userType: 'admin',\n          email: 'admin@example.com',\n          phone: '13800138000',\n          status: 'active',\n          loginTime: '2023-06-10 12:30:45',\n          remark: '超级管理员账号'\n        }, {\n          id: 2,\n          username: 'teacher1',\n          name: '张教授',\n          userType: 'teacher',\n          teacherId: 'T2023001',\n          email: 'teacher1@example.com',\n          phone: '13900139001',\n          status: 'active',\n          loginTime: '2023-06-09 09:15:30',\n          remark: '计算机学院教师'\n        }, {\n          id: 3,\n          username: 'student1',\n          name: '李明',\n          userType: 'student',\n          studentId: 'S20230001',\n          email: 'student1@example.com',\n          phone: '13800138001',\n          status: 'active',\n          loginTime: '2023-06-10 08:45:20',\n          remark: '计算机学院学生'\n        }, {\n          id: 4,\n          username: 'student2',\n          name: '王华',\n          userType: 'student',\n          studentId: 'S20230002',\n          email: 'student2@example.com',\n          phone: '13800138002',\n          status: 'active',\n          loginTime: '2023-06-09 16:20:10',\n          remark: '物理学院学生'\n        }, {\n          id: 5,\n          username: 'student3',\n          name: '张三',\n          userType: 'student',\n          studentId: 'S20230003',\n          email: 'student3@example.com',\n          phone: '13800138003',\n          status: 'disabled',\n          loginTime: '2023-06-08 14:35:25',\n          remark: '违规使用，暂时禁用'\n        }, {\n          id: 6,\n          username: 'teacher2',\n          name: '王教授',\n          userType: 'teacher',\n          teacherId: 'T2023002',\n          email: 'teacher2@example.com',\n          phone: '13900139002',\n          status: 'active',\n          loginTime: '2023-06-10 10:20:15',\n          remark: '文学院教师'\n        }, {\n          id: 7,\n          username: 'student4',\n          name: '李四',\n          userType: 'student',\n          studentId: 'S20230004',\n          email: 'student4@example.com',\n          phone: '13800138004',\n          status: 'active',\n          loginTime: '2023-06-10 11:50:40',\n          remark: ''\n        }, {\n          id: 8,\n          username: 'student5',\n          name: '王五',\n          userType: 'student',\n          studentId: 'S20230005',\n          email: 'student5@example.com',\n          phone: '13800138005',\n          status: 'active',\n          loginTime: '2023-06-09 18:30:55',\n          remark: ''\n        }, {\n          id: 9,\n          username: 'manager1',\n          name: '李管理',\n          userType: 'admin',\n          email: 'manager1@example.com',\n          phone: '13900139003',\n          status: 'active',\n          loginTime: '2023-06-10 09:05:30',\n          remark: '设施管理员'\n        }, {\n          id: 10,\n          username: 'student6',\n          name: '赵六',\n          userType: 'student',\n          studentId: 'S20230006',\n          email: 'student6@example.com',\n          phone: '13800138006',\n          status: 'active',\n          loginTime: '2023-06-10 07:25:10',\n          remark: ''\n        }];\n        _this.filterUsers();\n        _this.loading = false;\n      }, 500);\n    },\n    // 筛选用户\n    filterUsers: function filterUsers() {\n      var _this2 = this;\n      this.filteredUsers = this.users.filter(function (user) {\n        // 用户名筛选\n        if (_this2.searchForm.username && !user.username.includes(_this2.searchForm.username)) {\n          return false;\n        }\n\n        // 用户类型筛选\n        if (_this2.searchForm.userType && user.userType !== _this2.searchForm.userType) {\n          return false;\n        }\n\n        // 状态筛选\n        if (_this2.searchForm.status && user.status !== _this2.searchForm.status) {\n          return false;\n        }\n        return true;\n      });\n\n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    // 搜索\n    handleSearch: function handleSearch() {\n      this.filterUsers();\n    },\n    // 重置搜索\n    resetSearch: function resetSearch() {\n      this.searchForm = {\n        username: '',\n        userType: '',\n        status: ''\n      };\n      this.filterUsers();\n    },\n    // 刷新用户列表\n    refreshUserList: function refreshUserList() {\n      this.loadUsers();\n    },\n    // 分页相关方法\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    // 显示添加用户对话框\n    showAddUserDialog: function showAddUserDialog() {\n      var _this3 = this;\n      this.editMode = false;\n      this.userForm = {\n        id: null,\n        username: '',\n        name: '',\n        userType: 'student',\n        studentId: '',\n        teacherId: '',\n        email: '',\n        phone: '',\n        password: '',\n        status: 'active',\n        remark: ''\n      };\n      this.userDialogVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.userFormRef.clearValidate();\n      });\n    },\n    // 编辑用户\n    handleEdit: function handleEdit(row) {\n      var _this4 = this;\n      this.editMode = true;\n      this.userForm = {\n        id: row.id,\n        username: row.username,\n        name: row.name,\n        userType: row.userType,\n        studentId: row.studentId || '',\n        teacherId: row.teacherId || '',\n        email: row.email,\n        phone: row.phone,\n        status: row.status,\n        remark: row.remark || ''\n      };\n      this.userDialogVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs.userFormRef.clearValidate();\n      });\n    },\n    // 改变用户状态\n    handleStatusChange: function handleStatusChange(row) {\n      var statusText = row.status === 'active' ? '启用' : '禁用';\n      this.$message.success(\"\\u5DF2\".concat(statusText, \"\\u7528\\u6237\\uFF1A\").concat(row.username));\n\n      // 实际应用中应该调用API\n    },\n    // 删除用户\n    handleDelete: function handleDelete(row) {\n      var _this5 = this;\n      this.$confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u7528\\u6237\\\"\".concat(row.username, \"\\\"\\u5417\\uFF1F\\u6B64\\u64CD\\u4F5C\\u4E0D\\u53EF\\u6062\\u590D\\uFF01\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(function () {\n        // 模拟API请求\n        // 从本地数据中删除\n        _this5.users = _this5.users.filter(function (u) {\n          return u.id !== row.id;\n        });\n        _this5.filterUsers();\n        _this5.$message.success(\"\\u7528\\u6237\\\"\".concat(row.username, \"\\\"\\u5DF2\\u5220\\u9664\"));\n      })[\"catch\"](function () {});\n    },\n    // 提交用户表单\n    submitUserForm: function submitUserForm() {\n      var _this6 = this;\n      this.$refs.userFormRef.validate(function (valid) {\n        if (!valid) return;\n        _this6.submitting = true;\n\n        // 模拟API请求\n        setTimeout(function () {\n          if (_this6.editMode) {\n            // 更新用户\n            var index = _this6.users.findIndex(function (u) {\n              return u.id === _this6.userForm.id;\n            });\n            if (index !== -1) {\n              _this6.users[index] = _objectSpread(_objectSpread({}, _this6.users[index]), _this6.userForm);\n              _this6.$message.success(\"\\u7528\\u6237\\\"\".concat(_this6.userForm.username, \"\\\"\\u66F4\\u65B0\\u6210\\u529F\"));\n            }\n          } else {\n            // 添加用户\n            var newId = Math.max.apply(Math, _toConsumableArray(_this6.users.map(function (u) {\n              return u.id;\n            })).concat([0])) + 1;\n            var newUser = _objectSpread(_objectSpread({}, _this6.userForm), {}, {\n              id: newId,\n              loginTime: '从未登录'\n            });\n            _this6.users.push(newUser);\n            _this6.$message.success(\"\\u7528\\u6237\\\"\".concat(_this6.userForm.username, \"\\\"\\u6DFB\\u52A0\\u6210\\u529F\"));\n          }\n          _this6.filterUsers();\n          _this6.userDialogVisible = false;\n          _this6.submitting = false;\n        }, 1000);\n      });\n    },\n    // 导出用户数据\n    exportUsers: function exportUsers() {\n      var _this7 = this;\n      this.$message.info('正在导出用户数据，请稍候...');\n\n      // 模拟导出过程\n      setTimeout(function () {\n        _this7.$message.success('用户数据导出成功');\n      }, 1000);\n    },\n    // 显示导入对话框\n    showImportDialog: function showImportDialog() {\n      this.importDialogVisible = true;\n      this.importFile = [];\n    },\n    // 文件变更处理\n    handleFileChange: function handleFileChange(file) {\n      this.importFile = [file];\n    },\n    // 下载模板\n    downloadTemplate: function downloadTemplate() {\n      this.$message.info('模板下载功能正在开发中');\n    },\n    // 提交导入\n    submitImport: function submitImport() {\n      var _this8 = this;\n      if (this.importFile.length === 0) {\n        this.$message.warning('请选择Excel文件');\n        return;\n      }\n      this.importing = true;\n\n      // 模拟导入过程\n      setTimeout(function () {\n        _this8.importing = false;\n        _this8.importDialogVisible = false;\n        _this8.$message.success('已成功导入50个用户');\n        _this8.loadUsers();\n      }, 1500);\n    }\n  },\n  watch: {\n    // 监听用户类型变化，重置相关字段\n    'userForm.userType': function userFormUserType(newVal) {\n      if (newVal === 'student') {\n        this.userForm.teacherId = '';\n      } else if (newVal === 'teacher') {\n        this.userForm.studentId = '';\n      } else {\n        this.userForm.studentId = '';\n        this.userForm.teacherId = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateEmail","rule","value","callback","emailRegex","test","Error","validatePhone","phoneRegex","searchForm","username","userType","status","users","filteredUsers","loading","pagination","currentPage","pageSize","userDialogVisible","editMode","userForm","id","studentId","teacherId","email","phone","password","remark","userRules","required","message","trigger","min","max","validator","submitting","importDialogVisible","importFile","importing","computed","paginatedUsers","start","end","slice","mounted","loadUsers","methods","getUserTypeTag","type","typeMap","getUserTypeLabel","_this","setTimeout","loginTime","filterUsers","_this2","filter","user","includes","handleSearch","resetSearch","refreshUserList","handleSizeChange","val","handleCurrentChange","showAddUserDialog","_this3","$nextTick","$refs","userFormRef","clearValidate","handleEdit","row","_this4","handleStatusChange","statusText","$message","success","concat","handleDelete","_this5","$confirm","confirmButtonText","cancelButtonText","then","u","submitUserForm","_this6","validate","valid","index","findIndex","_objectSpread","newId","Math","apply","_toConsumableArray","map","newUser","push","exportUsers","_this7","info","showImportDialog","handleFileChange","file","downloadTemplate","submitImport","_this8","length","warning","watch","userFormUserType","newVal"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/admin/UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management\">\n    <!-- 搜索和工具栏 -->\n    <el-card class=\"search-card\">\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"searchForm.username\" placeholder=\"请输入用户名\" clearable></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"用户类型\">\n          <el-select v-model=\"searchForm.userType\" placeholder=\"请选择\" clearable>\n            <el-option label=\"学生\" value=\"student\"></el-option>\n            <el-option label=\"教师\" value=\"teacher\"></el-option>\n            <el-option label=\"管理员\" value=\"admin\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\">\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择\" clearable>\n            <el-option label=\"正常\" value=\"active\"></el-option>\n            <el-option label=\"禁用\" value=\"disabled\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <div class=\"action-buttons\">\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddUserDialog\">添加用户</el-button>\n        <el-button type=\"warning\" icon=\"el-icon-download\" @click=\"exportUsers\">导出数据</el-button>\n        <el-button type=\"info\" icon=\"el-icon-upload2\" @click=\"showImportDialog\">批量导入</el-button>\n      </div>\n    </el-card>\n    \n    <!-- 用户列表 -->\n    <el-card class=\"table-card\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>用户列表</span>\n          <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"refreshUserList\">刷新</el-button>\n        </div>\n      </template>\n      \n      <el-table\n        :data=\"paginatedUsers\"\n        border\n        style=\"width: 100%\"\n        v-loading=\"loading\">\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        \n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        \n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\"></el-table-column>\n        \n        <el-table-column prop=\"name\" label=\"姓名\" width=\"120\"></el-table-column>\n        \n        <el-table-column prop=\"userType\" label=\"用户类型\" width=\"100\">\n          <template v-slot=\"scope\">\n            <el-tag :type=\"getUserTypeTag(scope.row.userType)\">\n              {{ getUserTypeLabel(scope.row.userType) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\n        \n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"130\"></el-table-column>\n        \n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template v-slot=\"scope\">\n            <el-switch\n              v-model=\"scope.row.status\"\n              :active-value=\"'active'\"\n              :inactive-value=\"'disabled'\"\n              @change=\"handleStatusChange(scope.row)\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\">\n            </el-switch>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"loginTime\" label=\"最后登录\" width=\"180\"></el-table-column>\n        \n        <el-table-column label=\"操作\" width=\"200\">\n          <template v-slot=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.row)\">\n              编辑\n            </el-button>\n            \n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\">\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.currentPage\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pagination.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"filteredUsers.length\">\n        </el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑用户对话框 -->\n    <el-dialog\n      :title=\"editMode ? '编辑用户' : '添加用户'\"\n      v-model:visible=\"userDialogVisible\"\n      width=\"500px\">\n      <el-form :model=\"userForm\" :rules=\"userRules\" ref=\"userFormRef\" label-width=\"100px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"userForm.name\" placeholder=\"请输入姓名\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"用户类型\" prop=\"userType\">\n          <el-select v-model=\"userForm.userType\" placeholder=\"请选择用户类型\">\n            <el-option label=\"学生\" value=\"student\"></el-option>\n            <el-option label=\"教师\" value=\"teacher\"></el-option>\n            <el-option label=\"管理员\" value=\"admin\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item v-if=\"userForm.userType === 'student'\" label=\"学号\" prop=\"studentId\">\n          <el-input v-model=\"userForm.studentId\" placeholder=\"请输入学号\"></el-input>\n        </el-form-item>\n        \n        <el-form-item v-if=\"userForm.userType === 'teacher'\" label=\"工号\" prop=\"teacherId\">\n          <el-input v-model=\"userForm.teacherId\" placeholder=\"请输入工号\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"userForm.phone\" placeholder=\"请输入手机号\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"!editMode\">\n          <el-input v-model=\"userForm.password\" placeholder=\"请输入密码\" show-password></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"userForm.status\">\n            <el-radio label=\"active\">正常</el-radio>\n            <el-radio label=\"disabled\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input type=\"textarea\" v-model=\"userForm.remark\" placeholder=\"选填\"></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"userDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitUserForm\" :loading=\"submitting\">确 定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n    \n    <!-- 导入用户对话框 -->\n    <el-dialog title=\"批量导入用户\" v-model:visible=\"importDialogVisible\" width=\"500px\">\n      <div class=\"import-tips\">\n        <p>请按照模板格式上传Excel文件，包含以下字段：</p>\n        <ul>\n          <li>用户名（必填）</li>\n          <li>姓名（必填）</li>\n          <li>用户类型（必填，student/teacher/admin）</li>\n          <li>学号/工号（学生和教师必填）</li>\n          <li>邮箱（必填）</li>\n          <li>手机号（必填）</li>\n          <li>密码（必填，建议设置初始密码）</li>\n        </ul>\n      </div>\n      \n      <el-upload\n        action=\"#\"\n        :auto-upload=\"false\"\n        accept=\".xlsx,.xls\"\n        :limit=\"1\"\n        :file-list=\"importFile\"\n        :on-change=\"handleFileChange\">\n        <template #trigger>\n          <el-button size=\"small\" type=\"primary\">选择文件</el-button>\n        </template>\n        <template #tip>\n          <div class=\"el-upload__tip\">只能上传Excel文件，且不超过5MB</div>\n        </template>\n      </el-upload>\n      \n      <div class=\"download-template\">\n        <a href=\"#\" @click.prevent=\"downloadTemplate\">下载导入模板</a>\n      </div>\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"importDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitImport\" :loading=\"importing\">开始导入</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserManagement',\n  data() {\n    // 邮箱验证规则\n    const validateEmail = (rule, value, callback) => {\n      const emailRegex = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      if (value && !emailRegex.test(value)) {\n        callback(new Error('请输入正确的邮箱格式'));\n      } else {\n        callback();\n      }\n    };\n    \n    // 手机号验证规则\n    const validatePhone = (rule, value, callback) => {\n      const phoneRegex = /^1[3456789]\\d{9}$/;\n      if (value && !phoneRegex.test(value)) {\n        callback(new Error('请输入正确的手机号格式'));\n      } else {\n        callback();\n      }\n    };\n    \n    return {\n      // 搜索表单\n      searchForm: {\n        username: '',\n        userType: '',\n        status: ''\n      },\n      \n      // 用户数据\n      users: [],\n      filteredUsers: [],\n      loading: false,\n      \n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      \n      // 用户表单\n      userDialogVisible: false,\n      editMode: false,\n      userForm: {\n        id: null,\n        username: '',\n        name: '',\n        userType: 'student',\n        studentId: '',\n        teacherId: '',\n        email: '',\n        phone: '',\n        password: '',\n        status: 'active',\n        remark: ''\n      },\n      userRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        userType: [\n          { required: true, message: '请选择用户类型', trigger: 'change' }\n        ],\n        studentId: [\n          { required: true, message: '请输入学号', trigger: 'blur' }\n        ],\n        teacherId: [\n          { required: true, message: '请输入工号', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: validateEmail, trigger: 'blur' }\n        ],\n        phone: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          { validator: validatePhone, trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n        ]\n      },\n      submitting: false,\n      \n      // 导入对话框\n      importDialogVisible: false,\n      importFile: [],\n      importing: false\n    };\n  },\n  computed: {\n    // 分页后的数据\n    paginatedUsers() {\n      const start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      const end = start + this.pagination.pageSize;\n      return this.filteredUsers.slice(start, end);\n    }\n  },\n  mounted() {\n    this.loadUsers();\n  },\n  methods: {\n    // 获取用户类型标签样式\n    getUserTypeTag(type) {\n      const typeMap = {\n        'student': 'primary',\n        'teacher': 'success',\n        'admin': 'danger'\n      };\n      return typeMap[type] || 'info';\n    },\n    \n    // 获取用户类型标签文本\n    getUserTypeLabel(type) {\n      const typeMap = {\n        'student': '学生',\n        'teacher': '教师',\n        'admin': '管理员'\n      };\n      return typeMap[type] || type;\n    },\n    \n    // 加载用户数据\n    loadUsers() {\n      this.loading = true;\n      \n      // 模拟API请求\n      setTimeout(() => {\n        // 生成模拟用户数据\n        this.users = [\n          {\n            id: 1,\n            username: 'admin',\n            name: '系统管理员',\n            userType: 'admin',\n            email: 'admin@example.com',\n            phone: '13800138000',\n            status: 'active',\n            loginTime: '2023-06-10 12:30:45',\n            remark: '超级管理员账号'\n          },\n          {\n            id: 2,\n            username: 'teacher1',\n            name: '张教授',\n            userType: 'teacher',\n            teacherId: 'T2023001',\n            email: 'teacher1@example.com',\n            phone: '13900139001',\n            status: 'active',\n            loginTime: '2023-06-09 09:15:30',\n            remark: '计算机学院教师'\n          },\n          {\n            id: 3,\n            username: 'student1',\n            name: '李明',\n            userType: 'student',\n            studentId: 'S20230001',\n            email: 'student1@example.com',\n            phone: '13800138001',\n            status: 'active',\n            loginTime: '2023-06-10 08:45:20',\n            remark: '计算机学院学生'\n          },\n          {\n            id: 4,\n            username: 'student2',\n            name: '王华',\n            userType: 'student',\n            studentId: 'S20230002',\n            email: 'student2@example.com',\n            phone: '13800138002',\n            status: 'active',\n            loginTime: '2023-06-09 16:20:10',\n            remark: '物理学院学生'\n          },\n          {\n            id: 5,\n            username: 'student3',\n            name: '张三',\n            userType: 'student',\n            studentId: 'S20230003',\n            email: 'student3@example.com',\n            phone: '13800138003',\n            status: 'disabled',\n            loginTime: '2023-06-08 14:35:25',\n            remark: '违规使用，暂时禁用'\n          },\n          {\n            id: 6,\n            username: 'teacher2',\n            name: '王教授',\n            userType: 'teacher',\n            teacherId: 'T2023002',\n            email: 'teacher2@example.com',\n            phone: '13900139002',\n            status: 'active',\n            loginTime: '2023-06-10 10:20:15',\n            remark: '文学院教师'\n          },\n          {\n            id: 7,\n            username: 'student4',\n            name: '李四',\n            userType: 'student',\n            studentId: 'S20230004',\n            email: 'student4@example.com',\n            phone: '13800138004',\n            status: 'active',\n            loginTime: '2023-06-10 11:50:40',\n            remark: ''\n          },\n          {\n            id: 8,\n            username: 'student5',\n            name: '王五',\n            userType: 'student',\n            studentId: 'S20230005',\n            email: 'student5@example.com',\n            phone: '13800138005',\n            status: 'active',\n            loginTime: '2023-06-09 18:30:55',\n            remark: ''\n          },\n          {\n            id: 9,\n            username: 'manager1',\n            name: '李管理',\n            userType: 'admin',\n            email: 'manager1@example.com',\n            phone: '13900139003',\n            status: 'active',\n            loginTime: '2023-06-10 09:05:30',\n            remark: '设施管理员'\n          },\n          {\n            id: 10,\n            username: 'student6',\n            name: '赵六',\n            userType: 'student',\n            studentId: 'S20230006',\n            email: 'student6@example.com',\n            phone: '13800138006',\n            status: 'active',\n            loginTime: '2023-06-10 07:25:10',\n            remark: ''\n          }\n        ];\n        \n        this.filterUsers();\n        this.loading = false;\n      }, 500);\n    },\n    \n    // 筛选用户\n    filterUsers() {\n      this.filteredUsers = this.users.filter(user => {\n        // 用户名筛选\n        if (this.searchForm.username && !user.username.includes(this.searchForm.username)) {\n          return false;\n        }\n        \n        // 用户类型筛选\n        if (this.searchForm.userType && user.userType !== this.searchForm.userType) {\n          return false;\n        }\n        \n        // 状态筛选\n        if (this.searchForm.status && user.status !== this.searchForm.status) {\n          return false;\n        }\n        \n        return true;\n      });\n      \n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    \n    // 搜索\n    handleSearch() {\n      this.filterUsers();\n    },\n    \n    // 重置搜索\n    resetSearch() {\n      this.searchForm = {\n        username: '',\n        userType: '',\n        status: ''\n      };\n      this.filterUsers();\n    },\n    \n    // 刷新用户列表\n    refreshUserList() {\n      this.loadUsers();\n    },\n    \n    // 分页相关方法\n    handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    \n    handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    \n    // 显示添加用户对话框\n    showAddUserDialog() {\n      this.editMode = false;\n      this.userForm = {\n        id: null,\n        username: '',\n        name: '',\n        userType: 'student',\n        studentId: '',\n        teacherId: '',\n        email: '',\n        phone: '',\n        password: '',\n        status: 'active',\n        remark: ''\n      };\n      \n      this.userDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.userFormRef.clearValidate();\n      });\n    },\n    \n    // 编辑用户\n    handleEdit(row) {\n      this.editMode = true;\n      this.userForm = {\n        id: row.id,\n        username: row.username,\n        name: row.name,\n        userType: row.userType,\n        studentId: row.studentId || '',\n        teacherId: row.teacherId || '',\n        email: row.email,\n        phone: row.phone,\n        status: row.status,\n        remark: row.remark || ''\n      };\n      \n      this.userDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.userFormRef.clearValidate();\n      });\n    },\n    \n    // 改变用户状态\n    handleStatusChange(row) {\n      const statusText = row.status === 'active' ? '启用' : '禁用';\n      this.$message.success(`已${statusText}用户：${row.username}`);\n      \n      // 实际应用中应该调用API\n    },\n    \n    // 删除用户\n    handleDelete(row) {\n      this.$confirm(`确定要删除用户\"${row.username}\"吗？此操作不可恢复！`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(() => {\n        // 模拟API请求\n        // 从本地数据中删除\n        this.users = this.users.filter(u => u.id !== row.id);\n        this.filterUsers();\n        this.$message.success(`用户\"${row.username}\"已删除`);\n      }).catch(() => {});\n    },\n    \n    // 提交用户表单\n    submitUserForm() {\n      this.$refs.userFormRef.validate(valid => {\n        if (!valid) return;\n        \n        this.submitting = true;\n        \n        // 模拟API请求\n        setTimeout(() => {\n          if (this.editMode) {\n            // 更新用户\n            const index = this.users.findIndex(u => u.id === this.userForm.id);\n            if (index !== -1) {\n              this.users[index] = { ...this.users[index], ...this.userForm };\n              this.$message.success(`用户\"${this.userForm.username}\"更新成功`);\n            }\n          } else {\n            // 添加用户\n            const newId = Math.max(...this.users.map(u => u.id), 0) + 1;\n            const newUser = {\n              ...this.userForm,\n              id: newId,\n              loginTime: '从未登录'\n            };\n            \n            this.users.push(newUser);\n            this.$message.success(`用户\"${this.userForm.username}\"添加成功`);\n          }\n          \n          this.filterUsers();\n          this.userDialogVisible = false;\n          this.submitting = false;\n        }, 1000);\n      });\n    },\n    \n    // 导出用户数据\n    exportUsers() {\n      this.$message.info('正在导出用户数据，请稍候...');\n      \n      // 模拟导出过程\n      setTimeout(() => {\n        this.$message.success('用户数据导出成功');\n      }, 1000);\n    },\n    \n    // 显示导入对话框\n    showImportDialog() {\n      this.importDialogVisible = true;\n      this.importFile = [];\n    },\n    \n    // 文件变更处理\n    handleFileChange(file) {\n      this.importFile = [file];\n    },\n    \n    // 下载模板\n    downloadTemplate() {\n      this.$message.info('模板下载功能正在开发中');\n    },\n    \n    // 提交导入\n    submitImport() {\n      if (this.importFile.length === 0) {\n        this.$message.warning('请选择Excel文件');\n        return;\n      }\n      \n      this.importing = true;\n      \n      // 模拟导入过程\n      setTimeout(() => {\n        this.importing = false;\n        this.importDialogVisible = false;\n        this.$message.success('已成功导入50个用户');\n        this.loadUsers();\n      }, 1500);\n    }\n  },\n  watch: {\n    // 监听用户类型变化，重置相关字段\n    'userForm.userType': function(newVal) {\n      if (newVal === 'student') {\n        this.userForm.teacherId = '';\n      } else if (newVal === 'teacher') {\n        this.userForm.studentId = '';\n      } else {\n        this.userForm.studentId = '';\n        this.userForm.teacherId = '';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.user-management {\n  padding: 20px;\n}\n\n.search-card {\n  margin-bottom: 20px;\n}\n\n.search-form {\n  margin-bottom: 15px;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.table-card {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.import-tips {\n  margin-bottom: 20px;\n}\n\n.import-tips ul {\n  padding-left: 20px;\n  color: #606266;\n}\n\n.download-template {\n  margin-top: 10px;\n  text-align: right;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}