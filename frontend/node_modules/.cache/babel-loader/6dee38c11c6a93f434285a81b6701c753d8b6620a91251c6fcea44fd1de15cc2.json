{"ast":null,"code":"import _objectSpread from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/jeremiahncross/Documents/code/ymzxs/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'StudyRoomManagement',\n  data: function data() {\n    return {\n      // 搜索\n      searchQuery: '',\n      // 自习室数据\n      rooms: [],\n      filteredRooms: [],\n      loading: false,\n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      // 自习室表单\n      roomDialogVisible: false,\n      editMode: false,\n      roomForm: {\n        id: null,\n        name: '',\n        location: '',\n        category: 'general',\n        capacity: 100,\n        openingHours: '08:00-22:00',\n        status: 'open',\n        description: '',\n        zones: [],\n        facilities: ['wifi', 'airConditioner']\n      },\n      roomRules: {\n        name: [{\n          required: true,\n          message: '请输入自习室名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 50,\n          message: '长度在 2 到 50 个字符',\n          trigger: 'blur'\n        }],\n        location: [{\n          required: true,\n          message: '请输入自习室位置',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择自习室类型',\n          trigger: 'change'\n        }],\n        capacity: [{\n          required: true,\n          message: '请输入座位容量',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 1,\n          message: '容量必须大于0',\n          trigger: 'blur'\n        }],\n        openingHours: [{\n          required: true,\n          message: '请输入开放时间',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/,\n          message: '时间格式不正确（例如：08:00-22:00）',\n          trigger: 'blur'\n        }]\n      },\n      submitting: false,\n      // 区域表单\n      zoneDialogVisible: false,\n      zoneForm: {\n        id: '',\n        name: '',\n        features: [],\n        description: ''\n      },\n      zoneRules: {\n        name: [{\n          required: true,\n          message: '请输入区域名称',\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入区域代码',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Z]$/,\n          message: '区域代码应为一个大写字母',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    // 分页后的数据\n    paginatedRooms: function paginatedRooms() {\n      var start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      var end = start + this.pagination.pageSize;\n      return this.filteredRooms.slice(start, end);\n    }\n  },\n  methods: {\n    // 获取自习室类型标签\n    getRoomCategoryLabel: function getRoomCategoryLabel(category) {\n      var categoryMap = {\n        'quiet': '静音区',\n        'discussion': '讨论区',\n        'power': '电源区',\n        'general': '综合区'\n      };\n      return categoryMap[category] || category;\n    },\n    // 获取自习室类型颜色\n    getRoomCategoryType: function getRoomCategoryType(category) {\n      var typeMap = {\n        'quiet': 'success',\n        'discussion': 'warning',\n        'power': 'primary',\n        'general': 'info'\n      };\n      return typeMap[category] || '';\n    },\n    // 获取状态标签\n    getRoomStatusLabel: function getRoomStatusLabel(status) {\n      var statusMap = {\n        'open': '开放中',\n        'closed': '已关闭',\n        'maintenance': '维护中'\n      };\n      return statusMap[status] || status;\n    },\n    // 获取状态类型（标签颜色）\n    getRoomStatusType: function getRoomStatusType(status) {\n      var typeMap = {\n        'open': 'success',\n        'closed': 'danger',\n        'maintenance': 'info'\n      };\n      return typeMap[status] || '';\n    },\n    // 获取占用率状态\n    getOccupancyStatus: function getOccupancyStatus(current, total) {\n      var percentage = current / total * 100;\n      if (percentage >= 90) {\n        return 'exception';\n      } else if (percentage >= 70) {\n        return 'warning';\n      } else {\n        return 'success';\n      }\n    },\n    // 搜索处理\n    handleSearch: function handleSearch() {\n      this.filterRooms();\n    },\n    // 筛选自习室\n    filterRooms: function filterRooms() {\n      if (!this.searchQuery) {\n        this.filteredRooms = _toConsumableArray(this.rooms);\n      } else {\n        var query = this.searchQuery.toLowerCase();\n        this.filteredRooms = this.rooms.filter(function (room) {\n          return room.name.toLowerCase().includes(query) || room.location.toLowerCase().includes(query);\n        });\n      }\n\n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    // 加载自习室数据\n    loadRooms: function loadRooms() {\n      var _this = this;\n      this.loading = true;\n\n      // 模拟API请求\n      setTimeout(function () {\n        // 生成模拟自习室数据\n        _this.rooms = [{\n          id: 1,\n          name: '一号自习室（静音区）',\n          location: '图书馆二楼东侧',\n          category: 'quiet',\n          capacity: 120,\n          currentOccupancy: 87,\n          openingHours: '08:00-22:00',\n          status: 'open',\n          description: '安静的学习环境，禁止大声交谈，适合需要安静环境的学习者。',\n          zones: [{\n            id: 'A',\n            name: 'A区（靠窗）',\n            features: ['window']\n          }, {\n            id: 'B',\n            name: 'B区（中间）',\n            features: []\n          }, {\n            id: 'C',\n            name: 'C区（电源）',\n            features: ['power']\n          }],\n          facilities: ['wifi', 'airConditioner', 'sockets', 'water']\n        }, {\n          id: 2,\n          name: '二号自习室（讨论区）',\n          location: '图书馆三楼西侧',\n          category: 'discussion',\n          capacity: 80,\n          currentOccupancy: 35,\n          openingHours: '09:00-21:00',\n          status: 'open',\n          description: '允许小声讨论，适合小组学习和协作项目。配备有讨论桌和白板。',\n          zones: [{\n            id: 'D',\n            name: 'D区（靠窗）',\n            features: ['window', 'large']\n          }, {\n            id: 'E',\n            name: 'E区（中间）',\n            features: ['large']\n          }, {\n            id: 'F',\n            name: 'F区（电源）',\n            features: ['power']\n          }],\n          facilities: ['wifi', 'airConditioner', 'sockets', 'desk', 'water', 'restroom']\n        }, {\n          id: 3,\n          name: '三号自习室（电源区）',\n          location: '教学楼一楼',\n          category: 'power',\n          capacity: 60,\n          currentOccupancy: 45,\n          openingHours: '08:30-21:30',\n          status: 'open',\n          description: '每个座位都配备电源插座，适合需要长时间使用电子设备的学习者。',\n          zones: [{\n            id: 'G',\n            name: 'G区（靠窗）',\n            features: ['window', 'power']\n          }, {\n            id: 'H',\n            name: 'H区（中间）',\n            features: ['power']\n          }],\n          facilities: ['wifi', 'airConditioner', 'sockets']\n        }, {\n          id: 4,\n          name: '四号自习室（综合区）',\n          location: '教学楼二楼',\n          category: 'general',\n          capacity: 150,\n          currentOccupancy: 132,\n          openingHours: '07:00-23:00',\n          status: 'open',\n          description: '综合性自习室，分区明确，有安静区和讨论区。座位宽敞舒适。',\n          zones: [{\n            id: 'I',\n            name: 'I区（靠窗）',\n            features: ['window']\n          }, {\n            id: 'J',\n            name: 'J区（安静）',\n            features: ['quiet']\n          }, {\n            id: 'K',\n            name: 'K区（讨论）',\n            features: ['large']\n          }, {\n            id: 'L',\n            name: 'L区（电源）',\n            features: ['power']\n          }],\n          facilities: ['wifi', 'airConditioner', 'sockets', 'desk', 'water', 'restroom']\n        }, {\n          id: 5,\n          name: '五号自习室（临时关闭）',\n          location: '图书馆一楼',\n          category: 'general',\n          capacity: 90,\n          currentOccupancy: 0,\n          openingHours: '08:00-22:00',\n          status: 'closed',\n          description: '因空调维修暂时关闭，预计下周恢复开放。',\n          zones: [{\n            id: 'M',\n            name: 'M区（靠窗）',\n            features: ['window']\n          }, {\n            id: 'N',\n            name: 'N区（中间）',\n            features: []\n          }],\n          facilities: ['wifi', 'airConditioner', 'sockets', 'water']\n        }];\n        _this.filterRooms();\n        _this.loading = false;\n      }, 500);\n    },\n    // 刷新自习室数据\n    refreshRooms: function refreshRooms() {\n      this.loadRooms();\n    },\n    // 分页相关方法\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    // 显示添加自习室对话框\n    showAddRoomDialog: function showAddRoomDialog() {\n      var _this2 = this;\n      this.editMode = false;\n      this.roomForm = {\n        id: null,\n        name: '',\n        location: '',\n        category: 'general',\n        capacity: 100,\n        openingHours: '08:00-22:00',\n        status: 'open',\n        description: '',\n        zones: [],\n        facilities: ['wifi', 'airConditioner']\n      };\n      this.roomDialogVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs.roomFormRef.clearValidate();\n      });\n    },\n    // 编辑自习室\n    handleEdit: function handleEdit(row) {\n      var _this3 = this;\n      this.editMode = true;\n      this.roomForm = JSON.parse(JSON.stringify(row)); // 深复制\n\n      this.roomDialogVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.roomFormRef.clearValidate();\n      });\n    },\n    // 切换自习室状态\n    toggleRoomStatus: function toggleRoomStatus(row) {\n      var _this4 = this;\n      var action = row.status === 'closed' ? '开放' : '关闭';\n      this.$confirm(\"\\u786E\\u5B9A\\u8981\".concat(action, \"\\u81EA\\u4E60\\u5BA4\\\"\").concat(row.name, \"\\\"\\u5417\\uFF1F\"), '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 模拟API请求\n        var newStatus = row.status === 'closed' ? 'open' : 'closed';\n\n        // 更新本地数据\n        var index = _this4.rooms.findIndex(function (r) {\n          return r.id === row.id;\n        });\n        if (index !== -1) {\n          _this4.rooms[index].status = newStatus;\n          if (newStatus === 'closed') {\n            _this4.rooms[index].currentOccupancy = 0;\n          }\n          _this4.filterRooms();\n          _this4.$message.success(\"\\u81EA\\u4E60\\u5BA4\\\"\".concat(row.name, \"\\\"\\u5DF2\").concat(action));\n        }\n      })[\"catch\"](function () {});\n    },\n    // 删除自习室\n    handleDelete: function handleDelete(row) {\n      var _this5 = this;\n      this.$confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u81EA\\u4E60\\u5BA4\\\"\".concat(row.name, \"\\\"\\u5417\\uFF1F\\u6B64\\u64CD\\u4F5C\\u4E0D\\u53EF\\u6062\\u590D\\uFF01\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(function () {\n        // 模拟API请求\n        // 从本地数据中删除\n        _this5.rooms = _this5.rooms.filter(function (r) {\n          return r.id !== row.id;\n        });\n        _this5.filterRooms();\n        _this5.$message.success(\"\\u81EA\\u4E60\\u5BA4\\\"\".concat(row.name, \"\\\"\\u5DF2\\u5220\\u9664\"));\n      })[\"catch\"](function () {});\n    },\n    // 提交自习室表单\n    submitRoomForm: function submitRoomForm() {\n      var _this6 = this;\n      this.$refs.roomFormRef.validate(function (valid) {\n        if (!valid) return;\n        _this6.submitting = true;\n\n        // 模拟API请求\n        setTimeout(function () {\n          if (_this6.editMode) {\n            // 更新自习室\n            var index = _this6.rooms.findIndex(function (r) {\n              return r.id === _this6.roomForm.id;\n            });\n            if (index !== -1) {\n              _this6.rooms[index] = _objectSpread({}, _this6.roomForm);\n              _this6.$message.success(\"\\u81EA\\u4E60\\u5BA4\\\"\".concat(_this6.roomForm.name, \"\\\"\\u66F4\\u65B0\\u6210\\u529F\"));\n            }\n          } else {\n            // 添加自习室\n            var newId = Math.max.apply(Math, _toConsumableArray(_this6.rooms.map(function (r) {\n              return r.id;\n            })).concat([0])) + 1;\n            var newRoom = _objectSpread(_objectSpread({}, _this6.roomForm), {}, {\n              id: newId,\n              currentOccupancy: 0\n            });\n            _this6.rooms.push(newRoom);\n            _this6.$message.success(\"\\u81EA\\u4E60\\u5BA4\\\"\".concat(_this6.roomForm.name, \"\\\"\\u6DFB\\u52A0\\u6210\\u529F\"));\n          }\n          _this6.filterRooms();\n          _this6.roomDialogVisible = false;\n          _this6.submitting = false;\n        }, 1000);\n      });\n    },\n    // 显示添加区域对话框\n    showAddZoneDialog: function showAddZoneDialog() {\n      var _this7 = this;\n      this.zoneForm = {\n        id: '',\n        name: '',\n        features: [],\n        description: ''\n      };\n      this.zoneDialogVisible = true;\n      this.$nextTick(function () {\n        _this7.$refs.zoneFormRef.clearValidate();\n      });\n    },\n    // 提交区域表单\n    submitZoneForm: function submitZoneForm() {\n      var _this8 = this;\n      this.$refs.zoneFormRef.validate(function (valid) {\n        if (!valid) return;\n\n        // 检查区域代码是否重复\n        var isDuplicate = _this8.roomForm.zones.some(function (zone) {\n          return zone.id === _this8.zoneForm.id;\n        });\n        if (isDuplicate) {\n          _this8.$message.error('区域代码已存在，请使用不同的代码');\n          return;\n        }\n\n        // 添加到区域列表\n        _this8.roomForm.zones.push(_objectSpread({}, _this8.zoneForm));\n        _this8.$message.success('区域添加成功');\n        _this8.zoneDialogVisible = false;\n      });\n    },\n    // 移除区域\n    removeZone: function removeZone(index) {\n      var _this9 = this;\n      this.$confirm('确定要移除此区域吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this9.roomForm.zones.splice(index, 1);\n        _this9.$message.success('区域已移除');\n      })[\"catch\"](function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.loadRooms();\n  }\n};","map":{"version":3,"names":["name","data","searchQuery","rooms","filteredRooms","loading","pagination","currentPage","pageSize","roomDialogVisible","editMode","roomForm","id","location","category","capacity","openingHours","status","description","zones","facilities","roomRules","required","message","trigger","min","max","type","pattern","submitting","zoneDialogVisible","zoneForm","features","zoneRules","computed","paginatedRooms","start","end","slice","methods","getRoomCategoryLabel","categoryMap","getRoomCategoryType","typeMap","getRoomStatusLabel","statusMap","getRoomStatusType","getOccupancyStatus","current","total","percentage","handleSearch","filterRooms","_toConsumableArray","query","toLowerCase","filter","room","includes","loadRooms","_this","setTimeout","currentOccupancy","refreshRooms","handleSizeChange","val","handleCurrentChange","showAddRoomDialog","_this2","$nextTick","$refs","roomFormRef","clearValidate","handleEdit","row","_this3","JSON","parse","stringify","toggleRoomStatus","_this4","action","$confirm","concat","confirmButtonText","cancelButtonText","then","newStatus","index","findIndex","r","$message","success","handleDelete","_this5","submitRoomForm","_this6","validate","valid","_objectSpread","newId","Math","apply","map","newRoom","push","showAddZoneDialog","_this7","zoneFormRef","submitZoneForm","_this8","isDuplicate","some","zone","error","removeZone","_this9","splice","mounted"],"sources":["/Users/jeremiahncross/Documents/code/ymzxs/frontend/src/views/admin/StudyRoomManagement.vue"],"sourcesContent":["<template>\n  <div class=\"study-room-container\">\n    <!-- 顶部工具栏 -->\n    <el-card class=\"toolbar-card\">\n      <div class=\"toolbar\">\n        <div class=\"search-box\">\n          <el-input\n            placeholder=\"搜索自习室名称\"\n            v-model=\"searchQuery\"\n            clearable\n            @clear=\"handleSearch\"\n            @input=\"handleSearch\">\n            <template #append>\n              <el-button icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n            </template>\n          </el-input>\n        </div>\n        \n        <div class=\"right-tools\">\n          <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddRoomDialog\">添加自习室</el-button>\n          <el-button type=\"info\" icon=\"el-icon-refresh\" @click=\"refreshRooms\">刷新</el-button>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 自习室列表 -->\n    <el-card class=\"room-card\">\n      <template #header>\n        <div class=\"room-header\">\n          <h3>自习室列表</h3>\n          <div class=\"room-count\">\n            共 <span class=\"count-num\">{{ filteredRooms.length }}</span> 个自习室\n          </div>\n        </div>\n      </template>\n      \n      <el-table\n        :data=\"paginatedRooms\"\n        border\n        style=\"width: 100%\"\n        v-loading=\"loading\">\n        <el-table-column\n          prop=\"id\"\n          label=\"ID\"\n          width=\"80\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"name\"\n          label=\"自习室名称\"\n          min-width=\"180\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"location\"\n          label=\"位置\"\n          min-width=\"180\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"category\"\n          label=\"类型\"\n          width=\"120\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getRoomCategoryType(scope.row.category)\">\n              {{ getRoomCategoryLabel(scope.row.category) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"capacity\"\n          label=\"座位容量\"\n          width=\"100\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"currentOccupancy\"\n          label=\"当前使用\"\n          width=\"100\">\n          <template #default=\"scope\">\n            <div class=\"occupancy-info\">\n              <span>{{ scope.row.currentOccupancy }}/{{ scope.row.capacity }}</span>\n              <el-progress \n                :percentage=\"Math.round(scope.row.currentOccupancy / scope.row.capacity * 100)\" \n                :status=\"getOccupancyStatus(scope.row.currentOccupancy, scope.row.capacity)\">\n              </el-progress>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"openingHours\"\n          label=\"开放时间\"\n          width=\"200\">\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"status\"\n          label=\"状态\"\n          width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getRoomStatusType(scope.row.status)\">\n              {{ getRoomStatusLabel(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          label=\"操作\"\n          width=\"250\">\n          <template #default=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.row)\">\n              编辑\n            </el-button>\n            \n            <el-button\n              size=\"mini\"\n              :type=\"scope.row.status === 'closed' ? 'success' : 'warning'\"\n              :icon=\"scope.row.status === 'closed' ? 'el-icon-check' : 'el-icon-close'\"\n              @click=\"toggleRoomStatus(scope.row)\">\n              {{ scope.row.status === 'closed' ? '开放使用' : '关闭使用' }}\n            </el-button>\n            \n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\">\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.currentPage\"\n          :page-sizes=\"[5, 10, 20, 50]\"\n          :page-size=\"pagination.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"filteredRooms.length\">\n        </el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑自习室对话框 -->\n    <el-dialog\n      :title=\"editMode ? '编辑自习室' : '添加自习室'\"\n      v-model:visible=\"roomDialogVisible\"\n      width=\"600px\">\n      <el-form :model=\"roomForm\" :rules=\"roomRules\" ref=\"roomFormRef\" label-width=\"100px\">\n        <el-form-item label=\"自习室名称\" prop=\"name\">\n          <el-input v-model=\"roomForm.name\" placeholder=\"例如：图书馆三楼自习室\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"位置\" prop=\"location\">\n          <el-input v-model=\"roomForm.location\" placeholder=\"例如：图书馆三楼东侧\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"类型\" prop=\"category\">\n          <el-select v-model=\"roomForm.category\" placeholder=\"选择自习室类型\">\n            <el-option label=\"静音区\" value=\"quiet\"></el-option>\n            <el-option label=\"讨论区\" value=\"discussion\"></el-option>\n            <el-option label=\"电源区\" value=\"power\"></el-option>\n            <el-option label=\"综合区\" value=\"general\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"座位容量\" prop=\"capacity\">\n          <el-input-number v-model=\"roomForm.capacity\" :min=\"1\" :max=\"500\"></el-input-number>\n        </el-form-item>\n        \n        <el-form-item label=\"开放时间\" prop=\"openingHours\">\n          <el-input v-model=\"roomForm.openingHours\" placeholder=\"例如：08:00-22:00\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"roomForm.status\">\n            <el-radio label=\"open\">开放使用</el-radio>\n            <el-radio label=\"closed\">暂时关闭</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input \n            type=\"textarea\" \n            v-model=\"roomForm.description\" \n            :rows=\"3\" \n            placeholder=\"自习室描述，环境特点等\"></el-input>\n        </el-form-item>\n        \n        <el-divider content-position=\"left\">区域管理</el-divider>\n        \n        <div class=\"zone-management\">\n          <div class=\"zone-list\">\n            <el-tag\n              v-for=\"(zone, index) in roomForm.zones\"\n              :key=\"index\"\n              closable\n              @close=\"removeZone(index)\"\n              class=\"zone-tag\">\n              {{ zone.name }}\n            </el-tag>\n            \n            <el-button \n              class=\"add-zone-btn\" \n              size=\"small\" \n              type=\"primary\" \n              icon=\"el-icon-plus\"\n              @click=\"showAddZoneDialog\">\n              添加区域\n            </el-button>\n          </div>\n        </div>\n        \n        <el-form-item label=\"设施\" prop=\"facilities\">\n          <el-checkbox-group v-model=\"roomForm.facilities\">\n            <el-checkbox label=\"wifi\">WiFi</el-checkbox>\n            <el-checkbox label=\"airConditioner\">空调</el-checkbox>\n            <el-checkbox label=\"sockets\">电源插座</el-checkbox>\n            <el-checkbox label=\"desk\">大桌</el-checkbox>\n            <el-checkbox label=\"water\">饮水机</el-checkbox>\n            <el-checkbox label=\"restroom\">卫生间</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"roomDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitRoomForm\" :loading=\"submitting\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 添加区域对话框 -->\n    <el-dialog\n      title=\"添加区域\"\n      v-model:visible=\"zoneDialogVisible\"\n      width=\"500px\"\n      append-to-body>\n      <el-form :model=\"zoneForm\" :rules=\"zoneRules\" ref=\"zoneFormRef\" label-width=\"100px\">\n        <el-form-item label=\"区域名称\" prop=\"name\">\n          <el-input v-model=\"zoneForm.name\" placeholder=\"例如：A区（靠窗）\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"区域代码\" prop=\"id\">\n          <el-input v-model=\"zoneForm.id\" placeholder=\"例如：A\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"区域特点\">\n          <el-checkbox-group v-model=\"zoneForm.features\">\n            <el-checkbox label=\"window\">靠窗</el-checkbox>\n            <el-checkbox label=\"power\">电源插座</el-checkbox>\n            <el-checkbox label=\"quiet\">安静区域</el-checkbox>\n            <el-checkbox label=\"large\">大桌</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        \n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input \n            type=\"textarea\" \n            v-model=\"zoneForm.description\" \n            :rows=\"2\" \n            placeholder=\"可选\"></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"zoneDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitZoneForm\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StudyRoomManagement',\n  data() {\n    return {\n      // 搜索\n      searchQuery: '',\n      \n      // 自习室数据\n      rooms: [],\n      filteredRooms: [],\n      loading: false,\n      \n      // 分页\n      pagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      \n      // 自习室表单\n      roomDialogVisible: false,\n      editMode: false,\n      roomForm: {\n        id: null,\n        name: '',\n        location: '',\n        category: 'general',\n        capacity: 100,\n        openingHours: '08:00-22:00',\n        status: 'open',\n        description: '',\n        zones: [],\n        facilities: ['wifi', 'airConditioner']\n      },\n      roomRules: {\n        name: [\n          { required: true, message: '请输入自习室名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        location: [\n          { required: true, message: '请输入自习室位置', trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: '请选择自习室类型', trigger: 'change' }\n        ],\n        capacity: [\n          { required: true, message: '请输入座位容量', trigger: 'blur' },\n          { type: 'number', min: 1, message: '容量必须大于0', trigger: 'blur' }\n        ],\n        openingHours: [\n          { required: true, message: '请输入开放时间', trigger: 'blur' },\n          { pattern: /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/, message: '时间格式不正确（例如：08:00-22:00）', trigger: 'blur' }\n        ]\n      },\n      submitting: false,\n      \n      // 区域表单\n      zoneDialogVisible: false,\n      zoneForm: {\n        id: '',\n        name: '',\n        features: [],\n        description: ''\n      },\n      zoneRules: {\n        name: [\n          { required: true, message: '请输入区域名称', trigger: 'blur' }\n        ],\n        id: [\n          { required: true, message: '请输入区域代码', trigger: 'blur' },\n          { pattern: /^[A-Z]$/, message: '区域代码应为一个大写字母', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    // 分页后的数据\n    paginatedRooms() {\n      const start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      const end = start + this.pagination.pageSize;\n      return this.filteredRooms.slice(start, end);\n    }\n  },\n  methods: {\n    // 获取自习室类型标签\n    getRoomCategoryLabel(category) {\n      const categoryMap = {\n        'quiet': '静音区',\n        'discussion': '讨论区',\n        'power': '电源区',\n        'general': '综合区'\n      };\n      return categoryMap[category] || category;\n    },\n    \n    // 获取自习室类型颜色\n    getRoomCategoryType(category) {\n      const typeMap = {\n        'quiet': 'success',\n        'discussion': 'warning',\n        'power': 'primary',\n        'general': 'info'\n      };\n      return typeMap[category] || '';\n    },\n    \n    // 获取状态标签\n    getRoomStatusLabel(status) {\n      const statusMap = {\n        'open': '开放中',\n        'closed': '已关闭',\n        'maintenance': '维护中'\n      };\n      return statusMap[status] || status;\n    },\n    \n    // 获取状态类型（标签颜色）\n    getRoomStatusType(status) {\n      const typeMap = {\n        'open': 'success',\n        'closed': 'danger',\n        'maintenance': 'info'\n      };\n      return typeMap[status] || '';\n    },\n    \n    // 获取占用率状态\n    getOccupancyStatus(current, total) {\n      const percentage = current / total * 100;\n      if (percentage >= 90) {\n        return 'exception';\n      } else if (percentage >= 70) {\n        return 'warning';\n      } else {\n        return 'success';\n      }\n    },\n    \n    // 搜索处理\n    handleSearch() {\n      this.filterRooms();\n    },\n    \n    // 筛选自习室\n    filterRooms() {\n      if (!this.searchQuery) {\n        this.filteredRooms = [...this.rooms];\n      } else {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredRooms = this.rooms.filter(room => {\n          return room.name.toLowerCase().includes(query) ||\n                 room.location.toLowerCase().includes(query);\n        });\n      }\n      \n      // 重置分页\n      this.pagination.currentPage = 1;\n    },\n    \n    // 加载自习室数据\n    loadRooms() {\n      this.loading = true;\n      \n      // 模拟API请求\n      setTimeout(() => {\n        // 生成模拟自习室数据\n        this.rooms = [\n          {\n            id: 1,\n            name: '一号自习室（静音区）',\n            location: '图书馆二楼东侧',\n            category: 'quiet',\n            capacity: 120,\n            currentOccupancy: 87,\n            openingHours: '08:00-22:00',\n            status: 'open',\n            description: '安静的学习环境，禁止大声交谈，适合需要安静环境的学习者。',\n            zones: [\n              { id: 'A', name: 'A区（靠窗）', features: ['window'] },\n              { id: 'B', name: 'B区（中间）', features: [] },\n              { id: 'C', name: 'C区（电源）', features: ['power'] }\n            ],\n            facilities: ['wifi', 'airConditioner', 'sockets', 'water']\n          },\n          {\n            id: 2,\n            name: '二号自习室（讨论区）',\n            location: '图书馆三楼西侧',\n            category: 'discussion',\n            capacity: 80,\n            currentOccupancy: 35,\n            openingHours: '09:00-21:00',\n            status: 'open',\n            description: '允许小声讨论，适合小组学习和协作项目。配备有讨论桌和白板。',\n            zones: [\n              { id: 'D', name: 'D区（靠窗）', features: ['window', 'large'] },\n              { id: 'E', name: 'E区（中间）', features: ['large'] },\n              { id: 'F', name: 'F区（电源）', features: ['power'] }\n            ],\n            facilities: ['wifi', 'airConditioner', 'sockets', 'desk', 'water', 'restroom']\n          },\n          {\n            id: 3,\n            name: '三号自习室（电源区）',\n            location: '教学楼一楼',\n            category: 'power',\n            capacity: 60,\n            currentOccupancy: 45,\n            openingHours: '08:30-21:30',\n            status: 'open',\n            description: '每个座位都配备电源插座，适合需要长时间使用电子设备的学习者。',\n            zones: [\n              { id: 'G', name: 'G区（靠窗）', features: ['window', 'power'] },\n              { id: 'H', name: 'H区（中间）', features: ['power'] }\n            ],\n            facilities: ['wifi', 'airConditioner', 'sockets']\n          },\n          {\n            id: 4,\n            name: '四号自习室（综合区）',\n            location: '教学楼二楼',\n            category: 'general',\n            capacity: 150,\n            currentOccupancy: 132,\n            openingHours: '07:00-23:00',\n            status: 'open',\n            description: '综合性自习室，分区明确，有安静区和讨论区。座位宽敞舒适。',\n            zones: [\n              { id: 'I', name: 'I区（靠窗）', features: ['window'] },\n              { id: 'J', name: 'J区（安静）', features: ['quiet'] },\n              { id: 'K', name: 'K区（讨论）', features: ['large'] },\n              { id: 'L', name: 'L区（电源）', features: ['power'] }\n            ],\n            facilities: ['wifi', 'airConditioner', 'sockets', 'desk', 'water', 'restroom']\n          },\n          {\n            id: 5,\n            name: '五号自习室（临时关闭）',\n            location: '图书馆一楼',\n            category: 'general',\n            capacity: 90,\n            currentOccupancy: 0,\n            openingHours: '08:00-22:00',\n            status: 'closed',\n            description: '因空调维修暂时关闭，预计下周恢复开放。',\n            zones: [\n              { id: 'M', name: 'M区（靠窗）', features: ['window'] },\n              { id: 'N', name: 'N区（中间）', features: [] }\n            ],\n            facilities: ['wifi', 'airConditioner', 'sockets', 'water']\n          }\n        ];\n        \n        this.filterRooms();\n        this.loading = false;\n      }, 500);\n    },\n    \n    // 刷新自习室数据\n    refreshRooms() {\n      this.loadRooms();\n    },\n    \n    // 分页相关方法\n    handleSizeChange(val) {\n      this.pagination.pageSize = val;\n    },\n    \n    handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n    },\n    \n    // 显示添加自习室对话框\n    showAddRoomDialog() {\n      this.editMode = false;\n      this.roomForm = {\n        id: null,\n        name: '',\n        location: '',\n        category: 'general',\n        capacity: 100,\n        openingHours: '08:00-22:00',\n        status: 'open',\n        description: '',\n        zones: [],\n        facilities: ['wifi', 'airConditioner']\n      };\n      \n      this.roomDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.roomFormRef.clearValidate();\n      });\n    },\n    \n    // 编辑自习室\n    handleEdit(row) {\n      this.editMode = true;\n      this.roomForm = JSON.parse(JSON.stringify(row)); // 深复制\n      \n      this.roomDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.roomFormRef.clearValidate();\n      });\n    },\n    \n    // 切换自习室状态\n    toggleRoomStatus(row) {\n      const action = row.status === 'closed' ? '开放' : '关闭';\n      \n      this.$confirm(`确定要${action}自习室\"${row.name}\"吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 模拟API请求\n        const newStatus = row.status === 'closed' ? 'open' : 'closed';\n        \n        // 更新本地数据\n        const index = this.rooms.findIndex(r => r.id === row.id);\n        if (index !== -1) {\n          this.rooms[index].status = newStatus;\n          if (newStatus === 'closed') {\n            this.rooms[index].currentOccupancy = 0;\n          }\n          \n          this.filterRooms();\n          this.$message.success(`自习室\"${row.name}\"已${action}`);\n        }\n      }).catch(() => {});\n    },\n    \n    // 删除自习室\n    handleDelete(row) {\n      this.$confirm(`确定要删除自习室\"${row.name}\"吗？此操作不可恢复！`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(() => {\n        // 模拟API请求\n        // 从本地数据中删除\n        this.rooms = this.rooms.filter(r => r.id !== row.id);\n        this.filterRooms();\n        this.$message.success(`自习室\"${row.name}\"已删除`);\n      }).catch(() => {});\n    },\n    \n    // 提交自习室表单\n    submitRoomForm() {\n      this.$refs.roomFormRef.validate(valid => {\n        if (!valid) return;\n        \n        this.submitting = true;\n        \n        // 模拟API请求\n        setTimeout(() => {\n          if (this.editMode) {\n            // 更新自习室\n            const index = this.rooms.findIndex(r => r.id === this.roomForm.id);\n            if (index !== -1) {\n              this.rooms[index] = { ...this.roomForm };\n              this.$message.success(`自习室\"${this.roomForm.name}\"更新成功`);\n            }\n          } else {\n            // 添加自习室\n            const newId = Math.max(...this.rooms.map(r => r.id), 0) + 1;\n            const newRoom = {\n              ...this.roomForm,\n              id: newId,\n              currentOccupancy: 0\n            };\n            \n            this.rooms.push(newRoom);\n            this.$message.success(`自习室\"${this.roomForm.name}\"添加成功`);\n          }\n          \n          this.filterRooms();\n          this.roomDialogVisible = false;\n          this.submitting = false;\n        }, 1000);\n      });\n    },\n    \n    // 显示添加区域对话框\n    showAddZoneDialog() {\n      this.zoneForm = {\n        id: '',\n        name: '',\n        features: [],\n        description: ''\n      };\n      \n      this.zoneDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.zoneFormRef.clearValidate();\n      });\n    },\n    \n    // 提交区域表单\n    submitZoneForm() {\n      this.$refs.zoneFormRef.validate(valid => {\n        if (!valid) return;\n        \n        // 检查区域代码是否重复\n        const isDuplicate = this.roomForm.zones.some(zone => zone.id === this.zoneForm.id);\n        if (isDuplicate) {\n          this.$message.error('区域代码已存在，请使用不同的代码');\n          return;\n        }\n        \n        // 添加到区域列表\n        this.roomForm.zones.push({ ...this.zoneForm });\n        this.$message.success('区域添加成功');\n        this.zoneDialogVisible = false;\n      });\n    },\n    \n    // 移除区域\n    removeZone(index) {\n      this.$confirm('确定要移除此区域吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.roomForm.zones.splice(index, 1);\n        this.$message.success('区域已移除');\n      }).catch(() => {});\n    }\n  },\n  mounted() {\n    this.loadRooms();\n  }\n};\n</script>\n\n<style scoped>\n.study-room-container {\n  padding-bottom: 20px;\n}\n\n.toolbar-card {\n  margin-bottom: 20px;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.search-box {\n  width: 300px;\n}\n\n.right-tools {\n  display: flex;\n  gap: 10px;\n}\n\n.room-card {\n  margin-bottom: 20px;\n}\n\n.room-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.count-num {\n  font-weight: bold;\n  color: #409EFF;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.occupancy-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.zone-management {\n  margin-bottom: 20px;\n}\n\n.zone-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: center;\n}\n\n.zone-tag {\n  margin-right: 5px;\n}\n\n.add-zone-btn {\n  margin-left: 10px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}